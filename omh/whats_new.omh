$Id:$
-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-16 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------

$begin whats_new$$
$spell
	ctor
	rcv
	cppad
	std
	fabs
	nlp
	Ipopt
	cxx
	cmake
	omhelp
	CppAD
	bool
	namespace
	rc
$$

$section Changes and Additions to cppad_mixed During 2017$$

$childtable%
	omh/whats_new_15.omh%
	omh/whats_new_16.omh
%$$

$head 03-20$$
$list number$$
$bold API:$$
remove $icode bool_sparsity$$ from $cref information_mat$$
(use the corresponding $cref/derived_ctor/derived_ctor/bool_sparsity/$$
argument in its place).
$lnext
Advance to $code cppad-20170320$$.
$lend

$head 03-12$$
$bold API:$$
change $cref/information_rcv/information_mat/information_rcv/$$
from type $cref sparse_mat_info$$ to
$cref/sparse_rcv/typedef/Sparse Types/sparse_rcv/$$.
This removes the last use of $code sparse_mat_info$$ from the
$cref public$$ part of $code cppad_mixed$$.
The intention here is to remove the $cref private$$ use slowly over time.


$head 03-11$$
$bold API$$
change $cref/A_rcv/derived_ctor/A_rcv/$$
from type $cref sparse_mat_info$$ to
$cref/sparse_rcv/typedef/Sparse Types/sparse_rcv/$$.

$head 03-10$$
Advance to $code cppad-20170310$$
(has a $cref/sparse_rc/typedef/Sparse Types/sparse_rc/$$ sizing constructor).

$head 03-09$$
Move some type definitions from the $code cppad_mixed$$ class
to the $code CppAD::mixed$$ namespace; see
$cref typedef$$.

$head 03-08$$
$list number$$
$bold API:$$
Move the arguments
$cref/bool_sparsity/derived_ctor/bool_sparsity/$$ and
$cref/A_rcv/derived_ctor/A_rcv/$$ from $cref initialize$$
to the base class constructor
$cref/cppad_mixed/derived_ctor/cppad_mixed/$$.
$lnext
$bold API:$$
Change $code a1d_vector$$ and $code a2d_vector$$ to
$code a1_vector$$ and $code a2_vector$$ respectively.
$lend

$head 03-06$$
$list number$$
Advance to $code cppad-20170306$$. This fixes a bug in the sparsity pattern
efficiency and in the optimization of
conditional expressions in $code CppAD::ADFun<%Base%>%$$ objects.
$lnext
Add the $cref/existing/example_install.sh/existing/$$ argument
to the example install script.
$lend

$head 03-02$$
$list number$$
Simplify the install procedure. Now it is only necessary to adjust
the settings in
$cref/run_cmake.sh/install_unix/Special Requirements/run_cmake.sh/$$.
(These settings are now automatically used by all the
$codei%bin/install_%package%.sh%$$ scripts.)
$lnext
The configuration variable $icode extra_cxx_flags$$
has been changed to $cref/cppad_cxx_flags/run_cmake.sh/cppad_cxx_flags/$$.
$lnext
Document the necessary install order for
$cref/special requirements/install_unix/Special Requirements/$$.
$lnext
Make some improvements to the $code bin/install_omhelp.sh$$ script
(this can be used to build the documentation for $code cppad_mixed$$.)
$lend

$head 03-01$$
$list number$$
The $code solution check failed$$ warning was being output
because the check was not properly accounting for the scaling.
This has been fixed.
$lnext
The scaling has be fixed to
correctly account for the constraints corresponding to absolute
value terms in the
$cref/negative log-density/cppad_mixed/Negative Log-Density Vector/$$.
$lnext
Document the fact that an
$cref/nlp_scaling_method/
optimize_fixed/fixed_ipopt_options/nlp_scaling_method/$$
cannot be specified for the fixed effects.
$lend

$head 01-26$$
Change the objective and constraint function scaling so that it is
done by Ipopt using it's user-scaling option.
This fixes the $cref ipopt_trace$$ so that it prints the original
objective (instead of the scaled object which depends on the starting point).

$head 01-24$$
The fixed effects
objective and constraint functions are now scaled so that
the maximum absolute norm of the gradient of each of these functions is one;
see $cref/
	nlp_scaling_method/
	optimize_fixed/
	fixed_ipopt_options/
	nlp_scaling_method
/$$.


$head 01-22$$
Some of the tests were using the integer function $code std::abs$$ by mistake.
Change $code abs$$ to $code fabs$$ so this does not happen.

$head 01-14$$
Increase the $code trace-adaptive$$ field width
for step size from 7 to 11 characters
(so that exponential format fits in the field); see
$cref/derivative_test/optimize_fixed/fixed_ipopt_options/derivative_test/$$.

$end
