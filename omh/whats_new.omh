$Id:$
-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-16 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------

$begin whats_new$$
$spell
	Cholesky
	CppAD
	namespace
	cppad
	dismod
	ldlt_ran_hes
	Eigen
	Wno
	valgrind
	bool
	cholmod
	iter
	cmake
	ldlt
	choleig
	ipopt
$$

$section Changes and Additions to cppad_mixed During 2016$$

$childtable%omh/whats_new_15.omh%$$

$head 06-07$$
$list number$$
When $cref box_newton$$ fails, change message from
$cref/fatal_error/public/User Defined Functions/fatal_error/$$ to
$cref/warning/public/User Defined Functions/warning/$$.
$lnext
Change the $code box_newton$$ convergence
$cref/tolerance/box_newton/options/tolerance/$$ to be in terms of the
Newton step (instead of projected gradient).
$lend


$head 06-06$$
Fix an minor error in $cref box_newton$$ line search termination criteria
(did not affect any test results).

$head 06-05$$
$list number$$
Make $cref box_newton$$ more robust by doing line search in a
scaled negative projected gradient direction.
(Step size of one in negative projected gradient direction
may be much too large or much too small).
$lnext
There was a bug in $cref ldlt_cholmod_solve_H$$ where an unnecessary
condition was check and failed. The example
$cref cholmod_solve2_a.cpp$$ has been change to demonstrate that
only a subset of the right hand side values matter.
$lnext
There was an error in the
$cref ldlt_eigen_logdet$$ function in the special case where the
determinant was zero. This has been fixed.
$lend


$head 06-04$$
Redirect CppAD error messages through
$cref/fatal_error/public/User Defined Functions/fatal_error/$$.

$head 06-03$$
Add the option to use
$cref/box_newton/optimize_random/options/box_newton_options/$$
to optimize the random effects.
This changes the user API for the following functions:

$subhead optimize_random$$
The $cref/options/optimize_random/options/$$ argument determines
if $code ipopt$$ or $code box_newton$$ is used.

$subhead optimize_fixed$$
The $icode random_options$$ have been split into
$cref/random_box_options/optimize_fixed/random_box_options/$$ and
$cref/random_ipopt_options/optimize_fixed/random_ipopt_options/$$.

$subhead sample_random$$
The $icode random_options$$ have been split into
$cref/random_box_options/sample_random/random_box_options/$$ and
$cref/random_ipopt_options/sample_random/random_ipopt_options/$$.

$head 05-15$$
$list number$$
The $cref sample_fixed$$ routine now uses an LDLT factorization of the
$cref/implicit information/sample_fixed/Theory/Implicit Information/$$
instead of the implicit covariance.
This is more efficient.
$lnext
Provide results from when matrix is invertible,
but not $cref/positive definite/sample_fixed/Positive Definite/$$.
This is intended to help determine which variables are
not determined by the model plus data.
$lnext
Remove $code sample_fixed$$ wish list item.
$lnext
Add the $code adaptive$$ and $code trace-adaptive$$ choices to the
$cref/derivative_test/optimize_fixed/fixed_options/derivative_test/$$
fixed effects options.
Note that this gives the user direct control over doing this test
(which can be time intensive for large problems).
$lend

$head 05-11$$
$list number$$
In $cref sample_fixed$$,
$cref/Replace/sample_conditional/Replaced/$$ the
$cref/conditional covariance
	/sample_conditional
	/Theory
	/Conditional Covariance
/$$
method by the
$cref/implicit covariance/sample_fixed/Theory/Implicit Covariance/$$
method.
$lnext
Return a warning when the
observed implicit covariance is not positive definite.
In addition, simulate samples from a modified covariance so user
can look for variables that vary a lot and are undetermined.
This method is suspect. It would be better to do this in information
matrix space;
see the $code sample_fixed$$ wish list item.
$lend

$head 05-08$$
$list number$$
Improve $cref sample_fixed$$ by removing fixed effects that have
their upper or lower limits active (or equal); see
$cref/fixed effects subset/sample_conditional/Theory/Fixed Effects Subset/$$.
With this change the $cref information_mat$$ only needs to be
positive definite on a subset of the fixed effects.
The example $cref sample_fixed_xam.cpp$$ demonstrates this fact.
$lnext
Change $cref sample_random$$ to use the
$cref/sparse observed information/theory/Sparse Observed Information/$$ method.
This reduces the memory and time for computing these samples.
$lend

$head 05-06$$
Fix a bug in the $cref information_mat$$ and $cref sample_fixed$$
when the number of random effects
$cref/n_random/derived_ctor/n_random/$$ was zero.

$head 05-04$$
Make some improvements to the solution check and its corresponding
warning message.

$head 05-03$$
$list number$$
Change $code cholmod$$ class to $cref ldlt_cholmod$$ class
and $code choleig$$ class to $cref ldlt_eigen$$ class.
$lnext
Change $code cholmod_cholesky$$ to
$cref/ldlt_cholmod/run_cmake.sh/ldlt_cholmod/$$ in $code run_cmake.sh$$.
$lnext
There was a problem choosing $code ldlt_cholmod$$ to be $code NO$$.
This has been fixed by changing the $cref ldlt_eigen_solve_H$$
function to work the same as the $cref ldlt_cholmod_solve_H$$ function.
$lnext
Add more detection, and reporting as a
$cref/fatal_error/public/User Defined Functions/fatal_error/$$,
when the Hessian w.r.t. the random effects
$latex f_{uu} ( \theta , u)$$ is not positive definite.
$lend


$head 04-29$$
Add an $cref cholmod_solve2_sim.cpp$$, an example that shows
how to use Cholmod to efficiently sample a distribution that
has covariance equal to the inverse of a sparse positive definite matrix.

$head 04-27$$
$list number$$
Add more discussion about the connection between the Lagrange multipliers
and the fixed effects bounds in the
$cref/fixed_solution/fixed_solution/fixed_lag/Bounds/$$ section.
$lnext
Relax the tolerance used by $code cppad_mixed$$
when checking if a fixed effect
$cref/bound/fixed_solution/fixed_lag/Bounds/$$
or a fixed constraint
$cref/bound/fixed_solution/fix_con_lag/Bounds/$$
is active. This should give better detection.
$lend



$head 04-23$$
There was bug whereby the $cref/solution/optimize_fixed/solution/$$
returned by $code optimize_fixed$$ would have non-zero values for
$cref/fixed_lag/fixed_solution/fixed_lag/$$ that should have been zero.
This has been fixed.

$head 04-19$$
Add $cref sample_random$$ for sampling the posterior of the random
effects given the fixed effects.

$head 04-18$$
Advance to newer version of CppAD; (must rerun $code bin/install_cppad.sh$$).
This fixed the remaining warnings when building a release version.

$head 04-17$$
Fix some errors and warnings when
$cref/cmake_build_type/run_cmake.sh/cmake_build_type/$$ was
$code RELEASE$$.


$head 04-16$$
$list number$$
The routine $cref ipopt_fixed_adaptive_derivative_check$$ now checks
$cref ipopt_fixed_eval_jac_g$$ in addition to
$cref ipopt_fixed_eval_grad_f$$.
$lnext
Fix a bug in the computation of the derivative of the random constraints
$cref ran_con_jac$$.
$lend

$head 04-10$$
$list number$$
If the gradient check $cref ipopt_fixed_adaptive_derivative_check$$ fails,
it now results in warning instead of a fatal error.
$lnext
Check the Hessian of the
$cref/random likelihood/theory/Random Likelihood, f(theta, u)/$$
$latex f_uu ( \theta , u)$$ is positive definite.
$lend

$head 04-15$$
Fix $cref sample_fixed$$ so that it now works properly
when some of the components of $cref fix_constraint$$ are active.

$head 04-09$$
Improve documentation of
$cref/fixed_options/optimize_fixed/fixed_options/$$
and add the special case of
$cref/max_iter/optimize_fixed/fixed_options/max_iter/$$
equal to $code -1$$.


$head 04-08$$
$list number$$
Changed $cref ipopt_fixed_adaptive_derivative_check$$ to handle case where
the function at both central difference points is zero,
and the derivatives is also zero.
$lnext
Test (and fix) $cref sample_fixed$$ for a case where one of the fixed effects
was at its upper or lower limit.
$lend

$head 04-07$$
$list number$$
The new routine $cref sample_fixed$$ samples from the posterior
distribution for the estimate of the fixed effects.
$lnext
Changed $cref ipopt_fixed_adaptive_derivative_check$$ to down to step size
$code 1e-9$$ (used to just go to $code 1e-7$$.
In addition, in error report changed $code step=$$ to $code best_step=$$.
$lend


$head 04-06$$
The user defined virtual routines
$cref/fatal_error/public/User Defined Functions/fatal_error/$$
and
$cref/warning/public/User Defined Functions/warning/$$
have new examples in $cref derived_ctor_xam.cpp$$.
All the other user defined virtual routines examples
have been simplified.
To be specific, each has its own specific example.
In addition, the $cref user$$ examples have been split in
the user defined routines, $code cppad_mixed$$ defined routines,
and other examples.

$head 04-05$$
The new routine $cref information_mat$$ computes
the observed information matrix.

$head 04-03$$
There was an error (introduced on 04-02 )
in the new $cref/syntax/optimize_fixed/Syntax/$$
for $code optimize_fixed$$. This has been fixed.

$head 04-02$$
Add a brief description for each of the
$cref/user defined functions/public/User Defined Functions/$$.

$head 04-01$$
$bold API Change:$$
The $cref optimize_fixed$$ routine now returns the optimal Lagrange
multipliers (as well as the optimal fixed effects). If $icode fixed_out$$
was the return value for the previous version of $code optimize_fixed$$,
and $icode solution$$ is the current return value,
$codei%
	%fixed_out% = %solution%.fixed_opt
%$$.
This shows how to convert old $code optimize_fixed$$ calls to the new form.

$head 03-29$$
Add the option for a user defined $cref ran_likelihood_hes$$ function.

$head 03-28$$
$list number$$
Add the $cref ran_likelihood_xam.cpp$$ example.
$lnext
Add the option for a user defined $cref ran_likelihood_jac$$ function.
$lend

$head 03-09$$
The summary of memory usage has been changed; see
$cref/size_map/initialize/size_map/$$.

$head 02-26$$
Fix a bug in the use of $cref ldlt_cholmod_solve_H$$.
to be specific, accessing past the end of the
$cref/row/ldlt_cholmod_solve_H/row/$$ vector, in addition it must be
in increasing order (and was not specified as such).

$head 02-06$$
$list number$$
Change the random constraint matrix $icode A_info$$
to be an argument to the
$cref/derived class constructor/derived_ctor/A_info/$$
instead of an argument to the
$cref initialize$$ routine.
$lnext
Simplify the random constraint matrix source code.
$lnext
Make more efficient use of
the $code cholmod$$ Cholesky factorization package.
$lend

$head 01-26$$
Remove the old $cref ldlt_cholmod$$ wish list its (completed) and add a
$cref/second order method/wish_list/Second Order Method/$$ item.

$head 01-25$$
$list number$$
Make $cref/SuiteSparse/install_unix/Special Requirements/SuiteSparse/$$
a required package.
$lnext
Change the $cref run_cmake.sh$$ argument
$code set_sparsity$$ to $cref/bool_sparsity/run_cmake.sh/bool_sparsity/$$
(so that the default value is $code YES$$).
$lnext
Add the option to use $code cholmod$$ for sparse Cholesky factorization;
see $cref/ldlt_cholmod/run_cmake.sh/ldlt_cholmod/$$.
$lend

$head 01-22$$
It is no longer necessary to link a separate $code cppad_mixed_eigen$$
library. In addition, the new example $cref check_install.sh$$
demonstrates compiling, linking and running a program using
$code cppad_mixed$$.

$head 01-21$$
Change default directory where $code bin/install_eigen.sh$$ places
the Eigen package (because warnings are suppressed for this directory).

$head 01-19$$
Fix a bug (found by $code valgrind$$) in the setting of the upper bound
$cref/g_u/ipopt_fixed_get_bounds_info/g_u/$$ for the
$cref/random constraints
	/cppad_mixed
	/Problem
	/Random Constraints
/$$.

$head 01-16$$
$list number$$
Include the constraint matrix $cref/A/capture_xam.cpp/A/$$
in implementation and documentation of the $cref capture_xam.cpp$$ example.
In addition, check that the result satisfies the constraint that
the sum of the random effects is zero.
$lnext
Start a $cref wish_list$$.
$lend


$head 01-15$$
Add a $cref/Lasso/lasso_xam.cpp/$$ example.

$head 01-14$$
$list number$$
First version that actually works with
$cref/random constraints/cppad_mixed/Problem/Random Constraints/$$.
For example, see $cref ran_constraint_xam.cpp$$.
$lnext
Fix a bug when combining absolute value terms
with $cref fix_constraint$$.
In change the default $cref/warning/public/User Defined Functions/warning/$$
so that it does not abort ($code assert(false)$$).
Furthermore, change the tolerance in one of the solution tests
to avoid a warning (when convergence has been achieved).
$lend

$head 01-13$$
Add test of absolute value terms in the
$cref/negative log-density vector/cppad_mixed/Negative Log-Density Vector/$$
$cref abs_density_xam.cpp$$,
and fix a bug demonstrated by the test.

$head 01-10$$
Go back to using column vectors when solving linear equations
(in case matrix results would be dense and require a lot of memory).

$head 01-09$$
$list number$$
The $cref/Cholesky factorization/ldlt_eigen/$$ of the Hessian
with respect to the random effects has been changed from a static
variable to the private member variable
$cref/ldlt_ran_hes_/private/ldlt_ran_hes_/$$.
This has many advantages; e.g.,
it allows for multiple $cref derived_ctor$$ objects.
$lnext
Remove the need for the
$code -Wno-shadow$$ and $code -Wno-deprecated-declarations$$ options
when compiling Eigen files by using the CMake system option
for the
$href%http://eigen.tuxfamily.org%Eigen%$$ include directories.
This should work on more systems.
$lend

$head 01-05$$
Improve the efficiency of the evaluation of the
$cref optimize_fixed$$ objective function.
To be specific, $cref/update/update_factor/$$ the Cholesky
factor of $latex f_{u,u} [ \theta , \hat{u} ( \theta ) ]$$
when there is a change in the fixed effects vector $latex \theta$$.
In addition, use matrices, instead of just column vectors,
when back solving (to simplify code and allow sparse solver
to obtain more efficiency).

$head 01-04$$
Regroup information in $cref theory$$ section of documentation so that
$cref/approximating optimal random effects
	/theory
	/Approximate Optimal Random Effects
/$$ is a separate section.

$head 01-01$$
$list number$$
Advance to newer version of CppAD; (must rerun $code bin/install_cppad.sh$$).
$lnext
Change package name in copyright message from $code dismod_at$$ to
$code cppad_mixed$$.
This should have been done when $code cppad_mixed$$ was extracted
from $code dismod_at$$.
$lend

$end
