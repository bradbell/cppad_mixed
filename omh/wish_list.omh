$Id:$
-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-16 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin wish_list$$
$spell
	CppAD
	cppad
	Kedem
$$

$section CppAD Mixed Wish List$$

$head Student's T$$
There is a problem using the absolute value terms in the
$cref/negative log-density vector/cppad_mixed/Negative Log-Density Vector/$$
to obtain robust fitting of data and outlier detection.
To be specific, each such data point results in an extra auxiliary variable
in the optimization problem.
If there is lots of data, this makes the optimization problem very large.
$href%https://amath.washington.edu/people/aleksandr-aravkin%Sasha%$$
suggested using Student's t-distribution which would yield robust fitting
and outlier detection, and does not suffer from this problem.
Even better is the fact that it can be used with data that depends
on the random effects (because it is smooth).


$head Aborting Optimization$$
It would be helpful to return the fixed and random effects
that correspond to the last attempted function evaluations that fail;
i.e., that result in $code nan$$.

$head Second Order Method$$
The second order method,
when $cref/quasi_fixed/derived_ctor/quasi_fixed/$$ is false,
uses the second order approximate optimal random effects
$cref/W(beta, theta, u)
	/theory
	/Approximate Optimal Random Effects
	/Second Order, W(beta, theta, u)
/$$.
It might be an improvement to use the two partial Newton step method.
Perhaps a reverse over a forward Kedem method would be better.
See
$italic
Newton step methods for AD of an Objective defined using implicit functions
$$
.


$head Random Constraints$$
Include the lagrange multipliers for the
$cref/random constraints
	/cppad_mixed
	/Notation
	/Random Constraint Matrix, A
/$$
in the $cref optimize_fixed$$ and $cref sample_fixed$$ interfaces.

$head sparse_mat_info$$
Use $cref sparse_mat_info$$ instead of
$icode row$$, $icode col$$, $icode val$$ triples
in syntax for following routines:
$cref fix_con_hes$$,
$cref fix_con_jac$$,
$cref fix_like_hes$$,
$cref fix_like_jac$$,
$cref ran_objcon_hes$$.

$head Windows Install$$
Make and test a set of Windows install instructions for $code cppad_mixed$$.

$end
