$Id:$
-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-16 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------

$begin whats_new_17$$
$spell
	ctor
	rcv
	cppad
	std
	fabs
	nlp
	Ipopt
	cxx
	cmake
	omhelp
	CppAD
	bool
	namespace
	rc
	optimizer
	obj_tst
	hpp
	messaging
$$

$section Changes and Additions to cppad_mixed During 2017$$

$childtable%
	omh/whats_new/15.omh%
	omh/whats_new/16.omh
%$$

$head 09-18$$
If during $cref optimize_random$$ an $code nan$$ occurs in the random
objective, the corresponding source code is re-run with the random
effects corresponding to the last such occurrence.
This often provides more useful error messaging.

$head 09-16$$
The optimization of the random effects, $cref optimize_random$$,
has been changed to back up when it detects a $code nan$$ in the function
evaluation. This is similar to how $cref optimize_fixed$$ works.

$head 09-15$$
$list number$$
The $code cmake.sh$$ configuration flag $code log_fatal_error$$ was removed.
$lnext
An $cref/intermediate_callback/ipopt_xam_intermediate_callback/$$
function was added to the Ipopt example.
$lend

$head 09-14$$
The $code fixed_solution$$ structure was changed to be
$cref/public/fixed_solution/Public/$$.
This was necessary because it is the type for the return
value of $cref optimize_fixed$$ which is a public routine.

$head 09-02$$
Instructions were added for building both
$cref/debug and release/run_cmake.sh/Prefixes/Debug and Release/$$
version of $code cppad_mixed$$.

$head 08-30$$
Advance to cppad-20170830. This fixes a problem with the cmake command;
to be specific,
$codei%
	Policy CMP0046 is not set: Error on non-existent dependency
%$$

$head 08-01$$
The clang-802.0.42 compiler complained that
routine $code ran_obj_tst$$ was not defined in the statement
$srccode%cpp%
	friend bool ::ran_obj_tst(void);
%$$
in the file $code include/cppad/mixed/cppad_mixed.hpp$$.
This has been fixed.

$head 04-24$$
Add $cref/fixed_scale/optimize_fixed/fixed_scale/$$ for specifying the
scale for the fixed effects optimization.
Change the $cref optimize_fixed.cpp$$ example to use $icode fixed_scale$$
to continue an optimization from where it left off.

$head 04-23$$
$list number$$
Improve the $cref/ipopt example/ipopt_xam/$$ by returning and checking
the final solution for the primal variables.
$lnext
Include $cref/syntax/check_install.sh/Syntax/$$ and
setting $cref/LD_LIBRARY_PATH/check_install.sh/LD_LIBRARY_PATH/$$
in the $code bin/check_install.sh$$ example.
$lnext
Add the
$cref/hide_ipopt_scaling/run_cmake.sh/hide_ipopt_scaling/$$ option
to the install configuration script $code bin/run_cmake.sh$$.
$lend

$head 04-06$$
Add $cref/LD_LIBRARY_PATH/check_install.sh/LD_LIBRARY_PATH/$$ to
the $code bin/check_install.sh$$ example.

$head 04-02$$
$list number$$
Advanced to $code cppad-20170402$$.
This fixes a bug in the CppAD optimizer.
$lnext
Simplify the install procedure by using
$cref/build_type/run_cmake.sh/build_type/$$ and
$cref/prefix/run_cmake.sh/Prefixes/$$ values in $code run_cmake.sh$$
during the other installs.
The $cref install_unix$$ procedure has been modified to reflect
this change.
$lend

$head 03-27$$
Add $code no_conditional_skip$$ option to CppAD function optimization
when $cref/optimize_cppad_function/run_cmake.sh/optimize_cppad_function/$$
is $code yes$$.

$head 03-25$$
Advance to $code cppad-20170320$$.
This gave a significant improvement in
$icode optimize_fixed_seconds$$ for $cref ar1_xam.cpp$$
and both
$icode optimize_fixed_seconds$$, $icode initialize_bytes$$,
for $cref capture_xam.cpp$$.
This was due to a change in the way CppAD computes sparse Hessians
(see the heading 03-25 on the CppAD whats new page for 2017).


$head 03-23$$
$bold API:$$
The actual fields in the $code initialize$$ return value are no longer
specified; see $cref/size_map/initialize/size_map/$$.

$head 03-20$$
$list number$$
$bold API:$$
remove $icode bool_sparsity$$ from $cref information_mat$$
(use the corresponding $cref/derived_ctor/derived_ctor/bool_sparsity/$$
argument in its place).
$lnext
Advance to $code cppad-20170320$$.
$lend

$head 03-12$$
$bold API:$$
change $cref/information_rcv/information_mat/information_rcv/$$
from type $cref sparse_mat_info$$ to
$cref/sparse_rcv/typedef/Sparse Types/sparse_rcv/$$.
This removes the last use of $code sparse_mat_info$$ from the
$cref public$$ part of $code cppad_mixed$$.
The intention here is to remove the $cref private$$ use slowly over time.


$head 03-11$$
$bold API$$
change $cref/A_rcv/derived_ctor/A_rcv/$$
from type $cref sparse_mat_info$$ to
$cref/sparse_rcv/typedef/Sparse Types/sparse_rcv/$$.

$head 03-10$$
Advance to $code cppad-20170310$$
(has a $cref/sparse_rc/typedef/Sparse Types/sparse_rc/$$ sizing constructor).

$head 03-09$$
Move some type definitions from the $code cppad_mixed$$ class
to the $code CppAD::mixed$$ namespace; see
$cref typedef$$.

$head 03-08$$
$list number$$
$bold API:$$
Move the arguments
$cref/bool_sparsity/derived_ctor/bool_sparsity/$$ and
$cref/A_rcv/derived_ctor/A_rcv/$$ from $cref initialize$$
to the base class constructor
$cref/cppad_mixed/derived_ctor/cppad_mixed/$$.
$lnext
$bold API:$$
Change $code a1d_vector$$ and $code a2d_vector$$ to
$code a1_vector$$ and $code a2_vector$$ respectively.
$lend

$head 03-06$$
$list number$$
Advance to $code cppad-20170306$$. This fixes a bug in the sparsity pattern
efficiency and in the optimization of
conditional expressions in $code CppAD::ADFun<%Base%>%$$ objects.
$lnext
Add the $cref/existing/example_install.sh/existing/$$ argument
to the example install script.
$lend

$head 03-02$$
$list number$$
Simplify the install procedure. Now it is only necessary to adjust
the settings in
$cref/run_cmake.sh/install_unix/Special Requirements/run_cmake.sh/$$.
(These settings are now automatically used by all the
$codei%bin/install_%package%.sh%$$ scripts.)
$lnext
The configuration variable $icode extra_cxx_flags$$
has been changed to $cref/cppad_cxx_flags/run_cmake.sh/cppad_cxx_flags/$$.
$lnext
Document the necessary install order for
$cref/special requirements/install_unix/Special Requirements/$$.
$lnext
Make some improvements to the $code bin/install_omhelp.sh$$ script
(this can be used to build the documentation for $code cppad_mixed$$.)
$lend

$head 03-01$$
$list number$$
The $code solution check failed$$ warning was being output
because the check was not properly accounting for the scaling.
This has been fixed.
$lnext
The scaling has be fixed to
correctly account for the constraints corresponding to absolute
value terms in the
$cref/negative log-density/cppad_mixed/Negative Log-Density Vector/$$.
$lnext
Document the fact that an
$cref/nlp_scaling_method/
optimize_fixed/fixed_ipopt_options/nlp_scaling_method/$$
cannot be specified for the fixed effects.
$lend

$head 01-26$$
Change the objective and constraint function scaling so that it is
done by Ipopt using it's user-scaling option.
This fixes the $cref ipopt_trace$$ so that it prints the original
objective (instead of the scaled object which depends on the starting point).

$head 01-24$$
The fixed effects
objective and constraint functions are now scaled so that
the maximum absolute norm of the gradient of each of these functions is one;
see $cref/
	nlp_scaling_method/
	optimize_fixed/
	fixed_ipopt_options/
	nlp_scaling_method
/$$.


$head 01-22$$
Some of the tests were using the integer function $code std::abs$$ by mistake.
Change $code abs$$ to $code fabs$$ so this does not happen.

$head 01-14$$
Increase the $code trace-adaptive$$ field width
for step size from 7 to 11 characters
(so that exponential format fits in the field); see
$cref/derivative_test/optimize_fixed/fixed_ipopt_options/derivative_test/$$.

$end
