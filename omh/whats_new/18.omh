-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-21 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------

$begin whats_new_18$$
$spell
	hes
	suitesparse
	cppad
	gcc
	Wshadow
	Wconversion
	Wpedantic
	cxx
	cmake
	cholesky
	Jacobian
	eval
	jac
	ipopt
	obj
	uninitialized
	hpp
	grep
	txt
	cholmod
	iter
	runtime
	eigen
	valgrind
	CppAD
	rcv
	namespace
	xam
$$

$section Changes and Additions to cppad_mixed During 2018$$

$head 10-08$$
$list number$$
Remove partial Newton step wish list item
(implemented on $cref/2018-06-30/whats_new_18/06-30/$$).
$lnext
Add $cref/multi-threading/wish_list/Multi-Threading and Statistics/$$
wish list item.
$lend

$head 09-25$$
Advance to $code cppad-20180925$$.
This enabled us to remove the need for two and three levels of AD; i.e.
$code a2_double$$ and $code a3_double$$.
The arguments and results for the $cref ran_likelihood$$ function
are now $cref/a1_vector/typedef/Vector Types/a1_vector/$$ objects instead of
$code a3_vector$$ objects.

$head 08-30$$
$bold API:$$
Remove the user defined versions of the Jacobian and Hessian
of the random likelihood with respect to the random effects;
$code ran_likelihood_jac$$ and $code ran_likelihood_hes$$.
These functions are no longer part of the API and are not used
(even if defined by the user).

$head 08-27$$
Advance to $code cppad-20180827$$

$head 08-22$$
$bold API:$$
Change the type $code CppAD::mixed::sparse_rcv$$ to
$cref/d_sparse_rcv/typedef/Sparse Types/d_sparse_rcv/$$
to better be more consistent with the other
CppAD mixed $cref/type definitions/typedef/$$.
This will require some minor changes to the user's code.
For example,
in the constructor for the derived class,
the type for $cref/A_rcv/derived_ctor/$$ has changed from
$code sparse_rcv$$ to $code d_sparse_rcv$$.

$head 08-20$$
Advance to $code cppad-20180820$$
(this version has optimization of dynamic parameters).

$head 08-18$$
$list number$$
Advance to $code cppad-20810818$$.
$lnext
Use Cppad dynamic parameters (new feature) to speed up the computation
of the Hessian of the objective
(when $cref/quasi_fixed/derived_ctor/quasi_fixed/$$ is true).
Cppad needs to improve its optimization of dynamic parameter calculations.
For example, the optimized tapes that compute the Hessian of
$cref/H(beta, theta, u)
	/theory/Approximate Laplace Objective, H(beta, theta, u)
/$$
are larger when $icode (theta, u)$$ are dynamic parameters
than when they are variables.
These tapes are about the same size before being optimized.
$lend


$head 08-09$$
Advance to $code cppad-20810809$$.
This fixed valgrind warnings and a bug in cppad.

$head 08-08$$
Advance to $code cppad-20810730$$.
This resulted is and speed improvement for the current version of the
$cref ar1_xam.sh$$ and $cref capture_xam.sh$$ tests.

$head 07-25$$
$list number$$
Add discussion of why the default
$icode eigen_prefix$$ in $code bin/run_cmake.sh$$is different
from the other prefixes.
$lnext
Change the name $code cppad_cxx_flags$$ to
$cref/extra_cxx_flags/run_cmake.sh/extra_cxx_flags/$$.
$lnext
Improve discussion of the
$cref/paths/install_unix/Paths/$$ needed during and after the install process.
$lnext
Improve detection
(during the $cref/install/install_unix/$$)
of when the default settings for
$cref/extra_cxx_flags/run_cmake.sh/extra_cxx_flags/$$ do not work.
$lend


$head 07-12$$
$list number$$
The fixed effects optimization will not try to backup and recover when
$cref/max_iter/optimize_fixed/fixed_ipopt_options/max_iter/$$ is minus
one for the fixed effects.
In addition, when running the debug (release) version, errors during
$cref initialize$$ will result in an runtime error
(call to $cref/fatal_error/base_class/User Defined Functions/fatal_error/$$).
This will gives the user the choice to seem the source code where
the error was detected when
$cref/build_type/run_cmake.sh/build_type/$$ is $code debug$$.
$lnext
Improve documentation for
$cref/quasi_fixed/derived_ctor/quasi_fixed/$$.
$lend

$head 06-30$$
$list number$$
Implement the partial Newton step update in definition of
the second order accurate approximation for the optimal random effects
$cref/W(beta, theta, u)
	/theory
	/Approximate Optimal Random Effects
	/Second Order, W(beta, theta, u)
/$$.
This should lead to a large improvement when the Hessian of the
random likelihood with respect to the random effects is sparse.
$lnext
The $code checkpoint_newton_step$$ setting in
$cref run_cmake.sh$$ has been removed.
$lend


$head 06-29$$
Advance to $code cppad-20180627$$.

$head 06-20$$
Advance to $code cppad-20180620$$.
This should use increase speed and use less memory during the
optimization of cppad functions; see
$cref/optimize_cppad_function/run_cmake.sh/optimize_cppad_function/$$.

$head 06-14$$
$list number$$
Some systems installs of
$cref/suitesparse/install_unix/System Requirements/suitesparse/$$
install $code cholmod.h$$ in the systems include path instead of
a $code suitesparse$$ subdirector of the system include path.
The install of $code cppad_mixed$$ now automatically detects both these cases.
$lnext
Advance to $code cppad-20180613$$.
This should use less memory during the optimization of cppad functions; see
$cref/optimize_cppad_function/run_cmake.sh/optimize_cppad_function/$$.
$lend

$head 06-09$$
$list number$$
Change the $code suitesparse$$ library from a special requirement
(using $code bin/install_suitesparse.sh$$) to a
$cref/system requirement/install_unix/System Requirements/suitesparse/$$.
$lnext
The $code replace$$ option for the $icode existing$$ argument to
$code bin/example_install.sh$$ was not working.
This has been fixed.
$lend

$head 06-04$$
Advance to using
$cref/cppad-20180604/install_unix/Special Requirements/CppAD/$$.
This will probably have no effect but might reduce the amount of memory
$code cppad_mixed$$ uses.

$head 05-21$$
Advance to using
$cref/cppad-20180521/install_unix/Special Requirements/CppAD/$$.
This should reduce the amount of memory
$code cppad_mixed$$ uses.

$head 05-07$$
Advance to using
$cref/cppad-20180507/install_unix/Special Requirements/CppAD/$$.
This should both increase the speed of $code cppad_mixed$$
and reduce the amount of memory it uses.

$head 05-03$$
Advance to using
$cref/cppad-20180503/install_unix/Special Requirements/CppAD/$$.
This should reduce the amount of memory used by $code cppad_mixed$$,
without adversely affecting its speed.

$head 04-06$$
The $code limited_memory_max_history$$ setting used to be forbidden as an
$cref/fixed_ipopt_option/optimize_fixed/fixed_ipopt_options/$$ because
it was chosen by $code cppad_mixed$$.
This has been changed and now the user can choose this ipopt option.

$head 03-22$$
In the wish list,
remove the Student's t item and change the
sparse_matrix item.

$head 03-10$$
The install $cref/download/install_unix/Download/$$ procedure was changed
to use the following command to determine the version number:
$codep
	grep '^SET(cppad_mixed_version' CMakeLists.txt
$$

$head 02-20$$
Some function declarations for friends in $code cppad_mixed.hpp$$
were missing. This has been fixed.

$head 02-12$$
Add more discussion of
$cref/fixed_scale/optimize_fixed/fixed_scale/$$.

$head 02-11$$
Avoid warning: 'obj_factor_scaled' may be used uninitialized in eval_h
on some systems.

$head 02-10$$
$list number$$
The $code hide_ipopt_scaling$$ option was removed from the
$cref/cmake command/run_cmake.sh/$$ and the scaling is always
hidden from ipopt.
$lnext
Improve discussion of the $cref/fixed_scale/optimize_fixed/fixed_scale/$$
argument to the $code optimize_fixed$$ function.
$lend

$head 02-08$$
There was a bug in computing the second derivative of the objective when the
$cref fix_likelihood$$ had absolute value terms in its
$cref/negative log-density vector/cppad_mixed/Negative Log-Density Vector/$$.
This has been fixed.

$head 02-07$$
$list number$$
Change the $code adaptive$$ and $code trace-adaptive$$
$cref/derivative_test/optimize_fixed/fixed_ipopt_options/derivative_test/$$
options so they check that components of the Jacobian, evaluated by
$code eval_jac_g$$ in $code ipopt_fixed_eval_jac_g$$,
that are not in the sparsity pattern, are zero.
$lnext
Change adaptive derivative check to test Hessian evaluated by
$code eval_h$$ in $code ipopt_fixed_eval_h$$,
when $cref/quasi_fixed/derived_ctor/quasi_fixed/$$ is false.
$lnext
Change the ipopt $code eval_h$$ documentation to specify either
upper or lower triangle; e.g., see
$icode iRow$$ in $code ipopt_xam_eval_h$$.
$lend

$head 02-05$$
$list number$$
The scaling of the fixed effects optimization has been
changed to not include components of the fixed effects for which
the lower and upper limits are equal; see
$cref/fixed_scale/optimize_fixed/fixed_scale/$$.
$lnext
Reduce the changes of a random failure (false negative result)
during the testing of $cref lasso.cpp$$.
$lend

$head 01-23$$
There was a mistake in the removal of $icode use_atomic_cholesky$$;
see 01-21 below.  This has been fixed.

$head 01-22$$
Improve the instructions for combining both
$cref/debug and release/run_cmake.sh/Debug and Release/$$
versions of cppad_mixed on the same system.

$head 01-21$$
Remove the $icode use_atomic_cholesky$$ option from the
$cref/cmake/run_cmake.sh/$$ script.

$head 01-15$$
The flags $code -Wpedantic$$, $code -Wshadow$$ and $code -Wconversion$$
were added to the default value of
$cref/extra_cxx_flags/run_cmake.sh/extra_cxx_flags/$$.
In addition, fix the corresponding warning messages generated by gcc
during the
$cref/cppad_mixed/install_unix/cppad_mixed/$$ part of the instal process.

$head 01-14$$
Change the $code ran_likelihood_hes.cpp$$ example to use the
offset log normal distribution and eliminate the chance of random failure
during its test.

$end
