-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-21 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------

$begin whats_new_21$$
$spell
	cppad
	Ipopt
	msys
	cygwin
	op
	std
	obj_hes
$$

$section Changes and Additions to cppad_mixed During 2021$$

$head 05-28$$
$list number$$
Speed up the
$cref/adaptive/optimize_fixed/fixed_ipopt_options/derivative_test/$$
derivative test be starting at the smallest, instead of largest, step size.
$lnext
Further improvements and simplifications to solution check
and setting Lagrange multipliers; i.e.,
$cref/fixed_lag/fixed_solution/fixed_lag/$$,
$cref/fix_con_lag/fixed_solution/fix_con_lag/$$,
$cref/ran_con_lag/fixed_solution/ran_con_lag/$$.
$lnext
Remove the comments about the bounds corresponding to
$cref/fixed_lag/fixed_solution/fixed_lag/$$ because a new (better)
technique is used to detect when the Lagrange multipliers are zero.
$lnext
More testing of the solution check and fix some problem with it.
$lnext
Fix an improper derivative test option in the $code laplace_obj_hes$$ test
(introduced on 05-27).
$lend

$head 05-27$$.
Simplify the code for and improve the solution check.

$head 05-26$$
Fix a bug in using infinity (-infinity) as the bound for a
$cref/fix_constraint_upper/optimize_fixed/fix_constraint_upper/$$
( $cref/fix_constraint_lower/optimize_fixed/fix_constraint_lower/$$ ).
To be more specific, properly translate the infinity
to the special values used by ipopt for these cases.


$head 05-17$$
Add the catch of $code std::exception$$ to all try blocks,
except for ipopt call back functions.
This should improve detection of system errors; e.g., running
out of memory.

$head 05-15$$
$list number$$
The $cref/run_test/example_install.sh/run_test/$$ argument was added
and the $icode existing$$ argument was added to
$code bin/example_install.sh$$.
$lnext
The $icode existing$$ argument was changed to
$cref/replace/example_install.sh/replace/$$.
$lnext
When $cref/optimize_cppad_function/run_cmake.sh/optimize_cppad_function/$$
was yes, there was an error in the cppad optimization options.
To be specific, $code no_print_op$$ was corrected to $code no_print_for_op$$.
This was a bug and could cause the optimization to abort.
$lend

$head 05-11$$
Extend $cref example_install.sh$$ to work for the cygwin system.
This also required changing the $code cppad_mixed$$ library to be static
(on the cygwin system).

$head 05-07$$
$list number$$
Advance to cppad-20210430.
This should solve some install problems on the msys and cygwin systems.
$lnext
Create separate directories $code external/debug$$ and $code external/release$$
for building the external packages.
$lend

$head 05-01$$
Adapt the install for msys to the fact that soft links do now work
on that system.

$head 03-02$$
The $cref example_install.sh$$ script was putting the Ipopt source in
$code external/ASL.git/Mumps.git/Ipopt.git$$.
The script $code bin/install_ipopt.sh$$ has been fixed so the Ipopt source is in
$code external/Ipopt.git$$ and the Mumps source is in $code external/Mumps.git$$.

$end
