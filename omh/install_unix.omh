$Id:$
-----------------------------------------------------------------------------
cppad_mixed: C++ Laplace Approximation of Mixed Effects Models
          Copyright (C) 2014-16 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin install_unix$$
$dollar @$$
$spell
	grep
	https://github.com/bradbell/cppad_mixed.git
	metis
	cholmod
	Cholesky
	tarball
	xzf
	tgz
	ipopt
	config
	gsl-devel
	eigen
	CppAD
	libdir
	pkgconfig
	cmake
	suitesparse
	wget
$$

$section Installing cppad_mixed in Unix$$

$children%bin/example_install.sh
	%bin/run_cmake.sh
	%bin/check_install.sh
%$$

$head System Requirements$$
The following programs are required by cppad_mixed
and should have standard system installs:

$subhead C++ Compiler$$
The $code cppad_mixed$$ program can be compiled by any C++98 compliant compiler;
e.g., $code g++$$.
(Note that a C++11 compiler would be better.)

$subhead git$$
The $href%https://git-scm.com/%git%$$ program,
a source code version control system,
must be installed.

$subhead cmake$$
The $href%http://www.cmake.org/%cmake%$$ program,
which installs other programs,
must be installed.

$subhead pkg-config$$
The $href%http://www.freedesktop.org/wiki/Software/pkg-config/%pkg-config%$$
program must be installed.
After $code gsl$$ and $code ipopt$$ are installed
(see below), the following commands should work:
$codep%
	pkg-config gsl     --libs
	pkg-config ipopt   --libs
%$$
If one of them fails, a corresponding directory is missing
from the $code PKG_CONFIG_PATH$$ environment variable.

$subhead wget$$
The $href%https://www.gnu.org/software/wget/%wget%$$
program must be installed.

$subhead Fortran Compiler$$
A fortran compiler is required by $code ipopt$$ which in turn
is required by $code cppad_mixed$$.

$subhead gsl$$
$href%http://gnuwin32.sourceforge.net/packages/gsl.htm%gsl%$$,
the gnu scientific library.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install $code gsl-devel$$.

$head Special Requirements$$
The packages listed below are required by cppad_mixed
and may not have standard system installs.
The $codei%install_%package%$$ scripts below should be run
in the order that they appear.

$subhead run_cmake.sh$$
The settings in $cref%bin/run_cmake.sh%run_cmake.sh%$$ are used by the
scripts that install the special requirements. You must first change
these settings to the appropriate values for your system before
running these scripts.

$subhead eigen$$
The $href%http://eigen.tuxfamily.org%eigen%$$
linear algebra package.
The commands
$codei%
	cd cppad_mixed-20171211
	bin/install_eigen.sh
%$$
can be used to install this package.

$subhead Ipopt$$
The $href%https://projects.coin-or.org/Ipopt%Ipopt%$$
optimization package.
The commands
$codei%
	cd cppad_mixed-20171211
	bin/install_ipopt.sh
%$$
can be used to install this package.

$subhead SuiteSparse$$
The $href%http://faculty.cse.tamu.edu/davis/SuiteSparse%suitesparse%$$
sparse matrix package.
The commands
$codei%
	cd cppad_mixed-20171211
	bin/install_suitesparse.sh
%$$
can be used to install this package.

$subhead CppAD$$
The $href%http://www.coin-or.org/CppAD/%cppad%$$
C++ algorithmic differentiation package.
The commands
$codei%
	cd cppad_mixed-20171211
	bin/install_cppad.sh
%$$
can be used to install this package.

$head cppad_mixed$$
The steps above need to be executed once,
for each $cref/build_type/run_cmake.sh/build_type/$$ that you will used.
They do not need to be executed each new version of $code cppad_mixed$$
unless the $cref whats_new_17$$ release notes say otherwise.
The steps below will need to be executed each time you install
a new version of $code cppad_mixed$$:

$subhead Download$$
After installing the requirements above,
use the following command to get the current version of cppad_mixed:
$codei%
	git clone https://github.com/bradbell/cppad_mixed.git cppad_mixed.git
	cd cppad_mixed.git
%$$
You can determine the $icode git_hash$$ and version number
corresponding to this checkout of the master branch using the commands:
$codei%
	git show-ref | grep 'refs/heads/master'
	bin/version.sh get
%$$
You can checkout an old version corresponding to a specific $icode git_hash$$,
and check its version number, using the commands:
$codei%
	git checkout -q %git_hash%
	bin/version.sh get
%$$

$subhead Cmake Command$$
Starting in the $code cppad_mixed.git$$ directory:
The following command will configure $code cppad_mixed$$:
$codep
	bin/run_cmake.sh
$$

$subhead Check$$
Starting in the $code cppad_mixed.git$$ directory:
The following commands are optional and will
build and run the examples and correctness tests:
$codep
	cd build
	make check
	make speed
$$

$subhead Speed$$
Starting in the $code cppad_mixed.git$$ directory:
The following commands are optional and will
build and run the speed tests:
$codep
	cd build
	make speed
$$

$subhead Install$$
Starting in the $code cppad_mixed.git$$ directory:
The following command will
install the cppad_mixed library and include files:
$codep
	cd build
	make install
$$

$head Example$$

$subhead Installation$$
The file $cref example_install.sh$$ contains an example installation.

$subhead Linking$$
The file $cref check_install.sh$$ is an example of compiling, linking
and running using an
$cref/installed/install_unix/cppad_mixed/Install/$$ version of
$code cppad_mixed$$.

$subhead Using cppad_mixed$$
The files
$cref ar1_xam.cpp$$ and $cref capture_xam.cpp$$
contain examples and speed tests
of $code cppad_mixed$$.
These examples run when one executes the commands
$codep
	cd build
	make speed
$$

$end
