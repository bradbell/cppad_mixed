.. _information_mat-name:

!!!!!!!!!!!!!!!
information_mat
!!!!!!!!!!!!!!!

xrst input file: ``src/eigen/information_mat.cpp``

.. meta::
   :keywords: information_mat, compute, the, observed, information, for, fixed, effects

.. index:: information_mat, compute, the, observed, information, for, fixed, effects

.. _information_mat-title:

Compute the Observed Information For Fixed Effects
##################################################

.. meta::
   :keywords: deprecated, 2020-03-22

.. index:: deprecated, 2020-03-22

.. _information_mat@Deprecated 2020-03-22:

Deprecated 2020-03-22
*********************
Use :ref:`hes_fixed_obj-name` instead.

.. meta::
   :keywords: syntax

.. index:: syntax

.. _information_mat@Syntax:

Syntax
******

| *information_rcv* = *mixed_object* . ``information_mat`` (
| |tab| *solution* , *random_opt*
| )

.. meta::
   :keywords: purpose

.. index:: purpose

.. _information_mat@Purpose:

Purpose
*******
Compute the observed information matrix.
We use :math:`L ( \theta )` to denote the
:ref:`fixed effects objective<theory@Objective@Fixed Effects Objective, L(theta)>` .
The observed information is

.. math::

   L^{(2)} ( \hat{\theta} )

Absolute value terms in the
:ref:`problem@Negative Log-Density Vector`
for the :ref:`fix_likelihood-name` are not include in this Hessian
(because they do not have a derivative, let alone Hessian, at zero).

.. meta::
   :keywords: mixed_object

.. index:: mixed_object

.. _information_mat@mixed_object:

mixed_object
************
We use :ref:`derived_ctor@mixed_object`
to denote an object of a class that is
derived from the ``cppad_mixed`` base class.

.. meta::
   :keywords: solution

.. index:: solution

.. _information_mat@solution:

solution
********
is the :ref:`optimize_fixed@solution`
for a previous call to :ref:`optimize_fixed-name` .
Only the *solution* . ``fixed_opt`` field is used.

.. meta::
   :keywords: random_opt

.. index:: random_opt

.. _information_mat@random_opt:

random_opt
**********
is the optimal random effects corresponding to the solution; i.e.

| |tab| *random_opt* = *mixed_object* . ``optimize_random`` (
| |tab| |tab| *random_options* ,
| |tab| |tab| *solution* . ``fixed_opt`` ,
| |tab| |tab| *random_lower* ,
| |tab| |tab| *random_upper* ,
| |tab| |tab| *random_in*
| |tab| )

*random_options* ,
*random_lower* ,
*random_upper* , and
*random_in* , are the same
as in the call to ``optimize_fixed`` that corresponds to *solution* .

.. meta::
   :keywords: information_rcv

.. index:: information_rcv

.. _information_mat@information_rcv:

information_rcv
***************
The return value has prototype

   ``CppAD::mixed::d_sparse_rcv`` *information_rcv*

see :ref:`typedef@Sparse Types@d_sparse_rcv` .
This is a sparse matrix representation for the
lower triangle of the observed information matrix,
which is symmetric and hence determined by its lower triangle.
Absolute value terms in the
:ref:`problem@Negative Log-Density Vector`
for the :ref:`fix_likelihood-name` are not include in this Hessian
because they do not have a derivative (let alone Hessian) at zero.

.. meta::
   :keywords: example

.. index:: example

.. _information_mat@Example:

Example
*******
The file :ref:`information_mat.cpp-name` contains an example and
test of this routine. It returns true for success and false for failure.

.. toctree::
   :maxdepth: 1
   :hidden:

   information_mat.cpp
