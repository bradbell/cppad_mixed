.. include:: xrst_preamble.rst

.. _ar1_xam.sh-name:

!!!!!!!!!!
ar1_xam.sh
!!!!!!!!!!

xrst input file: ``bin/ar1_xam.sh``

.. meta::
   :keywords: ar1_xam.sh, example, using, ar1_xam

.. index:: ar1_xam.sh, example, using, ar1_xam

.. _ar1_xam.sh-title:

Example Using ar1_xam
#####################

.. meta::
   :keywords: syntax

.. index:: syntax

.. _ar1_xam.sh@Syntax:

Syntax
******
``bin/ar1_xam.sh`` *test2run*

.. meta::
   :keywords: test2run

.. index:: test2run

.. _ar1_xam.sh@test2run:

test2run
********
This argument must be one of the following:

.. meta::
   :keywords: normal

.. index:: normal

.. _ar1_xam.sh@test2run@normal:

normal
======
This test will just run :ref:`ar1_xam<ar1_xam.cpp-name>` .

.. meta::
   :keywords: callgrind

.. index:: callgrind

.. _ar1_xam.sh@test2run@callgrind:

callgrind
=========
This test will run ``ar1_xam`` with
``valgrind --tool=callgrind`` . This tool does execution profiling.

.. meta::
   :keywords: massif

.. index:: massif

.. _ar1_xam.sh@test2run@massif:

massif
======
This test will run ``ar1_xam`` with
``valgrind --tool=massif`` . This tool does memory profiling.

.. meta::
   :keywords: source, code

.. index:: source, code

.. _ar1_xam.sh@test2run@Source Code:

Source Code
===========

.. literalinclude:: ../../bin/ar1_xam.sh
   :lines: 50-125
   :language: sh
