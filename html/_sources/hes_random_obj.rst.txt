lines 6-65 of file: src/eigen/hes_random_obj.cpp

{xrst_begin hes_random_obj}

Compute the Hessian of The Random Effects Objective
###################################################

Syntax
******

| *hes_random_obj_rcv* = *mixed_object* . ``hes_random_obj`` (
| |tab| *fixed_vec* , *random_vec*
| )

Prototype
*********
{xrst_literal
   // BEGIN_PROTOTYPE
   // END_PROTOTYPE
}

Purpose
*******
Compute the Hessian of the
:ref:`theory@Random Likelihood, f(theta, u)@Random Effects Objective` ; i.e.,
:math:`f_{u,u} ( \theta , u )`.
There are no absolute value terms in the
:ref:`problem@Negative Log-Density Vector`
for the :ref:`ran_likelihood-name` .

mixed_object
************
We use :ref:`derived_ctor@mixed_object`
to denote an object of a class that is
derived from the ``cppad_mixed`` base class.

fixed_vec
*********
is the vector of fixed effects :math:`\theta` at which
the Hessian is evaluated.

random_vec
**********
is the vector of random effects :math:`u` at which
the Hessian is evaluated.

hes_random_obj_rcv
******************
The return value is a
:ref:`typedef@Sparse Types@d_sparse_rcv` representation
of the lower triangle of the Hessian.
(The Hessian is symmetric and hence determined by its lower triangle.)
{xrst_toc_hidden
   example/user/hes_random_obj.cpp
}

Example
*******
The file :ref:`hes_random_obj.cpp-name` contains an example and
test of this routine. It returns true for success and false for failure.

{xrst_end hes_random_obj}
