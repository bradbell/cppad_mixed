.. include:: xrst_preamble.rst

.. _warm_start_struct-name:

!!!!!!!!!!!!!!!!!
warm_start_struct
!!!!!!!!!!!!!!!!!

xrst input file: ``include/cppad/mixed/warm_start_struct.hpp``

.. meta::
   :keywords: warm_start_struct, ipopt, warm, start, information

.. index:: warm_start_struct, ipopt, warm, start, information

.. _warm_start_struct-title:

Ipopt Warm Start Information
############################

.. meta::
   :keywords: syntax

.. index:: syntax

.. _warm_start_struct@Syntax:

Syntax
******
``CppAD::mixed::warm_start_struct`` *warm_start*

.. meta::
   :keywords: prototype

.. index:: prototype

.. _warm_start_struct@Prototype:

Prototype
*********

.. literalinclude:: ../../include/cppad/mixed/warm_start_struct.hpp
   :lines: 86-97
   :language: cpp

.. meta::
   :keywords: mu

.. index:: mu

.. _warm_start_struct@mu:

mu
**
This is the warm start value for the barrier penalty parameter.

.. meta::
   :keywords: scale_f

.. index:: scale_f

.. _warm_start_struct@scale_f:

scale_f
*******
This is the cppad_mixed scaling factor for the ipopt objective function
:math:`f(x)`.

.. meta::
   :keywords: x_info

.. index:: x_info

.. _warm_start_struct@x_info:

x_info
******
If the size of this vector is zero, the size of *g_info*
must also be zero.
Otherwise, ``x_info`` has size equal to the number of primal variables
:math:`x`.
The *j*-th element of this vector contains the following fields:

.. meta::
   :keywords: x

.. index:: x

.. _warm_start_struct@x_info@x:

x
=
is the warm start value for x[j].

.. meta::
   :keywords: z_l

.. index:: z_l

.. _warm_start_struct@x_info@z_L:

z_L
===
is the warm start value for z_L[j].

.. meta::
   :keywords: z_u

.. index:: z_u

.. _warm_start_struct@x_info@z_U:

z_U
===
is the warm start value for z_U[j].

.. meta::
   :keywords: scale_x

.. index:: scale_x

.. _warm_start_struct@scale_x:

scale_x
*******
is the cppad_mixed scaling factor for x[j].

.. meta::
   :keywords: g_info

.. index:: g_info

.. _warm_start_struct@g_info:

g_info
******
If the size of *x_info* is non-zero,
``g_info`` has size equal to the number of :math:`g(x)` constraints.
The *i*-th element of this vector contains the following fields:

.. meta::
   :keywords: lambda

.. index:: lambda

.. _warm_start_struct@g_info@lambda:

lambda
======
is the warm start value for lambda[i].

.. meta::
   :keywords: scale_g

.. index:: scale_g

.. _warm_start_struct@g_info@scale_g:

scale_g
=======
is the cppad_mixed scaling factor for :math:`g_i(x)`.

.. meta::
   :keywords: public

.. index:: public

.. _warm_start_struct@Public:

Public
******
This structure is part of the CppAD Mixed user API.
