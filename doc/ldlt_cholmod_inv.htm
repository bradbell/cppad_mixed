<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Compute a Subset of the Inverse of Factored Matrix</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Compute a Subset of the Inverse of Factored Matrix">
<meta name="keywords" id="keywords" content=" compute subset the inverse factored matrix under construction syntax prototype private purpose ldlt_obj row_in col_in val_out method member variables sparseinv_p_ sparseinv_i_ out2sparseinv_order_ ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ldlt_cholmod_inv_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ldlt_cholmod_sim_cov.htm" target="_top">Prev</a>
</td><td><a href="ldlt_cholmod.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ldlt_cholmod</option>
<option>ldlt_cholmod_inv</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ldlt_cholmod_htm.js'></script>
</td>
<td>ldlt_cholmod_inv</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@

<center><b><big><big>Compute a Subset of the Inverse of Factored Matrix</big></big></b></center>

<br><a href="ldlt_cholmod_inv.htm#Under Construction" target="_top">Under&nbsp;Construction</a>
<br><a href="ldlt_cholmod_inv.htm#Syntax" target="_top">Syntax</a>
<br><a href="ldlt_cholmod_inv.htm#Prototype" target="_top">Prototype</a>
<br><a href="ldlt_cholmod_inv.htm#Private" target="_top">Private</a>
<br><a href="ldlt_cholmod_inv.htm#Purpose" target="_top">Purpose</a>
<br><a href="ldlt_cholmod_inv.htm#ldlt_obj" target="_top">ldlt_obj</a>
<br><a href="ldlt_cholmod_inv.htm#row_in" target="_top">row_in</a>
<br><a href="ldlt_cholmod_inv.htm#col_in" target="_top">col_in</a>
<br><a href="ldlt_cholmod_inv.htm#val_out" target="_top">val_out</a>
<br><a href="ldlt_cholmod_inv.htm#Method" target="_top">Method</a>
<br><a href="ldlt_cholmod_inv.htm#Member variables" target="_top">Member&nbsp;variables</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ldlt_cholmod_inv.htm#Member variables.sparseinv_p_" target="_top">sparseinv_p_</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ldlt_cholmod_inv.htm#Member variables.sparseinv_i_" target="_top">sparseinv_i_</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ldlt_cholmod_inv.htm#Member variables.out2sparseinv_order_" target="_top">out2sparseinv_order_</a>
<br><br>
<b><big><a name="Under Construction" id="Under Construction">Under Construction</a></big></b>


<br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i><font color="blue"><span style='white-space: nowrap'>.inv(</span></font><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_in</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>val_out</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<font color="#009900">void</font> ldlt_cholmod<font color="#990000">::</font><b><font color="#000000">inv</font></b><font color="#990000">(</font>
     <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;&amp;</font> row_in    <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;&amp;</font> col_in    <font color="#990000">,</font>
     CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font>       val_out   <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
The <a href="ldlt_cholmod.htm" target="_top"><span style='white-space: nowrap'>ldlt_cholmod</span></a>
 class is an
<a href="ldlt_cholmod.htm#Private" target="_top"><span style='white-space: nowrap'>implementation&nbsp;detail</span></a>
 and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This function solves for a subset of the inverse of the
sparse symmetric matrix that has been factored.

<br>
<br>
<b><big><a name="ldlt_obj" id="ldlt_obj">ldlt_obj</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::mixed::ldlt_cholmod&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
In addition, it must have a previous call to
<a href="ldlt_cholmod_update.htm" target="_top"><span style='white-space: nowrap'>ldlt_cholmod_update</span></a>
.

<br>
<br>
<b><big><a name="row_in" id="row_in">row_in</a></big></b>
<br>
This vector contains the row indices for the components of the
inverse that we are computing.
It is assumed that these indices are the same for every call to
<code><font color="blue">inv</font></code>.

<br>
<br>
<b><big><a name="col_in" id="col_in">col_in</a></big></b>
<br>
This vector contains the column indices for the components of the
inverse that we are computing. It must have the same size as 
<code><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i></code>
.
It is assumed that these indices are the same for every call to
<code><font color="blue">inv</font></code>.

<br>
<br>
<b><big><a name="val_out" id="val_out">val_out</a></big></b>
<br>
This matrix must have the same size as 
<code><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i></code>
.
The input values of its elements do not matter.
Upon return, it
contains the values for the components of the inverse that we are computing.
To be specific, for 
<code><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;0&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>K</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>val_out</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>

is 
<code><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>col_in</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 component of the inverse.

<br>
<br>
<b><big><a name="Method" id="Method">Method</a></big></b>
<br>
This routine uses the
<a href="install_unix.htm#System Requirements.suitesparse" target="_top"><span style='white-space: nowrap'>suitesparse</span></a>
 routine

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MATLAB_Tools/sparseinv/sparseinv.c<br>
</span></font></code>
to solve for the requested components of the inverse.

<br>
<br>
<b><big><a name="Member variables" id="Member variables">Member variables</a></big></b>
<br>
The first time this routine is called, the following member variable
as set to their permanent values:

<br>
<br>
<big><a name="Member variables.sparseinv_p_" id="Member variables.sparseinv_p_">sparseinv_p_</a></big>
<br>
This member variable has the prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;int&gt;&nbsp;sparseinv_p_<br>
</span></font></code>
Its initial size is zero.
After the first call to <code><font color="blue">inv</font></code>, it had size <code><font color="blue">nrow_+1</font></code>.
For 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;0,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;nrow_</span></font></code>
,

<code><font color="blue"><span style='white-space: nowrap'>sparseinv_p_[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is where the row indices for the <code><i>j</i></code>-th
column start.

<br>
<br>
<big><a name="Member variables.sparseinv_i_" id="Member variables.sparseinv_i_">sparseinv_i_</a></big>
<br>
This member variable has the prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;int&gt;&nbsp;sparseinv_i_<br>
</span></font></code>
Its initial size is zero.
After the first call to <code><font color="blue">inv</font></code>, it had size

<code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;sparseinv_p_[nrow_]<br>
%</span></font></code>

For each column index 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
, and for

<code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%k%&nbsp;=&nbsp;sparseinv_p_[%j%]&nbsp;,&nbsp;%...%,&nbsp;sparseinv_p[%j%+1]-1<br>
%</span></font></code>


<code><font color="blue"><span style='white-space: nowrap'>sparseinv_i_[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is the index of the next entry in the <code><i>j</i></code>-th
column of the sparse matrix.
Note that for each column, the corresponding row indices are in order; i.e.
sorted.
This sparse matrix includes all the indices in

<code><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>col_in</span></font></i></code>
,
all the indices in the factorization <code><font color="blue">factor_</font></code>,
and the transpose of the indices in <code><font color="blue">factor_</font></code>.

<br>
<br>
<big><a name="Member variables.out2sparseinv_order_" id="Member variables.out2sparseinv_order_">out2sparseinv_order_</a></big>
<br>
This member variable has the prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;size_t&gt;&nbsp;out2sparseinv_order_<br>
</span></font></code>
Its initial size is zero.
After the first call to <code><font color="blue">inv</font></code>,
it has the same size as 
<code><i><font color="black"><span style='white-space: nowrap'>val_out</span></font></i></code>
.
It is a mapping
from the indices in 
<code><i><font color="black"><span style='white-space: nowrap'>val_out</span></font></i></code>
 to the corresponding index in
the <code><font color="blue">sparseinv_i</font></code> structures.
Note that all the indices in

<code><i><font color="black"><span style='white-space: nowrap'>row_in</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>col_in</span></font></i></code>
 also appear in the representation
<code><font color="blue">sparseinv_p_</font></code>, <code><font color="blue">sparseinv_i_</font></code>.


<hr>Input File: src/cholmod/inv.cpp

</body>
</html>
