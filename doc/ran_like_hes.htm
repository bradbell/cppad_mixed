<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Hessian of Random Likelihood w.r.t. Random Effects</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Hessian of Random Likelihood w.r.t. Random Effects">
<meta name="keywords" id="keywords" content=" hessian random likelihood w.r.t. effects syntax prototype private assumptions purpose n_fixed n_random ran_jac_a1fun ran_hes_uu_rc theta_u ran_hes_uu_rcv example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ran_like_hes_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="logdet_jac.cpp.htm" target="_top">Prev</a>
</td><td><a href="ran_like_hes.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>base_class</option>
<option>private</option>
<option>ran_like_hes</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_base_class_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_private_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ran_like_hes_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Hessian of Random Likelihood w.r.t. Random Effects</big></big></b></center>

<br><a href="ran_like_hes.htm#Syntax" target="_top">Syntax</a>
<br><a href="ran_like_hes.htm#Prototype" target="_top">Prototype</a>
<br><a href="ran_like_hes.htm#Private" target="_top">Private</a>
<br><a href="ran_like_hes.htm#Assumptions" target="_top">Assumptions</a>
<br><a href="ran_like_hes.htm#Purpose" target="_top">Purpose</a>
<br><a href="ran_like_hes.htm#n_fixed" target="_top">n_fixed</a>
<br><a href="ran_like_hes.htm#n_random" target="_top">n_random</a>
<br><a href="ran_like_hes.htm#ran_jac_a1fun" target="_top">ran_jac_a1fun</a>
<br><a href="ran_like_hes.htm#ran_hes_uu_rc" target="_top">ran_hes_uu_rc</a>
<br><a href="ran_like_hes.htm#theta_u" target="_top">theta_u</a>
<br><a href="ran_like_hes.htm#ran_hes_uu_rcv" target="_top">ran_hes_uu_rcv</a>
<br><a href="ran_like_hes.htm#Example" target="_top">Example</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ran_hes_uu_rcv</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;ran_like_hes(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_fixed</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ran_jac_a1fun</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ran_hes_uu_rc</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>theta_u</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<font color="#008080">a1_sparse_rcv</font> <b><font color="#000000">ran_like_hes</font></b><font color="#990000">(</font>
     <font color="#008080">size_t</font>                                n_fixed         <font color="#990000">,</font>
     <font color="#008080">size_t</font>                                n_random        <font color="#990000">,</font>
     CppAD<font color="#990000">::</font>ADFun<font color="#990000">&lt;</font>a1_double<font color="#990000">,</font> <font color="#009900">double</font><font color="#990000">&gt;&amp;</font>      ran_jac_a1fun   <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font>                      ran_hes_uu_rc   <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> a1_vector<font color="#990000">&amp;</font>                      theta_u         <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This <code><font color="blue">cppad_mixed</font></code> member function is <a href="private.htm" target="_top"><span style='white-space: nowrap'>private</span></a>
.

<br>
<br>
<b><big><a name="Assumptions" id="Assumptions">Assumptions</a></big></b>
<br>
The member variable
<a href="init_ran_jac.htm#init_ran_jac_done_" target="_top"><span style='white-space: nowrap'>init_ran_jac_done_</span></a>
 is true.

<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This routine computes the Hessian of the random likelihood
<a href="theory.htm#Random Likelihood, f(theta, u)" target="_top"><span style='white-space: nowrap'>f(theta,&nbsp;u)</span></a>

with respect to the random effects vector <small>@(@
u
@)@</small>; i.e.
<small>@[@

	f_{uu} ( \theta, u )

@]@</small>

<br>
<br>
<b><big><a name="n_fixed" id="n_fixed">n_fixed</a></big></b>
<br>
number of fixed effects.

<br>
<br>
<b><big><a name="n_random" id="n_random">n_random</a></big></b>
<br>
number of random effects

<br>
<br>
<b><big><a name="ran_jac_a1fun" id="ran_jac_a1fun">ran_jac_a1fun</a></big></b>
<br>
This is the Jacobian of the random likelihood
with respect to the random effects
<small>@(@
f_u ( \theta, u )
@)@</small>.
The domain indices (range indices) are with respect to the random effects
(fixed and random effects); i.e.,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ran_jac_a1fun</span></font></i><font color="blue"><span style='white-space: nowrap'>.Domain()&nbsp;==&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_fixed</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ran_jac_a1fun</span></font></i><font color="blue"><span style='white-space: nowrap'>.Range()&nbsp;&nbsp;==&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="ran_hes_uu_rc" id="ran_hes_uu_rc">ran_hes_uu_rc</a></big></b>
<br>
This is the sparsity pattern for the
Hessian <small>@(@
f_{uu} ( \theta , u )
@)@</small>.
The indices in this matrix are just with respect to the random effects;
i.e., the row and column indices are between zero and  
<code><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i></code>
.

<br>
<br>
<b><big><a name="theta_u" id="theta_u">theta_u</a></big></b>
<br>
This argument contains the
<a href="cppad_mixed.htm#Notation.Fixed Effects, theta" target="_top"><span style='white-space: nowrap'>fixed&nbsp;effects</span></a>

vector 
<code><i><font color="black"><span style='white-space: nowrap'>theta</span></font></i></code>
 and the
<a href="cppad_mixed.htm#Notation.Random Effects, u" target="_top"><span style='white-space: nowrap'>random&nbsp;effects</span></a>

vector 
<code><i><font color="black"><span style='white-space: nowrap'>u</span></font></i></code>
 in that order

<br>
<br>
<b><big><a name="ran_hes_uu_rcv" id="ran_hes_uu_rcv">ran_hes_uu_rcv</a></big></b>
<br>
The return value
is the Hessian <small>@(@
f_{uu} ( \theta , u )
@)@</small>.
The indices in this matrix are just with respect to the random effects;
i.e., the row and column indices are between zero and  
<code><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i></code>
.



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="ran_like_hes.cpp.htm" target="_top"><span style='white-space: nowrap'>ran_like_hes.cpp</span></a>
 contains an example
and test of this procedure.
It returns true, if the test passes, and false otherwise.
----------------------------------------------------------------------------

<hr>Input File: src/ran_like_hes.cpp

</body>
</html>
