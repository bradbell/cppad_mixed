<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Return Information About Problem Sizes</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Return Information About Problem Sizes">
<meta name="keywords" id="keywords" content=" return information about problem sizes syntax n m nnz_jac_g nnz_h_lag index_style ok source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_xam_get_nlp_info_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ipopt_xam_ctor.htm" target="_top">Prev</a>
</td><td><a href="ipopt_xam_get_bounds_info.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ipopt_fixed</option>
<option>ipopt_xam</option>
<option>ipopt_xam_get_nlp_info</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ipopt_fixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ipopt_xam_htm.js'></script>
</td>
<td>ipopt_xam_get_nlp_info</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Return Information About Problem Sizes</big></big></b></center>

<br><a href="ipopt_xam_get_nlp_info.htm#Syntax" target="_top">Syntax</a>
<br><a href="ipopt_xam_get_nlp_info.htm#n" target="_top">n</a>
<br><a href="ipopt_xam_get_nlp_info.htm#m" target="_top">m</a>
<br><a href="ipopt_xam_get_nlp_info.htm#nnz_jac_g" target="_top">nnz_jac_g</a>
<br><a href="ipopt_xam_get_nlp_info.htm#nnz_h_lag" target="_top">nnz_h_lag</a>
<br><a href="ipopt_xam_get_nlp_info.htm#index_style" target="_top">index_style</a>
<br><a href="ipopt_xam_get_nlp_info.htm#ok" target="_top">ok</a>
<br><a href="ipopt_xam_get_nlp_info.htm#Source" target="_top">Source</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;get_nlp_info(</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>nnz_jac_g</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>nnz_h_lag</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>index_style</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="n" id="n">n</a></big></b>
<br>
is set to the number of variables in the problem (dimension of x).

<br>
<br>
<b><big><a name="m" id="m">m</a></big></b>
<br>
is set to the number of constraints in the problem (dimension of g(x)).

<br>
<br>
<b><big><a name="nnz_jac_g" id="nnz_jac_g">nnz_jac_g</a></big></b>
<br>
is set to the number of nonzero entries in the Jacobian of g(x).

<br>
<br>
<b><big><a name="nnz_h_lag" id="nnz_h_lag">nnz_h_lag</a></big></b>
<br>
is set to the number of nonzero entries in the
lower-left triangle of the Hessian of the Lagrangian
<small>@(@
f(x) + \lambda^\R{T} g(x)
@)@</small>.
(The Hessian is symmetric, and hence determined by its lower-left triangle.)

<br>
<br>
<b><big><a name="index_style" id="index_style">index_style</a></big></b>
<br>
is set to the numbering style used for row/col entries in the sparse matrix
format (C_STYLE: 0-based, FORTRAN_STYLE: 1-based).

<br>
<br>
<b><big><a name="ok" id="ok">ok</a></big></b>
<br>
if set to false, the optimization will treat this point like
it was not feasible
(the function could not be evaluated at this point).

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt><font color="#009900">bool</font> ipopt_nlp_xam<font color="#990000">::</font><b><font color="#000000">get_nlp_info</font></b><font color="#990000">(</font>
     Index<font color="#990000">&amp;</font>          n            <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     Index<font color="#990000">&amp;</font>          m            <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     Index<font color="#990000">&amp;</font>          nnz_jac_g    <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     Index<font color="#990000">&amp;</font>          nnz_h_lag    <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     IndexStyleEnum<font color="#990000">&amp;</font> index_style  <font color="#990000">)</font>  <i><font color="#9A1900">// out</font></i>
<font color="#FF0000">{</font>
     n           <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     m           <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     nnz_jac_g   <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     nnz_h_lag   <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     index_style <font color="#990000">=</font> C_STYLE<font color="#990000">;</font>
     <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/ipopt_run.cpp

</body>
</html>
