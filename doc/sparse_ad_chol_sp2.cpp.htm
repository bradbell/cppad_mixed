<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Sparse AD Cholesky Sparsity Calculation: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Sparse AD Cholesky Sparsity Calculation: Example and Test">
<meta name="keywords" id="keywords" content=" sparse ad cholesky sparsity calculation: example test problem permutation factor source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_ad_chol_sp2.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_ad_chol_sp1.cpp.htm" target="_top">Prev</a>
</td><td><a href="user.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_ad_cholesky</option>
<option>sparse_ad_chol_sp2.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse_ad_cholesky_htm.js'></script>
</td>
<td>sparse_ad_chol_sp2.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Sparse AD Cholesky Sparsity Calculation: Example and Test</big></big></b></center>

<br><a href="sparse_ad_chol_sp2.cpp.htm#Problem" target="_top">Problem</a>
<br><a href="sparse_ad_chol_sp2.cpp.htm#Permutation" target="_top">Permutation</a>
<br><a href="sparse_ad_chol_sp2.cpp.htm#Cholesky Factor" target="_top">Cholesky&nbsp;Factor</a>
<br><a href="sparse_ad_chol_sp2.cpp.htm#Source" target="_top">Source</a>
<br><br>
<b><big><a name="Problem" id="Problem">Problem</a></big></b>
<br>
We are given the function
<small>@(@
A : \B{R}^6 \rightarrow \B{R}^{4 \times 4}
@)@</small>
defined by
<small>@[@

	A(x) = \left( \begin{array}{cccc}
		x_0 & x_1  & 0   & 0   \\
		x_1 & x_2  & x_3 & 0   \\
		0   & x_3  & x_4 & x_5 \\
		0   & 0    & x_5 & x_6
	\end{array} \right)

@]@</small>
Note that the subscripts are in column major order for the
lower triangle of <small>@(@
A(x)
@)@</small>.

<br>
<br>
<b><big><a name="Permutation" id="Permutation">Permutation</a></big></b>
<br>
The fill reducing permutation
<a href="sparse_ad_cholesky.htm#Notation.P" target="_top"><span style='white-space: nowrap'>P</span></a>

transposes indices zero and one; i.e.
<small>@[@

	P= \left( \begin{array}{cccc}
		1   & 0    & 0  & 0  \\
		0   & 0    & 0  & 1  \\
		0   & 1    & 0  & 0  \\
		0   & 0    & 1  & 0  \\
	\end{array} \right)
	\; , \;
	P A(x) = \left( \begin{array}{cccc}
		x_0 & x_1  & 0   & 0   \\
		0   & 0    & x_5 & x_6 \\
		x_1 & x_2  & x_3 & 0   \\
		0   & x_3  & x_4 & x_5
	\end{array} \right)
	\; , \;
	P A(x) P^T = \left( \begin{array}{cccc}
		x_0 & 0   & x_1 & 0   \\
		0   & x_6 & 0   & x_5 \\
		x_1 & 0   & x_2 & x_3 \\
		0   & x_5 & x_3 & x_4
	\end{array} \right)

@]@</small>

<br>
<br>
<b><big><a name="Cholesky Factor" id="Cholesky Factor">Cholesky Factor</a></big></b>
<br>
Define the function
<small>@[@

	c(x) = x_3 / \sqrt{x_2 - x_1^2/ x_0}

@]@</small>
The Cholesky factor
<a href="sparse_ad_cholesky.htm#Notation.L" target="_top"><span style='white-space: nowrap'>L</span></a>
 is
<small>@[@

L(x) = \left(
\begin{array}{cccc}
\sqrt{x_0}       & 0                &  0                      & 0 \\
0                & \sqrt{x_6}       &  0                      & 0 \\
x_1 / \sqrt{x_0} & 0                & \sqrt{x_2 - x_1^2/ x_0} & 0 \\
0                & x_5 / \sqrt{x_6} & c(x) & \sqrt{x_4 - x_5^2 / x_6 - c(x)^2 }
\end{array}
\right)

@]@</small>
This can be verified by checking
<small>@(@
P * A(x) * P^\R{T} = L * L^\R{T}
@)@</small>.

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>    
    <b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
     <font color="#009900">bool</font> <b><font color="#000000">check_fun</font></b><font color="#990000">(</font>
          <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> x <font color="#990000">,</font>
          <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> y <font color="#990000">)</font>
     <font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
          <font color="#009900">double</font> eps <font color="#990000">=</font> <font color="#993399">100</font><font color="#990000">.</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
          <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
          <b><font color="#0000FF">using</font></b> std<font color="#990000">::</font>sqrt<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          ok <font color="#990000">&amp;=</font> y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">7</font><font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#009900">double</font> check <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          check <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">/</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          check <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          check <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">/</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          check <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">-</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">/</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#009900">double</font> c <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">/</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">-</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">/</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">],</font> c<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          check <font color="#990000">=</font> <b><font color="#000000">sqrt</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">]</font> <font color="#990000">-</font> x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">/</font> x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">-</font> c <font color="#990000">*</font> c <font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">],</font> check<font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <font color="#009900">bool</font> <b><font color="#000000">check_jac_sparsity</font></b><font color="#990000">(</font><font color="#008080">size_t</font> nx<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font> s<font color="#990000">)</font>
     <font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_0 (x) = sqrt( x_0 )</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">0</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_1 (x) = x_1 / sqrt(x_0)</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">1</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">||</font> j <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_2 (x) = sqrt(x_6)</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">2</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">6</font><font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_3 (x) = x_5 / sqrt(x_6)</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">3</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">5</font> <font color="#990000">||</font> j <font color="#990000">==</font> <font color="#993399">6</font> <font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_4 (x) = sqrt[ x_2 - x_1^2 / x_0 ]</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">4</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font> j <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">||</font> j <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">||</font> j <font color="#990000">==</font> <font color="#993399">2</font> <font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_5 (x) = c(x) = x_3 / sqrt[ x_2 - x_1^2 / x_0 ]</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">5</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font> j <font color="#990000">&lt;=</font> <font color="#993399">3</font> <font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// derivative of L_6 (x) = sqrt[ x_4 - x_5^2 / x_6  - c(x)^2 ]</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> s<font color="#990000">[</font> <font color="#993399">6</font> <font color="#990000">*</font> nx <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>j <font color="#990000">&lt;=</font> <font color="#993399">6</font><font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <font color="#009900">bool</font> <b><font color="#000000">check_hes_sparsity</font></b><font color="#990000">(</font><font color="#008080">size_t</font> nx<font color="#990000">,</font> <font color="#008080">size_t</font> k<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font> h<font color="#990000">)</font>
     <font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
          <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>k<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">case</font></b> <font color="#993399">0</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_0 (x) = sqrt( x_0 )</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">1</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_1 (x) = x_1 / sqrt(x_0)</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">||</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">2</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_2 (x) = sqrt(x_6)</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">6</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">6</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">3</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_3 (x) = x_5 / sqrt(x_6)</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">6</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">6</font><font color="#990000">);</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">5</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">6</font><font color="#990000">);</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>j <font color="#990000">==</font> <font color="#993399">5</font> <font color="#990000">&amp;&amp;</font> i <font color="#990000">==</font> <font color="#993399">6</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">4</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_4 (x) = sqrt[ x_2 - x_1^2 / x_0 ]</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">&lt;=</font> <font color="#993399">2</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">&lt;=</font> <font color="#993399">2</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">5</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_5 (x) = x_3 / sqrt[ x_2 - x_1^2 / x_0 ]</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">&lt;=</font> <font color="#993399">2</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">&lt;=</font> <font color="#993399">2</font><font color="#990000">);</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">&lt;=</font> <font color="#993399">2</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">);</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">==</font> <font color="#993399">3</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">&lt;=</font> <font color="#993399">2</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
               <b><font color="#0000FF">case</font></b> <font color="#993399">6</font><font color="#990000">:</font>
               <i><font color="#9A1900">// L_6 (x) = sqrt[ x_4 - x_5^2 / x_6  - c(x)^2 ]</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nx<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">bool</font> check <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
                         check <font color="#990000">|=</font> <font color="#990000">(</font>i <font color="#990000">&lt;=</font> <font color="#993399">6</font> <font color="#990000">&amp;&amp;</font> j <font color="#990000">&lt;=</font> <font color="#993399">6</font><font color="#990000">);</font>
                         ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font> i <font color="#990000">*</font> nx <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">==</font> check<font color="#990000">;</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    
<b><font color="#008080">               default:</font></b>
               ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
          <font color="#FF0000">}</font>
          <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
     <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <font color="#009900">bool</font> <b><font color="#000000">sparse_ad_chol_sp2</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
    <font color="#FF0000">{</font>     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font>d_vector<font color="#990000">;</font>
     <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font>                       ad_vector<font color="#990000">;</font>
     <b><font color="#0000FF">typedef</font></b> Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt; AD&lt;double&gt;, Eigen::ColMajor&gt;</font> sparse_ad_matrix<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> Eigen<font color="#990000">::</font>Dynamic<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#009900">bool</font> ok     <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
     <font color="#008080">size_t</font> nx <font color="#990000">=</font> <font color="#993399">7</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> ny <font color="#990000">=</font> <font color="#993399">7</font><font color="#990000">;</font>
     <font color="#008080">d_vector</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>nx<font color="#990000">),</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>ny<font color="#990000">);</font>
     <font color="#008080">ad_vector</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>nx<font color="#990000">),</font> <b><font color="#000000">ay</font></b><font color="#990000">(</font>ny<font color="#990000">);</font>
     ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.1</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.3</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">4.0</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     ax<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">6.0</font><font color="#990000">;</font>
     <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// create sparse_ad_cholesky object</font></i>
     <font color="#008080">size_t</font> nc <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
     <font color="#008080">sparse_ad_matrix</font> ad_Blow<font color="#990000">;</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font> <font color="#009900">int</font><font color="#990000">(</font>nc<font color="#990000">),</font> <font color="#009900">int</font><font color="#990000">(</font>nc<font color="#990000">)</font> <font color="#990000">);</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">];</font>
     ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font><font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">=</font> x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">];</font>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><font color="#008080">sparse_ad_cholesky</font> cholesky<font color="#990000">;</font>
     cholesky<font color="#990000">.</font><b><font color="#000000">initialize</font></b><font color="#990000">(</font> ad_Blow <font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// check that the permutation matrix P is as expected</font></i>
     Eigen<font color="#990000">::</font><font color="#008080">PermutationMatrix&lt;Dynamic, Dynamic&gt;</font> P <font color="#990000">=</font> cholesky<font color="#990000">.</font><b><font color="#000000">permutation</font></b><font color="#990000">();</font>
     Eigen<font color="#990000">::</font><font color="#008080">Matrix&lt;size_t, Dynamic, 1&gt;</font>  <b><font color="#000000">indices</font></b><font color="#990000">(</font>nc<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nc<font color="#990000">;</font> i<font color="#990000">++)</font>
               indices<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> i<font color="#990000">;</font>
     indices <font color="#990000">=</font> P <font color="#990000">*</font> indices<font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> indices<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> indices<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> indices<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> indices<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// create function object corresponding to L(x)</font></i>
     CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font> ax <font color="#990000">);</font>
     <font color="#008080">sparse_ad_matrix</font> ad_Alow<font color="#990000">;</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font> <font color="#009900">int</font><font color="#990000">(</font>nc<font color="#990000">),</font> <font color="#009900">int</font><font color="#990000">(</font>nc<font color="#990000">)</font> <font color="#990000">);</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">];</font>
     ad_Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font><font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">];</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#008080">sparse_ad_matrix</font> ad_L<font color="#990000">;</font>
     cholesky<font color="#990000">.</font><b><font color="#000000">eval</font></b><font color="#990000">(</font>ad_Alow<font color="#990000">,</font> ad_L<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#008080">size_t</font> iy <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nc<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>sparse_ad_matrix<font color="#990000">::</font><font color="#008080">InnerIterator</font> <b><font color="#000000">itr</font></b><font color="#990000">(</font>ad_L<font color="#990000">,</font> <font color="#009900">int</font><font color="#990000">(</font>j<font color="#990000">));</font> itr<font color="#990000">;</font> <font color="#990000">++</font>itr<font color="#990000">)</font>
               ay<font color="#990000">[</font>iy<font color="#990000">++]</font> <font color="#990000">=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">();</font>
     <font color="#FF0000">}</font>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">L_fun</font></b><font color="#990000">(</font>ax<font color="#990000">,</font> ay<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> L_fun<font color="#990000">.</font><b><font color="#000000">Domain</font></b><font color="#990000">()</font> <font color="#990000">==</font> nx<font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> L_fun<font color="#990000">.</font><b><font color="#000000">Range</font></b><font color="#990000">()</font>  <font color="#990000">==</font> ny<font color="#990000">;</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     y   <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> x<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <b><font color="#000000">check_fun</font></b><font color="#990000">(</font>x<font color="#990000">,</font> y<font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// Check rev_sparse_jac</font></i>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// set R to the identity matrix</font></i>
     <font color="#008080">size_t</font> q <font color="#990000">=</font> ny<font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;bool&gt;</font> <b><font color="#000000">r</font></b><font color="#990000">(</font>q <font color="#990000">*</font> ny<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> q<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> ny<font color="#990000">;</font> j<font color="#990000">++)</font>
               r<font color="#990000">[</font>i <font color="#990000">*</font> ny <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">(</font>i <font color="#990000">==</font> j<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// compute the sparsity pattern for S(x) = R * L'(x) = L'(x)</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;bool&gt;</font> s <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">RevSparseJac</font></b><font color="#990000">(</font>q<font color="#990000">,</font> r<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <b><font color="#000000">check_jac_sparsity</font></b><font color="#990000">(</font>nx<font color="#990000">,</font> s<font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// Check for_sparse_jac</font></i>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// set R to the identity matrix</font></i>
     q <font color="#990000">=</font> nx<font color="#990000">;</font>
     r<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>nx <font color="#990000">*</font> q<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nx<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> q<font color="#990000">;</font> j<font color="#990000">++)</font>
               r<font color="#990000">[</font>i <font color="#990000">*</font> q <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">(</font>i <font color="#990000">==</font> j<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// compute the sparsity pattern for S(x) = L'(x) * R = L'(x)</font></i>
     s <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">ForSparseJac</font></b><font color="#990000">(</font>q<font color="#990000">,</font> r<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <b><font color="#000000">check_jac_sparsity</font></b><font color="#990000">(</font>nx<font color="#990000">,</font> s<font color="#990000">);</font>
     <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// Check rev_sparse_hes</font></i>
     s<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>ny<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> ny<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// set s</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> ny<font color="#990000">;</font> j<font color="#990000">++)</font>
               s<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">(</font>i <font color="#990000">==</font> j<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// compute sparsity pattern for Hessian of s * L(x)</font></i>
          CppAD<font color="#990000">::</font><font color="#008080">vector&lt;bool&gt;</font> h <font color="#990000">=</font> L_fun<font color="#990000">.</font><b><font color="#000000">RevSparseHes</font></b><font color="#990000">(</font>q<font color="#990000">,</font> s<font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// check sparsity for this component function</font></i>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">check_hes_sparsity</font></b><font color="#990000">(</font>nx<font color="#990000">,</font> i<font color="#990000">,</font> h<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
    <font color="#FF0000">}</font></tt></pre>

<hr>Input File: cholesky/example/sparse_ad_chol_sp2.cpp

</body>
</html>
