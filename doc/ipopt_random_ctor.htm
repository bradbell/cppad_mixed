<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Ipopt Random Optimization Callback Constructor</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Ipopt Random Optimization Callback Constructor">
<meta name="keywords" id="keywords" content=" ipopt random optimization callback constructor syntax fixed_vec random_lower random_upper random_in mixed_object member variables nlp_lower_bound_inf_ nlp_upper_bound_inf_ nnz_h_lag_ ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_random_ctor_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ipopt_random.htm" target="_top">Prev</a>
</td><td><a href="ipopt_random_get_nlp_info.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ipopt_random</option>
<option>ipopt_random_ctor</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ipopt_random_htm.js'></script>
</td>
<td>ipopt_random_ctor</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Ipopt Random Optimization Callback Constructor</big></big></b></center>

<br><a href="ipopt_random_ctor.htm#Syntax" target="_top">Syntax</a>
<br><a href="ipopt_random_ctor.htm#fixed_vec" target="_top">fixed_vec</a>
<br><a href="ipopt_random_ctor.htm#random_lower" target="_top">random_lower</a>
<br><a href="ipopt_random_ctor.htm#random_upper" target="_top">random_upper</a>
<br><a href="ipopt_random_ctor.htm#random_in" target="_top">random_in</a>
<br><a href="ipopt_random_ctor.htm#mixed_object" target="_top">mixed_object</a>
<br><a href="ipopt_random_ctor.htm#Member Variables" target="_top">Member&nbsp;Variables</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ipopt_random_ctor.htm#Member Variables.nlp_lower_bound_inf_" target="_top">nlp_lower_bound_inf_</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ipopt_random_ctor.htm#Member Variables.nlp_upper_bound_inf_" target="_top">nlp_upper_bound_inf_</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ipopt_random_ctor.htm#Member Variables.nnz_h_lag_" target="_top">nnz_h_lag_</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CppAD::mixed::ipopt_random&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ipopt_object</span></font></i><font color="blue"><span style='white-space: nowrap'>(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_lower</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_upper</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_in</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mixed_object</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="fixed_vec" id="fixed_vec">fixed_vec</a></big></b>
<br>
specifies the value of the
<a href="cppad_mixed.htm#Notation.Fixed Effects, theta" target="_top"><span style='white-space: nowrap'>fixed&nbsp;effects</span></a>

vector <small>@(@
\theta
@)@</small>.
It is stored as a reference so it must exist for as long as

<code><i><font color="black"><span style='white-space: nowrap'>ipopt_object</span></font></i></code>
 exists.

<br>
<br>
<b><big><a name="random_lower" id="random_lower">random_lower</a></big></b>
<br>
this vector has size
<a href="derived_ctor.htm#n_random" target="_top"><span style='white-space: nowrap'>n_random</span></a>

and specifies the lower limits for the optimization of the
<a href="cppad_mixed.htm#Notation.Random Effects, u" target="_top"><span style='white-space: nowrap'>random&nbsp;effects</span></a>

vector <small>@(@
u
@)@</small>.
It is stored as a reference so it must exist for as long as

<code><i><font color="black"><span style='white-space: nowrap'>ipopt_object</span></font></i></code>
 exists.
The value minus infinity can be used to specify no lower limit.

<br>
<br>
<b><big><a name="random_upper" id="random_upper">random_upper</a></big></b>
<br>
this vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i></code>

and specifies the upper limits for the optimization of the random effects.
It is stored as a reference so it must exist for as long as

<code><i><font color="black"><span style='white-space: nowrap'>ipopt_object</span></font></i></code>
 exists.
The value plus infinity can be used to specify no upper limit.

<br>
<br>
<b><big><a name="random_in" id="random_in">random_in</a></big></b>
<br>
this vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>n_random</span></font></i></code>
 and specifies
the initial value used for the optimization of the random effects.
It is stored as a reference so it must exist for as long as

<code><i><font color="black"><span style='white-space: nowrap'>ipopt_object</span></font></i></code>
 exists.
The value plus infinity can be used to specify no upper limit.

<br>
<br>
<b><big><a name="mixed_object" id="mixed_object">mixed_object</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>mixed_object</span></font></i></code>
 is an object of a class that is
derived from the <code><font color="blue">cppad_mixed</font></code> base class.

<br>
<br>
<b><big><a name="Member Variables" id="Member Variables">Member Variables</a></big></b>


<br>
<br>
<big><a name="Member Variables.nlp_lower_bound_inf_" id="Member Variables.nlp_lower_bound_inf_">nlp_lower_bound_inf_</a></big>
<br>
set to a finite value that is used by Ipopt for minus infinity.

<br>
<br>
<big><a name="Member Variables.nlp_upper_bound_inf_" id="Member Variables.nlp_upper_bound_inf_">nlp_upper_bound_inf_</a></big>
<br>
set to a finite value that is used by Ipopt for plus infinity.

<br>
<br>
<big><a name="Member Variables.nnz_h_lag_" id="Member Variables.nnz_h_lag_">nnz_h_lag_</a></big>
<br>
set to the number of non-zero entries in the Hessian of the Lagrangian.
This is the same as for the Hessian of the objective because there
are no constraints (except for box constraints) in this problem.

<pre><tt>ipopt_random<font color="#990000">::</font><b><font color="#000000">ipopt_random</font></b><font color="#990000">(</font>
     <b><font color="#0000FF">const</font></b> d_vector<font color="#990000">&amp;</font>     fixed_vec          <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> d_vector<font color="#990000">&amp;</font>     random_lower       <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> d_vector<font color="#990000">&amp;</font>     random_upper       <font color="#990000">,</font>
     <b><font color="#0000FF">const</font></b> d_vector<font color="#990000">&amp;</font>     random_in          <font color="#990000">,</font>
     cppad_mixed<font color="#990000">&amp;</font>        mixed_object       <font color="#990000">)</font> <font color="#990000">:</font></tt></pre>

<hr>Input File: src/ipopt_random/ctor.cpp

</body>
</html>
