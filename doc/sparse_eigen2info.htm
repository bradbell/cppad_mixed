<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Convert An Eigen Sparse Matrix to a sparse_mat_info Representation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Convert An Eigen Sparse Matrix to a sparse_mat_info Representation">
<meta name="keywords" id="keywords" content=" convert eigen sparse matrix to sparse_mat_info representation syntax private option index info empty on input non-empty example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_eigen2info_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_mat2low.cpp.htm" target="_top">Prev</a>
</td><td><a href="sparse_eigen2info.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_eigen2info</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse_eigen2info_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Convert An Eigen Sparse Matrix to a sparse_mat_info Representation</big></big></b></center>

<br><a href="sparse_eigen2info.htm#Syntax" target="_top">Syntax</a>
<br><a href="sparse_eigen2info.htm#Private" target="_top">Private</a>
<br><a href="sparse_eigen2info.htm#matrix" target="_top">matrix</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_eigen2info.htm#matrix.Option" target="_top">Option</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_eigen2info.htm#matrix.Index" target="_top">Index</a>
<br><a href="sparse_eigen2info.htm#info" target="_top">info</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_eigen2info.htm#info.Empty on Input" target="_top">Empty&nbsp;on&nbsp;Input</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_eigen2info.htm#info.Non-Empty on Input" target="_top">Non-Empty&nbsp;on&nbsp;Input</a>
<br><a href="sparse_eigen2info.htm#Example" target="_top">Example</a>
<br>.

<br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CppAD::mixed::sparse_eigen2info(</span></font><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>info</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This routine is an implementation detail and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="matrix" id="matrix">matrix</a></big></b>
<br>
The argument has prototype
<code><font color="blue">%
	const Eigen::SparseMatrix&lt;double, %Option%, %Index%&gt;&amp; %matrix%
%</font></code>

<br>
<br>
<big><a name="matrix.Option" id="matrix.Option">Option</a></big>
<br>
This must be <code><font color="blue">Eigen::ColMajor</font></code>.

<br>
<br>
<big><a name="matrix.Index" id="matrix.Index">Index</a></big>
<br>
The index type fro this sparse matrix are arbitrary; i.e.,
has no restrictions.

<br>
<br>
<b><big><a name="info" id="info">info</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::mixed::sparse_mat_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>info</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
There are different cases depending on if it is the
<a href="sparse_mat_info.htm#Notation.Empty Matrix" target="_top"><span style='white-space: nowrap'>empty&nbsp;matrix</span></a>
 on input;

<br>
<br>
<big><a name="info.Empty on Input" id="info.Empty on Input">Empty on Input</a></big>
<br>
Upon return 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
 has the same sparse matrix information
as 
<code><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i></code>
 and is in
<a href="sparse_mat_info.htm#Notation.Column Major Order" target="_top"><span style='white-space: nowrap'>column&nbsp;major</span></a>
 order.
In this case it is assumed that there is at least one entry in every
column of 
<code><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i></code>
.

<br>
<br>
<big><a name="info.Non-Empty on Input" id="info.Non-Empty on Input">Non-Empty on Input</a></big>
<br>
It is assumed that on input, the size of 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val</span></font></code>

is the same as 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row</span></font></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i><font color="blue"><span style='white-space: nowrap'>.col</span></font></code>
.
Upon return, the following conditions hold:
<ol type="1"><li>
The sparsity pattern in 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
 is not modified.
</li><li>

The value of any elements in 
<code><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i></code>
,
that also appear in the 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
, are copied to 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
.
</li><li>

Any elements that appear in 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
, but not in 
<code><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i></code>
,
have value zero in the return value of 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
.
</li><li>

The elements of 
<code><i><font color="black"><span style='white-space: nowrap'>matrix</span></font></i></code>
,
that do not appear in 
<code><i><font color="black"><span style='white-space: nowrap'>info</span></font></i></code>
, are ignored.
</li></ol>



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="sparse_eigen2info.cpp.htm" target="_top"><span style='white-space: nowrap'>sparse_eigen2info.cpp</span></a>
 is an example
and test of <code><font color="blue">sparse_eigen2info</font></code>.


<hr>Input File: include/cppad/mixed/sparse_eigen2info.hpp

</body>
</html>
