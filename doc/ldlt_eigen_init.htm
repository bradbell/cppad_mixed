<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Initialize LDLT Factor for a Specific Sparsity Pattern</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Initialize LDLT Factor for a Specific Sparsity Pattern">
<meta name="keywords" id="keywords" content=" initialize ldlt factor specific sparsity pattern syntax prototype private ldlt_obj h_rc h_rc_ order operations example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ldlt_eigen_init_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ldlt_eigen_ctor.htm" target="_top">Prev</a>
</td><td><a href="ldlt_eigen_pattern.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ldlt_eigen</option>
<option>ldlt_eigen_init</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ldlt_eigen_htm.js'></script>
</td>
<td>ldlt_eigen_init</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Initialize LDLT Factor for a Specific Sparsity Pattern</big></big></b></center>

<br><a href="ldlt_eigen_init.htm#Syntax" target="_top">Syntax</a>
<br><a href="ldlt_eigen_init.htm#Prototype" target="_top">Prototype</a>
<br><a href="ldlt_eigen_init.htm#Private" target="_top">Private</a>
<br><a href="ldlt_eigen_init.htm#ldlt_obj" target="_top">ldlt_obj</a>
<br><a href="ldlt_eigen_init.htm#H_rc" target="_top">H_rc</a>
<br><a href="ldlt_eigen_init.htm#H_rc_" target="_top">H_rc_</a>
<br><a href="ldlt_eigen_init.htm#Order of Operations" target="_top">Order&nbsp;of&nbsp;Operations</a>
<br><a href="ldlt_eigen_init.htm#Example" target="_top">Example</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i><font color="blue"><span style='white-space: nowrap'>.init(</span></font><i><font color="black"><span style='white-space: nowrap'>H_rc</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre style='display:inline'><tt>

<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">typename</font></b> <font color="#008080">Double</font><font color="#990000">&gt;</font>
<font color="#009900">void</font> ldlt_eigen<font color="#990000">&lt;</font>Double<font color="#990000">&gt;::</font><b><font color="#000000">init</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font> H_rc<font color="#990000">)</font>
</tt></pre>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
The <code><font color="blue">ldlt_eigen</font></code> class is an
<a href="ldlt_eigen.htm#Private" target="_top"><span style='white-space: nowrap'>implementation&nbsp;detail</span></a>
 and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="ldlt_obj" id="ldlt_obj">ldlt_obj</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::ldlt_eigen&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Double</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="H_rc" id="H_rc">H_rc</a></big></b>
<br>
This argument is a
<a href="sparse_mat_info.htm#Notation.Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;pattern</span></a>
 for the
matrix that we will compute the LDLT factor of.
It is in
<a href="sparse_mat_info.htm#Notation.Column Major Order" target="_top"><span style='white-space: nowrap'>column&nbsp;major</span></a>
 order
and
<a href="sparse_mat_info.htm#Notation.Lower Triangular" target="_top"><span style='white-space: nowrap'>lower&nbsp;triangular</span></a>
.

<br>
<br>
<b><big><a name="H_rc_" id="H_rc_">H_rc_</a></big></b>
<br>
This member variable is set to a copy of 
<code><i><font color="black"><span style='white-space: nowrap'>H_rc</span></font></i></code>
.

<br>
<br>
<b><big><a name="Order of Operations" id="Order of Operations">Order of Operations</a></big></b>
<br>
This 
<code><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i></code>
 function must be called once,
after the constructor and before any other member functions.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="ldlt_eigen.cpp.htm#init" target="_top"><span style='white-space: nowrap'>ldlt_eigen.cpp</span></a>
 contains an
example and test that uses this function.


<hr>Input File: src/eigen/ldlt_eigen.cpp

</body>
</html>
