<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Example Using ar1_xam</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Example Using ar1_xam">
<meta name="keywords" id="keywords" content=" example using ar1_xam syntax test2run normal callgrind massif source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ar1_xam.sh_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ar1_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="capture_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>user</option>
<option>speed</option>
<option>ar1_xam.cpp</option>
<option>ar1_xam.sh</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_user_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ar1_xam.cpp_htm.js'></script>
</td>
<td>ar1_xam.sh</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Example Using ar1_xam</big></big></b></center>

<br><a href="ar1_xam.sh.htm#Syntax" target="_top">Syntax</a>
<br><a href="ar1_xam.sh.htm#test2run" target="_top">test2run</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ar1_xam.sh.htm#test2run.normal" target="_top">normal</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ar1_xam.sh.htm#test2run.callgrind" target="_top">callgrind</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ar1_xam.sh.htm#test2run.massif" target="_top">massif</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="ar1_xam.sh.htm#test2run.Source Code" target="_top">Source&nbsp;Code</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>bin/ar1_xam.sh&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>test2run</span></font></i></code>


<br>
<br>
<b><big><a name="test2run" id="test2run">test2run</a></big></b>
<br>
This argument must be one of the following:

<br>
<br>
<big><a name="test2run.normal" id="test2run.normal">normal</a></big>
<br>
This test will just run <a href="ar1_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>ar1_xam</span></a>
.

<br>
<br>
<big><a name="test2run.callgrind" id="test2run.callgrind">callgrind</a></big>
<br>
This test will run <code><font color="blue">ar1_xam</font></code> with
<code><font color="blue">valgrind --tool=callgrind</font></code>. This tool does execution profiling.

<br>
<br>
<big><a name="test2run.massif" id="test2run.massif">massif</a></big>
<br>
This test will run <code><font color="blue">ar1_xam</font></code> with
<code><font color="blue">valgrind --tool=massif</font></code>. This tool does memory profiling.

<br>
<br>
<big><a name="test2run.Source Code" id="test2run.Source Code">Source Code</a></big>

<pre><tt>
<font color="#009900">random_seed</font><font color="#990000">=</font><font color="#FF0000">'123'</font>
<font color="#009900">number_random</font><font color="#990000">=</font><font color="#FF0000">'100000'</font>
<font color="#009900">quasi_fixed</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">trace_optimize_fixed</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">ipopt_solve</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">bool_sparsity</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">hold_memory</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">derivative_test</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<font color="#009900">start_near_solution</font><font color="#990000">=</font><font color="#FF0000">'no'</font>
<i><font color="#9A1900"># ---------------------------------------------------------------------------</font></i>
<font color="#009900">program</font><font color="#990000">=</font><font color="#FF0000">'bin/ar1_xam.sh'</font>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#FF0000">"$0"</font> <font color="#990000">!=</font> <font color="#FF0000">"$program"</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo <font color="#FF0000">"$program: must be executed from its parent directory"</font>
     <b><font color="#0000FF">exit</font></b> <font color="#993399">1</font>
<b><font color="#0000FF">fi</font></b>
<font color="#009900">speed_dir</font><font color="#990000">=</font><font color="#FF0000">'build/speed'</font>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#990000">!</font> -e <font color="#FF0000">"$speed_dir"</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo <font color="#FF0000">"$program: must first run:"</font>
     echo <font color="#FF0000">'    bin/run_cmake.sh'</font>
     <b><font color="#0000FF">exit</font></b> <font color="#993399">1</font>
<b><font color="#0000FF">fi</font></b>
<i><font color="#9A1900">#</font></i>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#FF0000">"$1"</font> <font color="#990000">!=</font> <font color="#FF0000">'normal'</font> <font color="#990000">]</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">[</font> <font color="#FF0000">"$1"</font> <font color="#990000">!=</font> <font color="#FF0000">'callgrind'</font> <font color="#990000">]</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">[</font> <font color="#FF0000">"$1"</font> <font color="#990000">!=</font> <font color="#FF0000">'massif'</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo <font color="#FF0000">"usage: $program (normal|callgrind|massif)"</font>
     <b><font color="#0000FF">exit</font></b> <font color="#993399">1</font>
<b><font color="#0000FF">fi</font></b>
<font color="#009900">test2run</font><font color="#990000">=</font><font color="#FF0000">"$1"</font>
<i><font color="#9A1900"># -----------------------------------------------------------------------------</font></i>
<i><font color="#9A1900"># bash function that echos and executes a command</font></i>
<b><font color="#000000">echo_eval()</font></b> {
     echo <font color="#009900">$*</font>
     <b><font color="#0000FF">eval</font></b> <font color="#009900">$*</font>
}
<i><font color="#9A1900"># ----------------------------------------------------------------------------</font></i>
echo_eval cd <font color="#009900">$speed_dir</font>
echo_eval make capture_xam
<font color="#009900">arguments</font><font color="#990000">=</font><font color="#FF0000">"</font>
<font color="#FF0000">$random_seed</font>
<font color="#FF0000">$number_random</font>
<font color="#FF0000">$quasi_fixed</font>
<font color="#FF0000">$trace_optimize_fixed</font>
<font color="#FF0000">$ipopt_solve</font>
<font color="#FF0000">$bool_sparsity</font>
<font color="#FF0000">$hold_memory</font>
<font color="#FF0000">$derivative_test</font>
<font color="#FF0000">$start_near_solution</font>
<font color="#FF0000">"</font>
<font color="#009900">arguments</font><font color="#990000">=</font>`echo <font color="#009900">$arguments</font> <font color="#990000">|</font> sed -e <font color="#FF0000">'s|</font><font color="#CC33CC">\n</font><font color="#FF0000">| |'</font>`
<i><font color="#9A1900">#</font></i>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#FF0000">"$test2run"</font> <font color="#990000">==</font> <font color="#FF0000">'normal'</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo_eval <font color="#990000">.</font>/ar1_xam <font color="#009900">$arguments</font>
<b><font color="#0000FF">fi</font></b>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#FF0000">"$test2run"</font> <font color="#990000">==</font> <font color="#FF0000">'callgrind'</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo_eval valgrind <font color="#990000">\</font>
          --tool<font color="#990000">=</font>callgrind <font color="#990000">\</font>
          --callgrind-out-file<font color="#990000">=</font>callgrind<font color="#990000">.</font>out<font color="#990000">.</font><font color="#009900">$$</font> <font color="#990000">\</font>
          <font color="#990000">.</font>/ar1_xam <font color="#009900">$arguments</font>
     echo <font color="#FF0000">"view with: kcachegrind build/speed/callgrind.out.$$"</font>
<b><font color="#0000FF">fi</font></b>
<b><font color="#0000FF">if</font></b> <font color="#990000">[</font> <font color="#FF0000">"$test2run"</font> <font color="#990000">==</font> <font color="#FF0000">'massif'</font> <font color="#990000">]</font>
<b><font color="#0000FF">then</font></b>
     echo_eval valgrind <font color="#990000">\</font>
          --tool<font color="#990000">=</font>massif <font color="#990000">\</font>
          --massif-out-file<font color="#990000">=</font>massif<font color="#990000">.</font>out<font color="#990000">.</font><font color="#009900">$$</font> <font color="#990000">\</font>
          <font color="#990000">.</font>/ar1_xam <font color="#009900">$arguments</font>
     echo_eval ms_print massif<font color="#990000">.</font>out<font color="#990000">.</font><font color="#009900">$$</font> <font color="#990000">&gt;</font> massif<font color="#990000">.</font>out
     echo <font color="#FF0000">"resutls are in build/speed/massif.out"</font>
<b><font color="#0000FF">fi</font></b>
<i><font color="#9A1900"># ----------------------------------------------------------------------------</font></i>
echo <font color="#FF0000">'ar1_xam.sh: OK'</font>
<b><font color="#0000FF">exit</font></b> <font color="#993399">0</font></tt></pre>

<hr>Input File: bin/ar1_xam.sh

</body>
</html>
