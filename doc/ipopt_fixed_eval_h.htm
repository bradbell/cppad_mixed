<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Compute the Hessian of the Lagrangian</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Compute the Hessian of the Lagrangian">
<meta name="keywords" id="keywords" content=" compute the hessian lagrangian syntax mixed_object.quasi_fixed_ n x new_x obj_factor m lambda new_lambda nele_hess irow jcol values ok prototype ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_fixed_eval_h_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ipopt_fixed_eval_jac_g.htm" target="_top">Prev</a>
</td><td><a href="ipopt_fixed_finalize_solution.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ipopt_fixed</option>
<option>ipopt_fixed_eval_h</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_print</option>
<option>sparsity_print</option>
<option>sparse_ad_cholesky</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ipopt_fixed-&gt;</option>
<option>ipopt_fixed_ctor</option>
<option>ipopt_fixed_get_nlp_info</option>
<option>ipopt_fixed_get_bounds_info</option>
<option>ipopt_fixed_get_starting_point</option>
<option>ipopt_fixed_eval_f</option>
<option>ipopt_fixed_eval_grad_f</option>
<option>ipopt_fixed_eval_g</option>
<option>ipopt_fixed_eval_jac_g</option>
<option>ipopt_fixed_eval_h</option>
<option>ipopt_fixed_finalize_solution</option>
<option>ipopt_fixed_adaptive_derivative_check</option>
<option>ipopt_fixed_new_random</option>
<option>ipopt_xam</option>
</select>
</td>
<td>ipopt_fixed_eval_h</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Lagrangian</option>
<option>mixed_object.quasi_fixed_</option>
<option>n</option>
<option>x</option>
<option>new_x</option>
<option>obj_factor</option>
<option>m</option>
<option>lambda</option>
<option>new_lambda</option>
<option>nele_hess</option>
<option>iRow</option>
<option>jCol</option>
<option>values</option>
<option>ok</option>
<option>Prototype</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Compute the Hessian of the Lagrangian</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;eval_h(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>new_x</span></font></i><font color="blue"><span style='white-space: nowrap'>,</span></font><i><font color="black"><span style='white-space: nowrap'>obj_factor</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>lambda</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>new_lambda</span></font></i><font color="blue"><span style='white-space: nowrap'>,</span></font></code>


<code><i><font color="black"><span style='white-space: nowrap'>nele_hess</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>iRow</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>jCol</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>values</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="Lagrangian" id="Lagrangian">Lagrangian</a></big></b>
<br>
The Lagrangian is defined to be
<small>@[@

	L(x) = \alpha f(x) + \sum_{i=0}^{m-1} \lambda_i g_i (x)

@]@</small>

<br>
<br>
<b><big><a name="mixed_object.quasi_fixed_" id="mixed_object.quasi_fixed_">mixed_object.quasi_fixed_</a></big></b>
<br>
It is assumed that this member variable is false.

<br>
<br>
<b><big><a name="n" id="n">n</a></big></b>
<br>
is the number of variables in the problem (dimension of x).

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
is the value for the primal variables at which the
Hessian of the Lagrangian is computed (has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
).

<br>
<br>
<b><big><a name="new_x" id="new_x">new_x</a></big></b>
<br>
if true, no Ipopt evaluation method was previous called with the same
value for 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<b><big><a name="obj_factor" id="obj_factor">obj_factor</a></big></b>
<br>
is the factor <small>@(@
\alpha
@)@</small> that multiplies the objective f(x)
in the definition of the Lagrangian.

<br>
<br>
<b><big><a name="m" id="m">m</a></big></b>
<br>
is the number of constraints in the problem (dimension of g(x)).

<br>
<br>
<b><big><a name="lambda" id="lambda">lambda</a></big></b>
<br>
is the value of the constraint multipliers <small>@(@
\lambda
@)@</small>
at which the Hessian is to be evaluated (has size 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
).

<br>
<br>
<b><big><a name="new_lambda" id="new_lambda">new_lambda</a></big></b>
<br>
if true, no Ipopt evaluation method was previous called with the same
value for 
<code><i><font color="black"><span style='white-space: nowrap'>lambda</span></font></i></code>
.

<br>
<br>
<b><big><a name="nele_hess" id="nele_hess">nele_hess</a></big></b>
<br>
is the number of non-zero elements in the Hessian <small>@(@
L_{x,x} (x)
@)@</small>; i.e.,
the same as
<a href="ipopt_fixed_get_nlp_info.htm#nnz_h_lag" target="_top"><span style='white-space: nowrap'>nnz_h_lag</span></a>
.

<br>
<br>
<b><big><a name="iRow" id="iRow">iRow</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>values</span></font></i></code>
 is <code><font color="blue">NULL</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>iRow</span></font></i></code>
 has size 
<code><i><font color="black"><span style='white-space: nowrap'>nele_hess</span></font></i></code>
 and is set to the
row indices for the non-zero entries in the
lower triangle of the Hessian <small>@(@
L_{x,x} (x)
@)@</small>.

<br>
<br>
<b><big><a name="jCol" id="jCol">jCol</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>values</span></font></i></code>
 is <code><font color="blue">NULL</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>jCol</span></font></i></code>
 has size 
<code><i><font color="black"><span style='white-space: nowrap'>nele_hess</span></font></i></code>
 and is set to the
column indices for the non-zero entries in the
lower triangle of the Hessian <small>@(@
L_{x,x} (x)
@)@</small>.

<br>
<br>
<b><big><a name="values" id="values">values</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>values</span></font></i></code>
 is not <code><font color="blue">NULL</font></code>,
it has size 
<code><i><font color="black"><span style='white-space: nowrap'>nele_hess</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>values</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>

is set to the value of element of the Hessian <small>@(@
L_{x,x} (x)
@)@</small>
with row index 
<code><i><font color="black"><span style='white-space: nowrap'>iRow</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>

and column index 
<code><i><font color="black"><span style='white-space: nowrap'>jCol</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.

<br>
<br>
<b><big><a name="ok" id="ok">ok</a></big></b>
<br>
if set to false, the optimization will terminate with status set to
<a href="ipopt_fixed_finalize_solution.htm#status.USER_REQUESTED_STOP" target="_top"><span style='white-space: nowrap'>USER_REQUESTED_STOP</span></a>
.

<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt><font color="#009900">bool</font> ipopt_fixed<font color="#990000">::</font><b><font color="#000000">eval_h</font></b><font color="#990000">(</font>
     <font color="#008080">Index</font>         n              <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <b><font color="#0000FF">const</font></b> Number<font color="#990000">*</font> x              <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <font color="#009900">bool</font>          new_x          <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <font color="#008080">Number</font>        obj_factor     <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <font color="#008080">Index</font>         m              <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <b><font color="#0000FF">const</font></b> Number<font color="#990000">*</font> lambda         <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <font color="#009900">bool</font>          new_lambda     <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     <font color="#008080">Index</font>         nele_hess      <font color="#990000">,</font>  <i><font color="#9A1900">// in</font></i>
     Index<font color="#990000">*</font>        iRow           <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     Index<font color="#990000">*</font>        jCol           <font color="#990000">,</font>  <i><font color="#9A1900">// out</font></i>
     Number<font color="#990000">*</font>       values         <font color="#990000">)</font>  <i><font color="#9A1900">// out</font></i></tt></pre>

<hr>Input File: src/ipopt_fixed.cpp

</body>
</html>
