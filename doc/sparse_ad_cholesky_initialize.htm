<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Initialize Sparse AD Cholesky Factorization</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Initialize Sparse AD Cholesky Factorization">
<meta name="keywords" id="keywords" content=" initialize sparse ad cholesky factorization syntax public / private ad_alow restriction ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_ad_cholesky_initialize_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_ad_cholesky.htm" target="_top">Prev</a>
</td><td><a href="sparse_ad_cholesky_p.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_ad_cholesky</option>
<option>sparse_ad_cholesky_initialize</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_print</option>
<option>sparsity_print</option>
<option>sparse_ad_cholesky</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>sparse_ad_cholesky-&gt;</option>
<option>sparse_ad_cholesky_initialize</option>
<option>sparse_ad_cholesky_p</option>
<option>sparse_ad_cholesky_eval</option>
<option>set_jac_sparsity</option>
<option>set_hes_sparsity</option>
<option>sparse_ad_chol_eval.cpp</option>
<option>sparse_ad_chol_perm.cpp</option>
<option>sparse_ad_chol_eq.cpp</option>
<option>sparse_ad_chol_var.cpp</option>
<option>sparse_ad_chol_sp1.cpp</option>
<option>sparse_ad_chol_sp2.cpp</option>
</select>
</td>
<td>sparse_ad_cholesky_initialize</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Public / Private</option>
<option>cholesky</option>
<option>ad_Alow</option>
<option>Restriction</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Initialize Sparse AD Cholesky Factorization</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>cholesky</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>ad_Alow</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Public / Private" id="Public / Private">Public / Private</a></big></b>
<br>
This is a public member function of the class <code><font color="blue">sparse_ad_cholesky</font></code>.
On the other hand, this class,
and all of its members, are implementation details and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="cholesky" id="cholesky">cholesky</a></big></b>
<br>
This is object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sparse_ad_cholesky&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>cholesky</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and was created with the default constructor.
The <code><font color="blue">initialize</font></code> routine should be called once
for each 
<code><i><font color="black"><span style='white-space: nowrap'>cholesky</span></font></i></code>
 object.

<br>
<br>
<b><big><a name="ad_Alow" id="ad_Alow">ad_Alow</a></big></b>
<br>
This matrix has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Eigen::SparseMatrix&lt;&nbsp;CppAD::AD&lt;double&gt;,&nbsp;Eigen::ColMajor&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ad_Alow</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the lower triangle of a positive definite matrix.
Only positive definite matrices
<a href="sparse_ad_cholesky.htm#Notation.A" target="_top"><span style='white-space: nowrap'>A</span></a>
 with the same sparsity pattern
can be factored using the 
<code><i><font color="black"><span style='white-space: nowrap'>cholesky</span></font></i></code>
 object; i.e.,
square matrices with the same column size and
same set of possibly non-zero entries.

<br>
<br>
<b><big><a name="Restriction" id="Restriction">Restriction</a></big></b>
<br>
The <code><font color="blue">CppAD::AD&lt;double&gt;</font></code> tape cannot be recording when this
function is called and hence all such AD objects are parameters
(not variables).


<hr>Input File: cholesky/sparse_ad_cholesky.cpp

</body>
</html>
