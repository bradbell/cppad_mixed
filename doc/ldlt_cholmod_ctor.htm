<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Cholmod LDLT Constructor</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Cholmod LDLT Constructor">
<meta name="keywords" id="keywords" content=" cholmod ldlt constructor syntax prototype private nrow_ pointers common_ simplicial factorization ldl' example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ldlt_cholmod_ctor_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ldlt_cholmod.htm" target="_top">Prev</a>
</td><td><a href="ldlt_cholmod_dtor.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ldlt_cholmod</option>
<option>ldlt_cholmod_ctor</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ipopt_random</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>order2random</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_eigen2rcv</option>
<option>sparse_rcv2eigen</option>
<option>sparse_print</option>
<option>sparsity_print</option>
<option>sparse_ad_cholesky</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ldlt_cholmod-&gt;</option>
<option>ldlt_cholmod_ctor</option>
<option>ldlt_cholmod_dtor</option>
<option>ldlt_cholmod_init</option>
<option>ldlt_cholmod_pattern</option>
<option>ldlt_cholmod_update</option>
<option>ldlt_cholmod_logdet</option>
<option>ldlt_cholmod_solve_H</option>
<option>ldlt_cholmod_sim_cov</option>
<option>ldlt_cholmod_inv</option>
<option>ldlt_cholmod.cpp</option>
<option>cholmod_solve_xam</option>
<option>cholmod_solve2_a.cpp</option>
<option>cholmod_solve2_sim.cpp</option>
</select>
</td>
<td>ldlt_cholmod_ctor</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>Private</option>
<option>nrow_</option>
<option>Pointers</option>
<option>common_</option>
<option>---..Simplicial Factorization</option>
<option>---..LDL' Factorization</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Cholmod LDLT Constructor</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CppAD::mixed::ldlt_cholmod&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ldlt_obj</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>nrow</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>



<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre style='display:inline'><tt>

ldlt_cholmod<font color="#990000">::</font><b><font color="#000000">ldlt_cholmod</font></b><font color="#990000">(</font><font color="#008080">size_t</font> nrow<font color="#990000">)</font>
</tt></pre>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
The <a href="ldlt_cholmod.htm" target="_top"><span style='white-space: nowrap'>ldlt_cholmod</span></a>
 class is an
<a href="ldlt_cholmod.htm#Private" target="_top"><span style='white-space: nowrap'>implementation&nbsp;detail</span></a>
 and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="nrow_" id="nrow_">nrow_</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>nrow</span></font></i></code>

is the number of rows in the symmetric matrix
we will compute the LDLT factor of.
The member variable <code><font color="blue">nrow_</font></code> is set to this value.

<br>
<br>
<b><big><a name="Pointers" id="Pointers">Pointers</a></big></b>
<br>
This sets all the pointer private member variable equal to null.

<br>
<br>
<b><big><a name="common_" id="common_">common_</a></big></b>
<br>
The <code><font color="blue">common_</font></code> variable is initialized as follows:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cholmod_start(&amp;common_);<br>
</span></font></code>
<br>
<big><a name="common_.Simplicial Factorization" id="common_.Simplicial Factorization">Simplicial Factorization</a></big>
<br>
The following value is set (and does not change):

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;common_.supernodal&nbsp;=&nbsp;CHOLMOD_SIMPLICIAL;<br>
</span></font></code>
<br>
<big><a name="common_.LDL' Factorization" id="common_.LDL' Factorization">LDL' Factorization</a></big>
<br>
The following value is set (and does not change):

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;common_.final_ll&nbsp;=&nbsp;CHOLMOD_FLASE;<br>
</span></font></code>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="ldlt_cholmod.cpp.htm#constructor" target="_top"><span style='white-space: nowrap'>ldlt_cholmod.cpp</span></a>
 contains an
example and test that uses this constructor.


<hr>Input File: src/cholmod/constructor.cpp

</body>
</html>
