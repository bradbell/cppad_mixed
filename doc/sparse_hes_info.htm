<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Sparse Hessian Information</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Sparse Hessian Information">
<meta name="keywords" id="keywords" content=" sparse hessian information syntax private purpose row col val work call f x w not_used hes_info.val ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_hes_info_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_hes_rcv.htm" target="_top">Prev</a>
</td><td><a href="sparse_jac_rcv.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_hes_info</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>sparse_hes_info</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Sparse Hessian Information</big></big></b></center>

<br><a href="sparse_hes_info.htm#Syntax" target="_top">Syntax</a>
<br><a href="sparse_hes_info.htm#Private" target="_top">Private</a>
<br><a href="sparse_hes_info.htm#Purpose" target="_top">Purpose</a>
<br><a href="sparse_hes_info.htm#row" target="_top">row</a>
<br><a href="sparse_hes_info.htm#col" target="_top">col</a>
<br><a href="sparse_hes_info.htm#val" target="_top">val</a>
<br><a href="sparse_hes_info.htm#work" target="_top">work</a>
<br><a href="sparse_hes_info.htm#Sparse Hessian Call" target="_top">Sparse&nbsp;Hessian&nbsp;Call</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_info.htm#Sparse Hessian Call.f" target="_top">f</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_info.htm#Sparse Hessian Call.x" target="_top">x</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_info.htm#Sparse Hessian Call.w" target="_top">w</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_info.htm#Sparse Hessian Call.not_used" target="_top">not_used</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_info.htm#Sparse Hessian Call.hes_info.val" target="_top">hes_info.val</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CppAD::mixed::sparse_hes_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i></code>


<br>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This structure is an implementation detail and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This structure holds information about a specific Hessian.

<br>
<br>
<b><big><a name="row" id="row">row</a></big></b>
<br>
The field 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row</span></font></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;size_t&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row<br>
</span></font></code>
It has size zero when it is constructed.
After initialization it should contain the row indices
for elements of the Hessian that get computed.

<br>
<br>
<b><big><a name="col" id="col">col</a></big></b>
<br>
The field 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.col</span></font></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;size_t&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.col<br>
</span></font></code>
It has size zero when it is constructed.
After initialization it should contain the column indices
for elements of the Hessian that get computed.
It must has the same size as 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row</span></font></code>
.

<br>
<br>
<b><big><a name="val" id="val">val</a></big></b>
<br>
The field 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val</span></font></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;double&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val<br>
</span></font></code>
It has size zero when it is constructed.
After initialization it should be that same size as 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row</span></font></code>
.
(In the special case where 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i></code>
 is used to compute
Hessian values with type other than <code><font color="blue">double</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val</span></font></code>
 can have size zero.)

<br>
<br>
<b><big><a name="work" id="work">work</a></big></b>
<br>
The field 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.work</span></font></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::sparse_hessian_work&nbsp;work<br>
</span></font></code>
It has no information when it is constructed.
After initialization it should contain the CppAD cached information.

<br>
<br>
<b><big><a name="Sparse Hessian Call" id="Sparse Hessian Call">Sparse Hessian Call</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.SparseHessian(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>w</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>not_used</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.col,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.work<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>
</span></font></code>
<br>
<big><a name="Sparse Hessian Call.f" id="Sparse Hessian Call.f">f</a></big>
<br>
The function 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::ADFun&lt;double&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<big><a name="Sparse Hessian Call.x" id="Sparse Hessian Call.x">x</a></big>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size is 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Domain()</span></font></code>
.
It is the location where the Hessian is being evaluated.

<br>
<br>
<big><a name="Sparse Hessian Call.w" id="Sparse Hessian Call.w">w</a></big>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>w</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>w</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size is 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Range()</span></font></code>
.
It is the weighting for the components of the Hessian that is
being computed.

<br>
<br>
<big><a name="Sparse Hessian Call.not_used" id="Sparse Hessian Call.not_used">not_used</a></big>
<br>
This argument has one of the following prototypes

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&nbsp;&lt;&nbsp;std::set&lt;size_t&gt;&nbsp;&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>not_used</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;bool&gt;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>not_used</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vectorBool&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>not_used</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It does not matter which and it is not used.

<br>
<br>
<big><a name="Sparse Hessian Call.hes_info.val" id="Sparse Hessian Call.hes_info.val">hes_info.val</a></big>
<br>
Upon return 
<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.val[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is the Hessian at row index

<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.row[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 and column index

<code><i><font color="black"><span style='white-space: nowrap'>hes_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.col[</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.


<hr>Input File: include/cppad/mixed/sparse_hes_info.hpp

</body>
</html>
