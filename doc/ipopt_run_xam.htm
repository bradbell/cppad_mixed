<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Ipopt: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Ipopt: Example and Test">
<meta name="keywords" id="keywords" content=" ipopt: example test syntax ok source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_run_xam_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ipopt_xam_intermediate_callback.htm" target="_top">Prev</a>
</td><td><a href="ldlt_cholmod.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ipopt_fixed</option>
<option>ipopt_xam</option>
<option>ipopt_run_xam</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_17</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_ad_cholesky</option>
<option>sparse_print</option>
<option>sparsity_print</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ipopt_fixed-&gt;</option>
<option>ipopt_fixed_ctor</option>
<option>ipopt_fixed_get_nlp_info</option>
<option>ipopt_fixed_get_bounds_info</option>
<option>ipopt_fixed_get_starting_point</option>
<option>ipopt_fixed_eval_f</option>
<option>ipopt_fixed_eval_grad_f</option>
<option>ipopt_fixed_eval_g</option>
<option>ipopt_fixed_eval_jac_g</option>
<option>ipopt_fixed_eval_h</option>
<option>ipopt_fixed_finalize_solution</option>
<option>ipopt_fixed_adaptive_derivative_check</option>
<option>ipopt_fixed_new_random</option>
<option>ipopt_xam</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ipopt_xam-&gt;</option>
<option>ipopt_nlp_xam</option>
<option>ipopt_xam_ctor</option>
<option>ipopt_xam_get_nlp_info</option>
<option>ipopt_xam_get_bounds_info</option>
<option>ipopt_xam_get_starting_point</option>
<option>ipopt_xam_eval_f</option>
<option>ipopt_xam_eval_grad_f</option>
<option>ipopt_xam_eval_g</option>
<option>ipopt_xam_eval_jac_g</option>
<option>ipopt_xam_eval_h</option>
<option>ipopt_xam_finalize_solution</option>
<option>ipopt_xam_intermediate_callback</option>
<option>ipopt_run_xam</option>
</select>
</td>
<td>ipopt_run_xam</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>ok</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Ipopt: Example and Test</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;ipopt_run_xam()</span></font></code>


<br>
<br>
<b><big><a name="ok" id="ok">ok</a></big></b>
<br>
This return value is true, if the test passes,
and false otherwise.

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt><font color="#009900">bool</font> <b><font color="#000000">ipopt_run_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok    <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#009900">double</font> tol <font color="#990000">=</font> <font color="#993399">1e-8</font><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> Ipopt<font color="#990000">::</font>SmartPtr<font color="#990000">;</font>

     <i><font color="#9A1900">// Factor in definition of objective function</font></i>
     <font color="#009900">double</font> beta <font color="#990000">=</font> <font color="#993399">3.0</font><font color="#990000">;</font>

     <i><font color="#9A1900">// Create an instance of the example problem</font></i>
     <font color="#008080">SmartPtr&lt;ipopt_nlp_xam&gt;</font> xam_nlp <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> <b><font color="#000000">ipopt_nlp_xam</font></b><font color="#990000">(</font>beta<font color="#990000">);</font>

     <i><font color="#9A1900">// Create an instance of an IpoptApplication</font></i>
     <font color="#008080">SmartPtr&lt;Ipopt::IpoptApplication&gt;</font> app <font color="#990000">=</font> <b><font color="#000000">IpoptApplicationFactory</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// Turn off all Ipopt printed output</font></i>
     app<font color="#990000">-&gt;</font><b><font color="#000000">Options</font></b><font color="#990000">()-&gt;</font><b><font color="#000000">SetIntegerValue</font></b><font color="#990000">(</font><font color="#FF0000">"print_level"</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">);</font>
     app<font color="#990000">-&gt;</font><b><font color="#000000">Options</font></b><font color="#990000">()-&gt;</font><b><font color="#000000">SetStringValue</font></b><font color="#990000">(</font><font color="#FF0000">"sb"</font><font color="#990000">,</font> <font color="#FF0000">"yes"</font><font color="#990000">);</font>
     app<font color="#990000">-&gt;</font><b><font color="#000000">Options</font></b><font color="#990000">()-&gt;</font><b><font color="#000000">SetStringValue</font></b><font color="#990000">(</font><font color="#FF0000">"derivative_test"</font><font color="#990000">,</font> <font color="#FF0000">"second-order"</font><font color="#990000">);</font>

     <i><font color="#9A1900">// variable to hold status values returned by app</font></i>
     Ipopt<font color="#990000">::</font><font color="#008080">ApplicationReturnStatus</font> status<font color="#990000">;</font>

     <i><font color="#9A1900">// initialize app</font></i>
     status <font color="#990000">=</font> app<font color="#990000">-&gt;</font><b><font color="#000000">Initialize</font></b><font color="#990000">();</font>
     ok    <font color="#990000">&amp;=</font> status <font color="#990000">==</font> Ipopt<font color="#990000">::</font>Solve_Succeeded<font color="#990000">;</font>

     <i><font color="#9A1900">// solve the problem</font></i>
     status <font color="#990000">=</font> app<font color="#990000">-&gt;</font><b><font color="#000000">OptimizeTNLP</font></b><font color="#990000">(</font>xam_nlp<font color="#990000">);</font>
     ok    <font color="#990000">&amp;=</font> status <font color="#990000">==</font> Ipopt<font color="#990000">::</font>Solve_Succeeded<font color="#990000">;</font>
     ok    <font color="#990000">&amp;=</font> xam_nlp<font color="#990000">-&gt;</font>finalize_solution_ok_<font color="#990000">;</font>

     <i><font color="#9A1900">// check the solution</font></i>
     <b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>xam_nlp<font color="#990000">-&gt;</font>final_solution_<font color="#990000">);</font>
     ok    <font color="#990000">&amp;=</font> x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font>
     ok    <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">-</font> <font color="#993399">0.5</font> <font color="#990000">)</font> <font color="#990000">&lt;=</font> <font color="#993399">10</font><font color="#990000">.</font> <font color="#990000">*</font> tol<font color="#990000">;</font>
     ok    <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">-</font> <font color="#993399">1.5</font> <font color="#990000">)</font> <font color="#990000">&lt;=</font> <font color="#993399">10</font><font color="#990000">.</font> <font color="#990000">*</font> tol<font color="#990000">;</font>

     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/ipopt_run.cpp

</body>
</html>
