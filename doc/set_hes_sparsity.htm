<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Set the Hessian Sparsity Pattern</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Set the Hessian Sparsity Pattern">
<meta name="keywords" id="keywords" content=" set the hessian sparsity pattern syntax purpose private s jac_sparsity hes_sparsity n_set end elements ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_set_hes_sparsity_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="set_jac_sparsity.htm" target="_top">Prev</a>
</td><td><a href="sparse_ad_chol_eval.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_ad_cholesky</option>
<option>set_hes_sparsity</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse_ad_cholesky_htm.js'></script>
</td>
<td>set_hes_sparsity</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Set the Hessian Sparsity Pattern</big></big></b></center>

<br><a href="set_hes_sparsity.htm#Syntax" target="_top">Syntax</a>
<br><a href="set_hes_sparsity.htm#Purpose" target="_top">Purpose</a>
<br><a href="set_hes_sparsity.htm#Private" target="_top">Private</a>
<br><a href="set_hes_sparsity.htm#s" target="_top">s</a>
<br><a href="set_hes_sparsity.htm#jac_sparsity" target="_top">jac_sparsity</a>
<br><a href="set_hes_sparsity.htm#hes_sparsity" target="_top">hes_sparsity</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="set_hes_sparsity.htm#hes_sparsity.n_set" target="_top">n_set</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="set_hes_sparsity.htm#hes_sparsity.end" target="_top">end</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="set_hes_sparsity.htm#hes_sparsity.elements" target="_top">elements</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>set_hes_sparsity(</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>hes_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Compute the sparsity pattern for <small>@(@
S(x) L(x)
@)@</small> where
<small>@(@
S(x)
@)@</small> is a row vector valued function and
<small>@(@
L(x)
@)@</small> is the mapping from the lower triangle of
<a href="sparse_ad_cholesky.htm#Notation.A" target="_top"><span style='white-space: nowrap'>A</span></a>
 to the Cholesky factor
<a href="sparse_ad_cholesky.htm#Notation.L" target="_top"><span style='white-space: nowrap'>L</span></a>
.

<br>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This is a private member function of the class <code><font color="blue">sparse_ad_cholesky</font></code>.
In addition, this class,
and all of its members, are implementation details and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="s" id="s">s</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;bool&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size is the number of elements in
<a href="sparse_ad_cholesky.htm#Notation.L" target="_top"><span style='white-space: nowrap'>L</span></a>
 (
<code><i><font color="black"><span style='white-space: nowrap'>ny</span></font></i></code>
).
It is the sparsity pattern for <small>@(@
S(x)
@)@</small>.

<br>
<br>
<b><big><a name="jac_sparsity" id="jac_sparsity">jac_sparsity</a></big></b>
<br>
This argument has one of the following prototypes

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::local::sparse_list&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>jac_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::local::sparse_pack&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>jac_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is the Jacobian sparsity pattern for <small>@(@
L(x)
@)@</small> and is
effectively const.

<br>
<br>
<b><big><a name="hes_sparsity" id="hes_sparsity">hes_sparsity</a></big></b>
<br>
This argument has the same type as 
<code><i><font color="black"><span style='white-space: nowrap'>jac_sparsity</span></font></i></code>
.
Its input value does not matter.
Upon return it contains the Hessian sparsity pattern for
<small>@(@
S(x) L(x)
@)@</small>.

<br>
<br>
<big><a name="hes_sparsity.n_set" id="hes_sparsity.n_set">n_set</a></big>
<br>
The number of sets 
<code><i><font color="black"><span style='white-space: nowrap'>hes_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'>.n_set()</span></font></code>
 is equal
to the number of elements in the lower triangle of
<a href="sparse_ad_cholesky.htm#Notation.A" target="_top"><span style='white-space: nowrap'>A</span></a>
 (
<code><i><font color="black"><span style='white-space: nowrap'>nx</span></font></i></code>
).

<br>
<br>
<big><a name="hes_sparsity.end" id="hes_sparsity.end">end</a></big>
<br>
The end for each set 
<code><i><font color="black"><span style='white-space: nowrap'>hes_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'>.end()</span></font></code>
 is equal
to the number of elements in the lower triangle of the symmetric
matrix <small>@(@
A
@)@</small> (
<code><i><font color="black"><span style='white-space: nowrap'>nx</span></font></i></code>
).
The elements of the set are greater than or equal zero
and less than the end value.

<br>
<br>
<big><a name="hes_sparsity.elements" id="hes_sparsity.elements">elements</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 is an element of set 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
,
the <small>@(@
(i,j)
@)@</small> element of the Hessian
<small>@[@

	\sum_k S_k (x) L_k^{(2)} (x)

@]@</small>
may be non-zero.


<hr>Input File: cholesky/sparse_ad_cholesky.cpp

</body>
</html>
