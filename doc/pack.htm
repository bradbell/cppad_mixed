<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Pack Fixed Effect and Random Effects Into One Vector</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Pack Fixed Effect and Random Effects Into One Vector">
<meta name="keywords" id="keywords" content=" pack fixed effect random effects into one vector syntax private mixed_object float_unpack float_pack fixed_one fixed_two random_vec both_vec three_vec ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_pack_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="private.htm" target="_top">Prev</a>
</td><td><a href="unpack.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>base_class</option>
<option>private</option>
<option>pack</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_17</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>base_class-&gt;</option>
<option>public</option>
<option>private</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>private-&gt;</option>
<option>pack</option>
<option>unpack</option>
<option>init_ran_hes</option>
<option>init_ran_hes_check</option>
<option>init_ran_objcon</option>
<option>init_ldlt_ran_hes</option>
<option>init_fix_con</option>
<option>init_fix_like</option>
<option>init_hes_cross</option>
<option>init_laplace_obj_hes</option>
<option>init_ran_like</option>
<option>fix_con_eval</option>
<option>fix_con_hes</option>
<option>fix_con_jac</option>
<option>fix_like_eval</option>
<option>fix_like_hes</option>
<option>fix_like_jac</option>
<option>logdet_jac</option>
<option>ran_like_jac</option>
<option>ran_like_jac_check</option>
<option>ran_con_eval</option>
<option>ran_con_jac</option>
<option>ran_obj_eval</option>
<option>ran_obj_jac</option>
<option>laplace_obj_hes</option>
<option>update_factor</option>
</select>
</td>
<td>pack</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Private</option>
<option>mixed_object</option>
<option>Float_unpack</option>
<option>Float_pack</option>
<option>fixed_one</option>
<option>fixed_two</option>
<option>random_vec</option>
<option>both_vec</option>
<option>three_vec</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Pack Fixed Effect and Random Effects Into One Vector</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>mixed_object</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>both_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>mixed_object</span></font></i><font color="blue"><span style='white-space: nowrap'>.pack(</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_two</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>three_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This <code><font color="blue">cppad_mixed</font></code> member function is <a href="private.htm" target="_top"><span style='white-space: nowrap'>private</span></a>
.

<br>
<br>
<b><big><a name="mixed_object" id="mixed_object">mixed_object</a></big></b>
<br>
We use <a href="derived_ctor.htm#mixed_object" target="_top"><span style='white-space: nowrap'>mixed_object</span></a>

to denote an object of a class that is
derived from the <code><font color="blue">cppad_mixed</font></code> base class.

<br>
<br>
<b><big><a name="Float_unpack" id="Float_unpack">Float_unpack</a></big></b>
<br>
This can be any type.

<br>
<br>
<b><big><a name="Float_pack" id="Float_pack">Float_pack</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has type 
<code><i><font color="black"><span style='white-space: nowrap'>Float_unpack</span></font></i></code>
,
the syntax 
<code><i><font color="black"><span style='white-space: nowrap'>Float_pack</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
 must convert 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>

to the type 
<code><i><font color="black"><span style='white-space: nowrap'>Float_pack</span></font></i></code>
.

<br>
<br>
<b><big><a name="fixed_one" id="fixed_one">fixed_one</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the a value for the
<a href="cppad_mixed.htm#Notation.Fixed Effects, theta" target="_top"><span style='white-space: nowrap'>fixed&nbsp;effects</span></a>
.
The size of this vector must be equal to
<a href="private.htm#n_fixed_" target="_top"><span style='white-space: nowrap'>n_fixed_</span></a>
.

<br>
<br>
<b><big><a name="fixed_two" id="fixed_two">fixed_two</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_two</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If present, it also specifies the a value for the
<a href="cppad_mixed.htm#Notation.Fixed Effects, theta" target="_top"><span style='white-space: nowrap'>fixed&nbsp;effects</span></a>
.
The size of this vector must be equal to
<a href="private.htm#n_fixed_" target="_top"><span style='white-space: nowrap'>n_fixed_</span></a>
.

<br>
<br>
<b><big><a name="random_vec" id="random_vec">random_vec</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float_unpack</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies a value for the
<a href="cppad_mixed.htm#Notation.Random Effects, u" target="_top"><span style='white-space: nowrap'>random&nbsp;effects</span></a>
.
The size of this vector must be equal to
<a href="private.htm#n_random_" target="_top"><span style='white-space: nowrap'>n_fixed_</span></a>
.

<br>
<br>
<b><big><a name="both_vec" id="both_vec">both_vec</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float_pack</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>both_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If present, the size of this vector must be equal to

<code><i><font color="black"><span style='white-space: nowrap'>n_fixed_</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_random_</span></font></i></code>
.
The input value of its elements does not matter.
Upon return, it contains the values in

<code><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i></code>
 as one vector in that order;
i.e., 
<code><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i></code>
 comes first and then 
<code><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i></code>
.

<br>
<br>
<b><big><a name="three_vec" id="three_vec">three_vec</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float_pack</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>three_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If present, the size of this vector must be equal to

<code><font color="blue"><span style='white-space: nowrap'>2*</span></font><i><font color="black"><span style='white-space: nowrap'>n_fixed_</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_random_</span></font></i></code>
.
The input value of its elements does not matter.
Upon return, it contains the values in

<code><i><font color="black"><span style='white-space: nowrap'>fixed_one</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>fixed_two</span></font></i></code>
, and 
<code><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i></code>
 as one vector.
The order of the result is unspecified.


<hr>Input File: include/cppad/mixed/pack.hpp

</body>
</html>
