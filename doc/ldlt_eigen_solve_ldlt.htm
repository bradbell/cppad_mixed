<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Solve Linear Equations Corresponding to L, D, and P Factors</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Solve Linear Equations Corresponding to L, D, and P Factors">
<meta name="keywords" id="keywords" content=" solve linear equations corresponding to l d p factors syntax prototype private purpose b x example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ldlt_eigen_solve_ldlt_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ldlt_eigen_inv.htm" target="_top">Prev</a>
</td><td><a href="ldlt_eigen.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ldlt_eigen</option>
<option>ldlt_eigen_solve_LDLT</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ldlt_eigen_htm.js'></script>
</td>
<td>ldlt_eigen_solve_LDLT</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Solve Linear Equations Corresponding to L, D, and P Factors</big></big></b></center>

<br><a href="ldlt_eigen_solve_ldlt.htm#Syntax" target="_top">Syntax</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#Prototype" target="_top">Prototype</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#Private" target="_top">Private</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#Purpose" target="_top">Purpose</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#L" target="_top">L</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#D" target="_top">D</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#P" target="_top">P</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#b" target="_top">b</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#x" target="_top">x</a>
<br><a href="ldlt_eigen_solve_ldlt.htm#Example" target="_top">Example</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;ldlt_eigen&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Double</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::solve_LDLT(</span></font><i><font color="black"><span style='white-space: nowrap'>L</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>D</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>P</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>b</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">typename</font></b> <font color="#008080">Double</font><font color="#990000">&gt;</font>
Eigen<font color="#990000">::</font>Matrix<font color="#990000">&lt;</font>Double<font color="#990000">,</font> Eigen<font color="#990000">::</font>Dynamic<font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">&gt;</font>
ldlt_eigen<font color="#990000">&lt;</font>Double<font color="#990000">&gt;::</font><b><font color="#000000">solve_LDLT</font></b><font color="#990000">(</font>
     <i><font color="#9A1900">// Lower Triangular matrix</font></i>
     <b><font color="#0000FF">const</font></b> Eigen<font color="#990000">::</font>SparseMatrix<font color="#990000">&lt;</font>Double<font color="#990000">,</font> Eigen<font color="#990000">::</font>ColMajor<font color="#990000">&gt;&amp;</font> L  <font color="#990000">,</font>
     <i><font color="#9A1900">// Diagonal matrix</font></i>
     <b><font color="#0000FF">const</font></b> eigen_vector<font color="#990000">&amp;</font>                                 D  <font color="#990000">,</font>
     <i><font color="#9A1900">// Permutation matrix</font></i>
     <b><font color="#0000FF">const</font></b> Eigen<font color="#990000">::</font>PermutationMatrix<font color="#990000">&lt;</font>Eigen<font color="#990000">::</font>Dynamic<font color="#990000">&gt;&amp;</font>     P  <font color="#990000">,</font>
     <i><font color="#9A1900">// right hand side of equation</font></i>
     <b><font color="#0000FF">const</font></b> eigen_vector<font color="#990000">&amp;</font>                                 b  <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
The <a href="ldlt_eigen.htm" target="_top"><span style='white-space: nowrap'>ldlt_eigen</span></a>
 class is an
<a href="ldlt_eigen.htm#Private" target="_top"><span style='white-space: nowrap'>implementation&nbsp;detail</span></a>
 and not part of the
<a href="namespace.htm#Private" target="_top"><span style='white-space: nowrap'>CppAD::mixed</span></a>
 user API.

<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This function solves the linear equation
<small>@(@
H x = b
@)@</small> where the positive definite matrix
<small>@(@
H = P^T L D L^T P
@)@</small>,
<small>@(@
b
@)@</small> is a known column vector,
and <small>@(@
x
@)@</small> is unknown.

<br>
<br>
<b><big><a name="L" id="L">L</a></big></b>
<br>
is a lower triangular matrix with ones on the diagonal.

<br>
<br>
<b><big><a name="D" id="D">D</a></big></b>
<br>
is a diagonal matrix.

<br>
<br>
<b><big><a name="P" id="P">P</a></big></b>
<br>
is a permutation matrix.

<br>
<br>
<b><big><a name="b" id="b">b</a></big></b>
<br>
is the right hand side column vector in the equation.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
is the column vector that solves the equation.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="ldlt_eigen.cpp.htm#solve_LDLT" target="_top"><span style='white-space: nowrap'>ldlt_eigen.cpp</span></a>
 contains an
example and test that uses this function.


<hr>Input File: src/eigen/ldlt_eigen.cpp

</body>
</html>
