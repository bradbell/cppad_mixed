<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>CppAD Mixed Exceptions</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="CppAD Mixed Exceptions">
<meta name="keywords" id="keywords" content=" cppad mixed exceptions syntax public thrower brief catcher description ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_exception_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="fixed_solution.htm" target="_top">Prev</a>
</td><td><a href="user.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>exception</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>exception</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>CppAD Mixed Exceptions</big></big></b></center>

<br><a href="exception.htm#Syntax" target="_top">Syntax</a>
<br><a href="exception.htm#Public" target="_top">Public</a>
<br><a href="exception.htm#thrower" target="_top">thrower</a>
<br><a href="exception.htm#brief" target="_top">brief</a>
<br><a href="exception.htm#catcher" target="_top">catcher</a>
<br><a href="exception.htm#description" target="_top">description</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CppAD::mixed&nbsp;exception(</span></font><i><font color="black"><span style='white-space: nowrap'>thrower</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>brief</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>e</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>description</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>e</span></font></i><font color="blue"><span style='white-space: nowrap'>.message(</span></font><i><font color="black"><span style='white-space: nowrap'>catcher</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Public" id="Public">Public</a></big></b>
<br>
This class is part of the CppAD Mixed user API.
It can be used to throw exceptions that may be caught by <code><font color="blue">cppad_mixed</font></code>.

<br>
<br>
<b><big><a name="thrower" id="thrower">thrower</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>thrower</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the name of the routine in which the exception occurred
(the routine that threw the exception).

<br>
<br>
<b><big><a name="brief" id="brief">brief</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>brief</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is a brief description of the exception.

<br>
<br>
<b><big><a name="catcher" id="catcher">catcher</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>catcher</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the name of the routine that caught the exception.

<br>
<br>
<b><big><a name="description" id="description">description</a></big></b>
<br>
This return has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::string&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>description</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
it is a message that includes

<code><i><font color="black"><span style='white-space: nowrap'>catcher</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>thrower</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>brief</span></font></i></code>
.


<hr>Input File: include/cppad/mixed/exception.hpp

</body>
</html>
