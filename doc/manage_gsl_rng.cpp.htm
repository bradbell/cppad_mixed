<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Manage GSL Random Number Generator: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Manage GSL Random Number Generator: Example and Test">
<meta name="keywords" id="keywords" content=" manage gsl random number generator: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_manage_gsl_rng.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="manage_gsl_rng.htm" target="_top">Prev</a>
</td><td><a href="newton_step.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>manage_gsl_rng</option>
<option>manage_gsl_rng.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ipopt_random</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_print</option>
<option>sparsity_print</option>
<option>sparse_ad_cholesky</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>manage_gsl_rng-&gt;</option>
<option>manage_gsl_rng.cpp</option>
</select>
</td>
<td>manage_gsl_rng.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Manage GSL Random Number Generator: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/vector.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;gsl/gsl_randist.h&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/mixed/manage_gsl_rng.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">manage_gsl_rng_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#008080">size_t</font> s_in <font color="#990000">=</font> <font color="#993399">123</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> s_out<font color="#990000">;</font>

     <i><font color="#9A1900">// initialize random number generator using a specific seed</font></i>
     s_out <font color="#990000">=</font> CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">new_gsl_rng</font></b><font color="#990000">(</font>s_in<font color="#990000">);</font>
     ok   <font color="#990000">&amp;=</font> s_out <font color="#990000">==</font> s_in<font color="#990000">;</font>
     <font color="#008080">size_t</font> i<font color="#990000">,</font> j<font color="#990000">,</font> n <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">sim</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
          sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">gsl_ran_flat</font></b><font color="#990000">(</font>CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">get_gsl_rng</font></b><font color="#990000">(),</font> <font color="#993399">0</font><font color="#990000">.,</font> <font color="#993399">1</font><font color="#990000">.);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    ok    <font color="#990000">&amp;=</font> <font color="#993399">0</font><font color="#990000">.</font> <font color="#990000">&lt;=</font> sim<font color="#990000">[</font>i<font color="#990000">];</font>
          ok    <font color="#990000">&amp;=</font> sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">&lt;=</font> <font color="#993399">1</font><font color="#990000">.;</font>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>i <font color="#990000">==</font> j<font color="#990000">)</font> <font color="#990000">||</font> <font color="#990000">(</font>sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">!=</font> sim<font color="#990000">[</font>j<font color="#990000">]);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// done with this random number generator</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">free_gsl_rng</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// test running the same seed</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">new_gsl_rng</font></b><font color="#990000">(</font>s_out<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
          ok    <font color="#990000">&amp;=</font> <font color="#990000">(</font> sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#000000">gsl_ran_flat</font></b><font color="#990000">(</font>CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">get_gsl_rng</font></b><font color="#990000">(),</font> <font color="#993399">0</font><font color="#990000">.,</font> <font color="#993399">1</font><font color="#990000">.)</font> <font color="#990000">);</font>

     <i><font color="#9A1900">// done with this random number generator</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">free_gsl_rng</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// test using system time for the seed</font></i>
     s_in  <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     s_out <font color="#990000">=</font> CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">new_gsl_rng</font></b><font color="#990000">(</font>s_in<font color="#990000">);</font>
     ok   <font color="#990000">&amp;=</font> s_out <font color="#990000">!=</font> s_in<font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">temp</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
          temp<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">gsl_ran_flat</font></b><font color="#990000">(</font>CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">get_gsl_rng</font></b><font color="#990000">(),</font> <font color="#993399">0</font><font color="#990000">.,</font> <font color="#993399">1</font><font color="#990000">.);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> i<font color="#990000">;</font> j<font color="#990000">++)</font>
               ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>temp<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">!=</font> sim<font color="#990000">[</font>j<font color="#990000">]);</font>
     <font color="#FF0000">}</font>

     <i><font color="#9A1900">// make this the previous simulation</font></i>
     sim <font color="#990000">=</font> temp<font color="#990000">;</font>

     <i><font color="#9A1900">// done with this random number generator</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">free_gsl_rng</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// test using a different system time for the seed</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">new_gsl_rng</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
          ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">!=</font> <b><font color="#000000">gsl_ran_flat</font></b><font color="#990000">(</font>CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">get_gsl_rng</font></b><font color="#990000">(),</font> <font color="#993399">0</font><font color="#990000">.,</font> <font color="#993399">1</font><font color="#990000">.)</font> <font color="#990000">);</font>

     <i><font color="#9A1900">// done with this random number generator</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">free_gsl_rng</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// test using the random seed chosen automatically</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">new_gsl_rng</font></b><font color="#990000">(</font>s_out<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
          ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> sim<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#000000">gsl_ran_flat</font></b><font color="#990000">(</font>CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">get_gsl_rng</font></b><font color="#990000">(),</font> <font color="#993399">0</font><font color="#990000">.,</font> <font color="#993399">1</font><font color="#990000">.)</font> <font color="#990000">);</font>

     <i><font color="#9A1900">// done with this random number generator</font></i>
     CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">free_gsl_rng</font></b><font color="#990000">();</font>

     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
</font></code>
<hr>Input File: example/user/manage_gsl_rng.cpp

</body>
</html>
