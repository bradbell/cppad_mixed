<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Initialize Jacobian of Random Likelihood w.r.t. Random Effects</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Initialize Jacobian of Random Likelihood w.r.t. Random Effects">
<meta name="keywords" id="keywords" content=" initialize jacobian random likelihood w.r.t. effects syntax private assumptions init_ran_jac_done_ mixed_object fixed_vec random_vec ran_jac_a1fun_ ran_jac2hes_rc_ ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_init_ran_jac_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="unpack.htm" target="_top">Prev</a>
</td><td><a href="ran_jac_fun.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>base_class</option>
<option>private</option>
<option>init_ran_jac</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_base_class_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_private_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_init_ran_jac_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Initialize Jacobian of Random Likelihood w.r.t. Random Effects</big></big></b></center>

<br><a href="init_ran_jac.htm#Syntax" target="_top">Syntax</a>
<br><a href="init_ran_jac.htm#Private" target="_top">Private</a>
<br><a href="init_ran_jac.htm#Assumptions" target="_top">Assumptions</a>
<br><a href="init_ran_jac.htm#init_ran_jac_done_" target="_top">init_ran_jac_done_</a>
<br><a href="init_ran_jac.htm#mixed_object" target="_top">mixed_object</a>
<br><a href="init_ran_jac.htm#fixed_vec" target="_top">fixed_vec</a>
<br><a href="init_ran_jac.htm#random_vec" target="_top">random_vec</a>
<br><a href="init_ran_jac.htm#ran_jac_a1fun_" target="_top">ran_jac_a1fun_</a>
<br><a href="init_ran_jac.htm#ran_jac2hes_rc_" target="_top">ran_jac2hes_rc_</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>mixed_object</span></font></i><font color="blue"><span style='white-space: nowrap'>.init_ran_jac(</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This <code><font color="blue">cppad_mixed</font></code> member function is <a href="private.htm" target="_top"><span style='white-space: nowrap'>private</span></a>
.

<br>
<br>
<b><big><a name="Assumptions" id="Assumptions">Assumptions</a></big></b>
<br>
The member variable
<a href="init_ran_like.htm#init_ran_like_done_" target="_top"><span style='white-space: nowrap'>init_ran_like_done_</span></a>
 is true.

<br>
<br>
<b><big><a name="init_ran_jac_done_" id="init_ran_jac_done_">init_ran_jac_done_</a></big></b>
<br>
The input value of this member variable must be false.
Upon return it is true.

<br>
<br>
<b><big><a name="mixed_object" id="mixed_object">mixed_object</a></big></b>
<br>
We use <a href="derived_ctor.htm#mixed_object" target="_top"><span style='white-space: nowrap'>mixed_object</span></a>

to denote an object of a class that is
derived from the <code><font color="blue">cppad_mixed</font></code> base class.

<br>
<br>
<b><big><a name="fixed_vec" id="fixed_vec">fixed_vec</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;a1_double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fixed_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the value of the
<a href="cppad_mixed.htm#Notation.Fixed Effects, theta" target="_top"><span style='white-space: nowrap'>fixed&nbsp;effects</span></a>

vector <small>@(@
\theta
@)@</small>.

<br>
<br>
<b><big><a name="random_vec" id="random_vec">random_vec</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;a1_double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>random_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the value of the
<a href="cppad_mixed.htm#Notation.Random Effects, u" target="_top"><span style='white-space: nowrap'>random&nbsp;effects</span></a>

vector <small>@(@
u
@)@</small>.


<br>
<br>
<b><big><a name="ran_jac_a1fun_" id="ran_jac_a1fun_">ran_jac_a1fun_</a></big></b>
<br>
The input value of the member variable

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::ADFun&lt;a1_double&gt;&nbsp;ran_jac_a1fun_<br>
</span></font></code>
does not matter.
upon return zero order forward mode for this function computes
the Jacobian of the random likelihood  with respect to the random effects;
i.e.,
<small>@[@

	f_u ( \theta , u )

@]@</small>; see
<a href="ran_jac_fun.cpp.htm" target="_top"><span style='white-space: nowrap'>ran_jac_fun.cpp</span></a>
.

<br>
<br>
<b><big><a name="ran_jac2hes_rc_" id="ran_jac2hes_rc_">ran_jac2hes_rc_</a></big></b>
<br>
The input value of the member variable

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::mixed::sparse_rc&nbsp;ran_jac2hes_rc_<br>
</span></font></code>
does not matter.
Upon return it contains the sparsity pattern for
<small>@(@
f_{uu} ( \theta , u )
@)@</small> (not just lower triangle).
The row indices are in the vector <small>@(@
u
@)@</small>; i.e., just the random effects.
The column indices are in the vector  <small>@(@
( \theta , u )
@)@</small>; i.e.,
both fixed and random effects.


----------------------------------------------------------------------------

<hr>Input File: src/init_ran_jac.cpp

</body>
</html>
