<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Alphabetic Listing of Cross Reference Tags</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Alphabetic Listing of Cross Reference Tags">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='__reference_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="math_notation.htm" target="_top">Prev</a>
</td><td><a href="_index.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>_reference</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>_reference</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>A</option>
<option>B</option>
<option>C</option>
<option>D</option>
<option>E</option>
<option>F</option>
<option>H</option>
<option>I</option>
<option>L</option>
<option>M</option>
<option>N</option>
<option>O</option>
<option>P</option>
<option>R</option>
<option>S</option>
<option>T</option>
<option>U</option>
<option>W</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Alphabetic Listing of Cross Reference Tags</big></big></b></center>
<table>
<tr valign="top"><td>

<b><big><a name="A">A</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="abs_density.cpp.htm" target="_top">abs_density.cpp</a><br> </td><td> Absolute Value In Log-Density: Example and Test </td></tr><tr valign="top"><td>
<a href="ar1_xam.cpp.htm" target="_top">ar1_xam.cpp</a><br> </td><td> A First Order Auto-Regressive Example and Speed Test </td></tr><tr valign="top"><td>
<a href="ar1_xam.sh.htm" target="_top">ar1_xam.sh</a><br> </td><td> Example Using ar1_xam </td></tr><tr valign="top"><td>

<b><big><a name="B">B</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="base_class.htm" target="_top">base_class</a><br> </td><td> The cppad_mixed Base Class </td></tr><tr valign="top"><td>

<b><big><a name="C">C</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="capture_xam.cpp.htm" target="_top">capture_xam.cpp</a><br> </td><td> A Capture Example and Speed Test </td></tr><tr valign="top"><td>
<a href="capture_xam.sh.htm" target="_top">capture_xam.sh</a><br> </td><td> Example Using capture_xam </td></tr><tr valign="top"><td>
<a href="check_install.sh.htm" target="_top">check_install.sh</a><br> </td><td> Example and Test Using the Installed Version of cppad_mixed </td></tr><tr valign="top"><td>
<a href="check_user_ran_hes.htm" target="_top">check_user_ran_hes</a><br> </td><td> Check User Defined ran_likelihood_hes </td></tr><tr valign="top"><td>
<a href="check_user_ran_jac.htm" target="_top">check_user_ran_jac</a><br> </td><td> Check User Defined ran_likelihood_jac </td></tr><tr valign="top"><td>
<a href="cholmod_solve2_a.cpp.htm" target="_top">cholmod_solve2_a.cpp</a><br> </td><td> Example Using cholmod_solve2 Cholesky Factorization </td></tr><tr valign="top"><td>
<a href="cholmod_solve2_sim.cpp.htm" target="_top">cholmod_solve2_sim.cpp</a><br> </td><td> Cholmod Posterior Simulations Using Sparse Hessian of Likelihood </td></tr><tr valign="top"><td>
<a href="cholmod_solve_xam.htm" target="_top">cholmod_solve_xam</a><br> </td><td> Example Using cholmod_solve With a Non-positive Matrix </td></tr><tr valign="top"><td>
<a href="configure.hpp.htm" target="_top">configure.hpp</a><br> </td><td> Preprocessor Configuration Symbols in configure.hpp </td></tr><tr valign="top"><td>
<a href="cppad_mixed.htm" target="_top">cppad_mixed</a><br> </td><td> C++ Laplace Approximation of Mixed Effects Models:
cppad_mixed-20180725 </td></tr><tr valign="top"><td>

<b><big><a name="D">D</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="data_mismatch.cpp.htm" target="_top">data_mismatch.cpp</a><br> </td><td> Random Effects Variance May Cause Data Mismatch </td></tr><tr valign="top"><td>
<a href="derived_ctor.htm" target="_top">derived_ctor</a><br> </td><td> User Defined Class Derived From cppad_mixed </td></tr><tr valign="top"><td>
<a href="derived_ctor.cpp.htm" target="_top">derived_ctor.cpp</a><br> </td><td> mixed_cppad Derived Class: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="E">E</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="example_install.sh.htm" target="_top">example_install.sh</a><br> </td><td> An Example Installation </td></tr><tr valign="top"><td>
<a href="exception.htm" target="_top">exception</a><br> </td><td> CppAD Mixed Exceptions </td></tr><tr valign="top"><td>

<b><big><a name="F">F</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="fix_con_eval.htm" target="_top">fix_con_eval</a><br> </td><td> Evaluate Fixed Constraint Function </td></tr><tr valign="top"><td>
<a href="fix_con_eval.cpp.htm" target="_top">fix_con_eval.cpp</a><br> </td><td> constraint_eval: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_con_hes.htm" target="_top">fix_con_hes</a><br> </td><td> Hessian of Fixed Constraints </td></tr><tr valign="top"><td>
<a href="fix_con_hes.cpp.htm" target="_top">fix_con_hes.cpp</a><br> </td><td> constraint_hes: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_con_jac.htm" target="_top">fix_con_jac</a><br> </td><td> Jacobian of Fixed Constraint </td></tr><tr valign="top"><td>
<a href="fix_con_jac.cpp.htm" target="_top">fix_con_jac.cpp</a><br> </td><td> constraint_jac: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_constraint.htm" target="_top">fix_constraint</a><br> </td><td> User Defined Fixed Effects Constraint Function </td></tr><tr valign="top"><td>
<a href="fix_constraint.cpp.htm" target="_top">fix_constraint.cpp</a><br> </td><td> Using Constraints: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_like_eval.htm" target="_top">fix_like_eval</a><br> </td><td> Evaluate Fixed Likelihood </td></tr><tr valign="top"><td>
<a href="fix_like_eval.cpp.htm" target="_top">fix_like_eval.cpp</a><br> </td><td> fix_like_eval: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_like_hes.htm" target="_top">fix_like_hes</a><br> </td><td> Hessian of Fixed Likelihood </td></tr><tr valign="top"><td>
<a href="fix_like_hes.cpp.htm" target="_top">fix_like_hes.cpp</a><br> </td><td> fix_like_hes: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_like_jac.htm" target="_top">fix_like_jac</a><br> </td><td> Jacobian of Fixed Likelihood </td></tr><tr valign="top"><td>
<a href="fix_like_jac.cpp.htm" target="_top">fix_like_jac.cpp</a><br> </td><td> fix_like_jac: Example and Test </td></tr><tr valign="top"><td>
<a href="fix_likelihood.htm" target="_top">fix_likelihood</a><br> </td><td> User Defined Fixed Likelihood Function </td></tr><tr valign="top"><td>
<a href="fix_likelihood.cpp.htm" target="_top">fix_likelihood.cpp</a><br> </td><td> Random Likelihood: Example and Test </td></tr><tr valign="top"><td>
<a href="fixed_solution.htm" target="_top">fixed_solution</a><br> </td><td> Optimal Solution Returned by optimize_fixed </td></tr><tr valign="top"><td>

<b><big><a name="H">H</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="hes_cross.cpp.htm" target="_top">hes_cross.cpp</a><br> </td><td> Hessian Cross Terms: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="I">I</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="information_mat.htm" target="_top">information_mat</a><br> </td><td> Compute the Observed Information For Fixed Effects </td></tr><tr valign="top"><td>
<a href="information_mat.cpp.htm" target="_top">information_mat.cpp</a><br> </td><td> Observed Information Matrix: Example and Test </td></tr><tr valign="top"><td>
<a href="init_fix_con.htm" target="_top">init_fix_con</a><br> </td><td> Initialize Constraints as Function of Fixed Effects </td></tr><tr valign="top"><td>
<a href="init_fix_like.htm" target="_top">init_fix_like</a><br> </td><td> Initialize Fixed Likelihood </td></tr><tr valign="top"><td>
<a href="init_hes_cross.htm" target="_top">init_hes_cross</a><br> </td><td> Cross Terms of Sparse Hessian w.r.t Fixed and Random Effects </td></tr><tr valign="top"><td>
<a href="init_laplace_obj.htm" target="_top">init_laplace_obj</a><br> </td><td> Second Order Representation of Laplace Objective and Constraints </td></tr><tr valign="top"><td>
<a href="init_laplace_obj_hes.htm" target="_top">init_laplace_obj_hes</a><br> </td><td> Initialize Hessian of Approximate Laplace Objective </td></tr><tr valign="top"><td>
<a href="init_ldlt_ran_hes.htm" target="_top">init_ldlt_ran_hes</a><br> </td><td> Initialize Cholesky Factor of Hessian of Random Likelihood </td></tr><tr valign="top"><td>
<a href="init_ran_hes.htm" target="_top">init_ran_hes</a><br> </td><td> Initialize Hessian of Random Likelihood w.r.t Random Effects </td></tr><tr valign="top"><td>
<a href="init_ran_jac.htm" target="_top">init_ran_jac</a><br> </td><td> Initialize Jacobian of Random Likelihood w.r.t. Random Effects </td></tr><tr valign="top"><td>
<a href="init_ran_like.htm" target="_top">init_ran_like</a><br> </td><td> Initialize Random Likelihood </td></tr><tr valign="top"><td>
<a href="initialize.htm" target="_top">initialize</a><br> </td><td> Initialization After Constructor </td></tr><tr valign="top"><td>
<a href="install_unix.htm" target="_top">install_unix</a><br> </td><td> Installing cppad_mixed in Unix </td></tr><tr valign="top"><td>
<a href="ipopt_app_status.htm" target="_top">ipopt_app_status</a><br> </td><td> Map Ipopt Application Return Status to a String </td></tr><tr valign="top"><td>
<a href="ipopt_fixed.htm" target="_top">ipopt_fixed</a><br> </td><td> Ipopt NLP Class Used to Optimize Fixed Effects </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_adaptive_derivative_check.htm" target="_top">ipopt_fixed_adaptive_derivative_check</a><br> </td><td> Adaptive Step Size check of Derivative Calculations </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_ctor.htm" target="_top">ipopt_fixed_ctor</a><br> </td><td> Ipopt Fixed Optimization Callback Constructor and Destructor </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_eval_f.htm" target="_top">ipopt_fixed_eval_f</a><br> </td><td> Compute Value of Objective </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_eval_g.htm" target="_top">ipopt_fixed_eval_g</a><br> </td><td> Compute Value of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_eval_grad_f.htm" target="_top">ipopt_fixed_eval_grad_f</a><br> </td><td> Compute Gradient of the Objective </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_eval_h.htm" target="_top">ipopt_fixed_eval_h</a><br> </td><td> Compute the Hessian of the Lagrangian </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_eval_jac_g.htm" target="_top">ipopt_fixed_eval_jac_g</a><br> </td><td> Compute Jacobian of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_finalize_solution.htm" target="_top">ipopt_fixed_finalize_solution</a><br> </td><td> Get Solution Results </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_get_bounds_info.htm" target="_top">ipopt_fixed_get_bounds_info</a><br> </td><td> Return Optimization Bounds </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_get_nlp_info.htm" target="_top">ipopt_fixed_get_nlp_info</a><br> </td><td> Return Information About Problem Sizes </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_get_starting_point.htm" target="_top">ipopt_fixed_get_starting_point</a><br> </td><td> Return Initial Values Where Optimization is Started </td></tr><tr valign="top"><td>
<a href="ipopt_fixed_new_random.htm" target="_top">ipopt_fixed_new_random</a><br> </td><td> Compute New Random Effects and Update Factor </td></tr><tr valign="top"><td>
<a href="ipopt_nlp_xam.htm" target="_top">ipopt_nlp_xam</a><br> </td><td> Ipopt Example: Declare Non-linear Program Problem Class </td></tr><tr valign="top"><td>
<a href="ipopt_options.htm" target="_top">ipopt_options</a><br> </td><td> An Ipopt Options Argument </td></tr><tr valign="top"><td>
<a href="ipopt_random.htm" target="_top">ipopt_random</a><br> </td><td> Ipopt NLP Class Used to Optimize Random Effects </td></tr><tr valign="top"><td>
<a href="ipopt_random_ctor.htm" target="_top">ipopt_random_ctor</a><br> </td><td> Ipopt Random Optimization Callback Constructor </td></tr><tr valign="top"><td>
<a href="ipopt_random_eval_f.htm" target="_top">ipopt_random_eval_f</a><br> </td><td> Compute Value of Objective </td></tr><tr valign="top"><td>
<a href="ipopt_random_eval_g.htm" target="_top">ipopt_random_eval_g</a><br> </td><td> Compute Value of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_random_eval_grad_f.htm" target="_top">ipopt_random_eval_grad_f</a><br> </td><td> Compute Gradient of the Objective </td></tr><tr valign="top"><td>
<a href="ipopt_random_eval_h.htm" target="_top">ipopt_random_eval_h</a><br> </td><td> Compute the Hessian of the Lagrangian </td></tr><tr valign="top"><td>
<a href="ipopt_random_eval_jac_g.htm" target="_top">ipopt_random_eval_jac_g</a><br> </td><td> Compute Jacobian of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_random_finalize_solution.htm" target="_top">ipopt_random_finalize_solution</a><br> </td><td> Get Solution Results </td></tr><tr valign="top"><td>
<a href="ipopt_random_get_bounds_info.htm" target="_top">ipopt_random_get_bounds_info</a><br> </td><td> Return Optimization Bounds </td></tr><tr valign="top"><td>
<a href="ipopt_random_get_nlp_info.htm" target="_top">ipopt_random_get_nlp_info</a><br> </td><td> Return Information About Problem Sizes </td></tr><tr valign="top"><td>
<a href="ipopt_random_get_starting_point.htm" target="_top">ipopt_random_get_starting_point</a><br> </td><td> Return Initial Values Where Optimization is Started </td></tr><tr valign="top"><td>
<a href="ipopt_run_xam.htm" target="_top">ipopt_run_xam</a><br> </td><td> Ipopt: Example and Test </td></tr><tr valign="top"><td>
<a href="ipopt_trace.htm" target="_top">ipopt_trace</a><br> </td><td> Description of Ipopt Tracing Output </td></tr><tr valign="top"><td>
<a href="ipopt_xam.htm" target="_top">ipopt_xam</a><br> </td><td> Example Use of Ipopt </td></tr><tr valign="top"><td>
<a href="ipopt_xam_ctor.htm" target="_top">ipopt_xam_ctor</a><br> </td><td> Ipopt Example: Constructor and Destructor </td></tr><tr valign="top"><td>
<a href="ipopt_xam_eval_f.htm" target="_top">ipopt_xam_eval_f</a><br> </td><td> Compute Value of Objective </td></tr><tr valign="top"><td>
<a href="ipopt_xam_eval_g.htm" target="_top">ipopt_xam_eval_g</a><br> </td><td> Compute Value of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_xam_eval_grad_f.htm" target="_top">ipopt_xam_eval_grad_f</a><br> </td><td> Compute Gradient of the Objective </td></tr><tr valign="top"><td>
<a href="ipopt_xam_eval_h.htm" target="_top">ipopt_xam_eval_h</a><br> </td><td> Compute the Hessian of the Lagrangian </td></tr><tr valign="top"><td>
<a href="ipopt_xam_eval_jac_g.htm" target="_top">ipopt_xam_eval_jac_g</a><br> </td><td> Compute Jacobian of Constraint Functions </td></tr><tr valign="top"><td>
<a href="ipopt_xam_finalize_solution.htm" target="_top">ipopt_xam_finalize_solution</a><br> </td><td> Get Solution Results </td></tr><tr valign="top"><td>
<a href="ipopt_xam_get_bounds_info.htm" target="_top">ipopt_xam_get_bounds_info</a><br> </td><td> Return Optimization Bounds </td></tr><tr valign="top"><td>
<a href="ipopt_xam_get_nlp_info.htm" target="_top">ipopt_xam_get_nlp_info</a><br> </td><td> Return Information About Problem Sizes </td></tr><tr valign="top"><td>
<a href="ipopt_xam_get_starting_point.htm" target="_top">ipopt_xam_get_starting_point</a><br> </td><td> Return Initial Values Where Optimization is Started </td></tr><tr valign="top"><td>
<a href="ipopt_xam_intermediate_callback.htm" target="_top">ipopt_xam_intermediate_callback</a><br> </td><td> Ipopt Example: Optimization Progress Report </td></tr><tr valign="top"><td>

<b><big><a name="L">L</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="laplace_obj_hes.htm" target="_top">laplace_obj_hes</a><br> </td><td> Hessian of Laplace Objective and Random Constraints </td></tr><tr valign="top"><td>
<a href="laplace_obj_hes.cpp.htm" target="_top">laplace_obj_hes.cpp</a><br> </td><td> laplace_obj_hes: Example and Test </td></tr><tr valign="top"><td>
<a href="lasso.cpp.htm" target="_top">lasso.cpp</a><br> </td><td> Lasso on Fixed Effects: Example and Test </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod.htm" target="_top">ldlt_cholmod</a><br> </td><td> A Cholmod Cholesky Factor Class </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod.cpp.htm" target="_top">ldlt_cholmod.cpp</a><br> </td><td> Example Using Cholmod LDLT Factorization </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_ctor.htm" target="_top">ldlt_cholmod_ctor</a><br> </td><td> Cholmod LDLT Constructor </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_dtor.htm" target="_top">ldlt_cholmod_dtor</a><br> </td><td> Cholmod Destructor </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_init.htm" target="_top">ldlt_cholmod_init</a><br> </td><td> Initialize Factor for a Specific Sparsity Pattern </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_inv.htm" target="_top">ldlt_cholmod_inv</a><br> </td><td> Compute a Subset of the Inverse of Factored Matrix </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_logdet.htm" target="_top">ldlt_cholmod_logdet</a><br> </td><td> Compute Log Determinant for Current Factor </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_sim_cov.htm" target="_top">ldlt_cholmod_sim_cov</a><br> </td><td> Simulations with Covariance Corresponding to Factored Matrix </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_solve_h.htm" target="_top">ldlt_cholmod_solve_H</a><br> </td><td> Solve Linear Equations Using Factor </td></tr><tr valign="top"><td>
<a href="ldlt_cholmod_update.htm" target="_top">ldlt_cholmod_update</a><br> </td><td> Update Factorization Using new Matrix Values </td></tr><tr valign="top"><td>
<a href="ldlt_eigen.htm" target="_top">ldlt_eigen</a><br> </td><td> An Eigen LDLT Factor Class </td></tr><tr valign="top"><td>
<a href="ldlt_eigen.cpp.htm" target="_top">ldlt_eigen.cpp</a><br> </td><td> Example Using Eigen LDLT Factorization </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_ctor.htm" target="_top">ldlt_eigen_ctor</a><br> </td><td> Eigen LDLT Constructor </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_init.htm" target="_top">ldlt_eigen_init</a><br> </td><td> Initialize LDLT Factor for a Specific Sparsity Pattern </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_inv.htm" target="_top">ldlt_eigen_inv</a><br> </td><td> Compute a Subset of the Inverse of Factored Matrix </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_logdet.htm" target="_top">ldlt_eigen_logdet</a><br> </td><td> Compute Log Determinant for Current LDLT Factor </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_sim_cov.htm" target="_top">ldlt_eigen_sim_cov</a><br> </td><td> Simulations with Covariance Corresponding to Factored Matrix </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_solve_h.htm" target="_top">ldlt_eigen_solve_H</a><br> </td><td> Solve Linear Equations Using LDLT Factor </td></tr><tr valign="top"><td>
<a href="ldlt_eigen_update.htm" target="_top">ldlt_eigen_update</a><br> </td><td> Update Factorization Using new Matrix Values </td></tr><tr valign="top"><td>
<a href="logdet_jac.htm" target="_top">logdet_jac</a><br> </td><td> Jacobian of Log Determinant of Hessian w.r.t. Random Effects </td></tr><tr valign="top"><td>
<a href="logdet_jac.cpp.htm" target="_top">logdet_jac.cpp</a><br> </td><td> logdet_jac: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="M">M</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="manage_gsl_rng.htm" target="_top">manage_gsl_rng</a><br> </td><td> Set, Get, And Free A GSL Random Number Generator </td></tr><tr valign="top"><td>
<a href="manage_gsl_rng.cpp.htm" target="_top">manage_gsl_rng.cpp</a><br> </td><td> Manage GSL Random Number Generator: Example and Test </td></tr><tr valign="top"><td>
<a href="math_notation.htm" target="_top">math_notation</a><br> </td><td> Mathematical Notation </td></tr><tr valign="top"><td>

<b><big><a name="N">N</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="namespace.htm" target="_top">namespace</a><br> </td><td> The CppAD::mixed Namespace Declarations </td></tr><tr valign="top"><td>
<a href="no_random.cpp.htm" target="_top">no_random.cpp</a><br> </td><td> No Random Effects: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="O">O</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="opt_ran_nan.cpp.htm" target="_top">opt_ran_nan.cpp</a><br> </td><td> Nan's During Optimization of Random Effects: Example and Test </td></tr><tr valign="top"><td>
<a href="optimize_fixed.htm" target="_top">optimize_fixed</a><br> </td><td> Optimize Fixed Effects </td></tr><tr valign="top"><td>
<a href="optimize_fixed.cpp.htm" target="_top">optimize_fixed.cpp</a><br> </td><td> Optimize Fixed Effects: Example and Test </td></tr><tr valign="top"><td>
<a href="optimize_random.htm" target="_top">optimize_random</a><br> </td><td> Optimize Random Effects </td></tr><tr valign="top"><td>
<a href="optimize_random.cpp.htm" target="_top">optimize_random.cpp</a><br> </td><td> Optimize Random Effects: Example and Test </td></tr><tr valign="top"><td>
<a href="order2random.htm" target="_top">order2random</a><br> </td><td> Second Order Representation of Random Effects, W(beta, theta, u) </td></tr><tr valign="top"><td>
<a href="order2random.cpp.htm" target="_top">order2random.cpp</a><br> </td><td> order2random: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="P">P</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="pack.htm" target="_top">pack</a><br> </td><td> Pack Fixed Effect and Random Effects Into One Vector </td></tr><tr valign="top"><td>
<a href="private.htm" target="_top">private</a><br> </td><td> cppad_mixed: Private Declarations </td></tr><tr valign="top"><td>
<a href="public.htm" target="_top">public</a><br> </td><td> cppad_mixed: Public Declarations </td></tr><tr valign="top"><td>

<b><big><a name="R">R</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="ran_con_eval.htm" target="_top">ran_con_eval</a><br> </td><td> Evaluate the Random Constraint Function </td></tr><tr valign="top"><td>
<a href="ran_con_eval.cpp.htm" target="_top">ran_con_eval.cpp</a><br> </td><td> ran_con_eval: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_con_jac.htm" target="_top">ran_con_jac</a><br> </td><td> Jacobian of the Random Constraint Function </td></tr><tr valign="top"><td>
<a href="ran_con_jac.cpp.htm" target="_top">ran_con_jac.cpp</a><br> </td><td> ran_con_jac: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_constraint.cpp.htm" target="_top">ran_constraint.cpp</a><br> </td><td> Constraints On Random Effects: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_hes_fun.cpp.htm" target="_top">ran_hes_fun.cpp</a><br> </td><td> ran_hes_fun_: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_like_jac.htm" target="_top">ran_like_jac</a><br> </td><td> Jacobian of Random Likelihood w.r.t. Random Effects </td></tr><tr valign="top"><td>
<a href="ran_like_jac.cpp.htm" target="_top">ran_like_jac.cpp</a><br> </td><td> ran_like_jac: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_likelihood.htm" target="_top">ran_likelihood</a><br> </td><td> User Defined Random Likelihood Function </td></tr><tr valign="top"><td>
<a href="ran_likelihood.cpp.htm" target="_top">ran_likelihood.cpp</a><br> </td><td> Random Likelihood: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_likelihood_hes.htm" target="_top">ran_likelihood_hes</a><br> </td><td> User Define Hessian With Respect to Random Effects </td></tr><tr valign="top"><td>
<a href="ran_likelihood_hes.cpp.htm" target="_top">ran_likelihood_hes.cpp</a><br> </td><td> Random Likelihood Hessian: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_likelihood_jac.htm" target="_top">ran_likelihood_jac</a><br> </td><td> User Define Jacobian With Respect to Random Effects </td></tr><tr valign="top"><td>
<a href="ran_likelihood_jac.cpp.htm" target="_top">ran_likelihood_jac.cpp</a><br> </td><td> Random Likelihood Jacobian: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_obj_eval.htm" target="_top">ran_obj_eval</a><br> </td><td> Evaluate Laplace Approximation and Laplace Objective </td></tr><tr valign="top"><td>
<a href="ran_obj_eval.cpp.htm" target="_top">ran_obj_eval.cpp</a><br> </td><td> ran_obj_eval: Example and Test </td></tr><tr valign="top"><td>
<a href="ran_obj_jac.htm" target="_top">ran_obj_jac</a><br> </td><td> Derivative of Laplace Objective </td></tr><tr valign="top"><td>
<a href="ran_obj_jac.cpp.htm" target="_top">ran_obj_jac.cpp</a><br> </td><td> ran_obj_jac: Example and Test </td></tr><tr valign="top"><td>
<a href="run_cmake.sh.htm" target="_top">run_cmake.sh</a><br> </td><td> bin/run_cmake.sh: User Configuration Options </td></tr><tr valign="top"><td>

<b><big><a name="S">S</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="sample_conditional.htm" target="_top">sample_conditional</a><br> </td><td> Sample Posterior for Fixed Effects Using Conditional Covariance </td></tr><tr valign="top"><td>
<a href="sample_fixed.htm" target="_top">sample_fixed</a><br> </td><td> Sample Posterior for Fixed Effects </td></tr><tr valign="top"><td>
<a href="sample_fixed.cpp.htm" target="_top">sample_fixed.cpp</a><br> </td><td> Sample From Fixed Effects Posterior: Example and Test </td></tr><tr valign="top"><td>
<a href="sample_random.htm" target="_top">sample_random</a><br> </td><td> Simulation the Posterior Distribution for Random Effects </td></tr><tr valign="top"><td>
<a href="sample_random.cpp.htm" target="_top">sample_random.cpp</a><br> </td><td> Sample From Fixed Effects Posterior: Example and Test </td></tr><tr valign="top"><td>
<a href="set_hes_sparsity.htm" target="_top">set_hes_sparsity</a><br> </td><td> Set the Hessian Sparsity Pattern </td></tr><tr valign="top"><td>
<a href="set_jac_sparsity.htm" target="_top">set_jac_sparsity</a><br> </td><td> Set the Jacobian Sparsity Pattern </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_eq.cpp.htm" target="_top">sparse_ad_chol_eq.cpp</a><br> </td><td> Using Sparse AD Cholesky To Solve Equations: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_eval.cpp.htm" target="_top">sparse_ad_chol_eval.cpp</a><br> </td><td> Sparse AD Cholesky Factorization: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_perm.cpp.htm" target="_top">sparse_ad_chol_perm.cpp</a><br> </td><td> Sparse AD Cholesky Permutation: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_sp1.cpp.htm" target="_top">sparse_ad_chol_sp1.cpp</a><br> </td><td> Sparse AD Cholesky Sparsity Calculation: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_sp2.cpp.htm" target="_top">sparse_ad_chol_sp2.cpp</a><br> </td><td> Sparse AD Cholesky Sparsity Calculation: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_chol_var.cpp.htm" target="_top">sparse_ad_chol_var.cpp</a><br> </td><td> Sparse AD Cholesky Variable Calculation: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_ad_cholesky.htm" target="_top">sparse_ad_cholesky</a><br> </td><td> Sparse Cholesky Factorization as an Atomic CppAD Operation </td></tr><tr valign="top"><td>
<a href="sparse_ad_cholesky_eval.htm" target="_top">sparse_ad_cholesky_eval</a><br> </td><td> Using Sparse AD Cholesky Factor L </td></tr><tr valign="top"><td>
<a href="sparse_ad_cholesky_initialize.htm" target="_top">sparse_ad_cholesky_initialize</a><br> </td><td> Initialize Sparse AD Cholesky Factorization </td></tr><tr valign="top"><td>
<a href="sparse_ad_cholesky_p.htm" target="_top">sparse_ad_cholesky_p</a><br> </td><td> Using Sparse AD Cholesky Permutation P </td></tr><tr valign="top"><td>
<a href="sparse_eigen2info.htm" target="_top">sparse_eigen2info</a><br> </td><td> Convert An Eigen Sparse Matrix to a sparse_mat_info Representation </td></tr><tr valign="top"><td>
<a href="sparse_eigen2info.cpp.htm" target="_top">sparse_eigen2info.cpp</a><br> </td><td> sparse_eigen2info: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_hes_info.htm" target="_top">sparse_hes_info</a><br> </td><td> Sparse Hessian Information </td></tr><tr valign="top"><td>
<a href="sparse_hes_rcv.htm" target="_top">sparse_hes_rcv</a><br> </td><td> Sparse Hessian Computation Structure </td></tr><tr valign="top"><td>
<a href="sparse_info2eigen.htm" target="_top">sparse_info2eigen</a><br> </td><td> Convert a sparse_mat_info Representation to An Eigen Sparse Matrix </td></tr><tr valign="top"><td>
<a href="sparse_info2eigen.cpp.htm" target="_top">sparse_info2eigen.cpp</a><br> </td><td> sparse_info2eigen: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_jac_rcv.htm" target="_top">sparse_jac_rcv</a><br> </td><td> Sparse Jacobian Computation Structure </td></tr><tr valign="top"><td>
<a href="sparse_low2sym.htm" target="_top">sparse_low2sym</a><br> </td><td> Convert an Eigen Lower Triangular Matrix To a Symmetric Matrix </td></tr><tr valign="top"><td>
<a href="sparse_low2sym.cpp.htm" target="_top">sparse_low2sym.cpp</a><br> </td><td> sparse_low2sym: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_low_tri_sol.htm" target="_top">sparse_low_tri_sol</a><br> </td><td> Solve a Sparse Lower Triangular Linear System </td></tr><tr valign="top"><td>
<a href="sparse_low_tri_sol.cpp.htm" target="_top">sparse_low_tri_sol.cpp</a><br> </td><td> sparse_low_tri_sol: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_mat2low.htm" target="_top">sparse_mat2low</a><br> </td><td> Extract the Lower Triangular From an Eigen Symmetric Matrix </td></tr><tr valign="top"><td>
<a href="sparse_mat2low.cpp.htm" target="_top">sparse_mat2low.cpp</a><br> </td><td> sparse_mat2low: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_mat_info.htm" target="_top">sparse_mat_info</a><br> </td><td> Sparse Matrix Information </td></tr><tr valign="top"><td>
<a href="sparse_print.htm" target="_top">sparse_print</a><br> </td><td> Print and Eigen Sparse Matrix </td></tr><tr valign="top"><td>
<a href="sparse_scale_diag.htm" target="_top">sparse_scale_diag</a><br> </td><td> Scales the Diagonal of an Eigen Sparse Matrix </td></tr><tr valign="top"><td>
<a href="sparse_scale_diag.cpp.htm" target="_top">sparse_scale_diag.cpp</a><br> </td><td> sparse_scale_diag: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_up_tri_sol.htm" target="_top">sparse_up_tri_sol</a><br> </td><td> Solve a Sparse Upper Triangular Linear System </td></tr><tr valign="top"><td>
<a href="sparse_up_tri_sol.cpp.htm" target="_top">sparse_up_tri_sol.cpp</a><br> </td><td> sparse_up_tri_sol: Example and Test </td></tr><tr valign="top"><td>
<a href="sparsity_print.htm" target="_top">sparsity_print</a><br> </td><td> Print a CppAD Internal Sparsity Pattern </td></tr><tr valign="top"><td>
<a href="speed.htm" target="_top">speed</a><br> </td><td> Example Programs That are Also Speed and Memory Tests </td></tr><tr valign="top"><td>

<b><big><a name="T">T</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="theory.htm" target="_top">theory</a><br> </td><td> Laplace Approximation for Mixed Effects Models </td></tr><tr valign="top"><td>
<a href="triple2eigen.htm" target="_top">triple2eigen</a><br> </td><td> Convert Row, Column, Value Triple to an Eigen Sparse Matrix </td></tr><tr valign="top"><td>
<a href="typedef.htm" target="_top">typedef</a><br> </td><td> Types Defined in the CppAD Mixed Namespace </td></tr><tr valign="top"><td>

<b><big><a name="U">U</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="undetermined.htm" target="_top">undetermined</a><br> </td><td> Express An Undetermined Linear System As Dependent and Independent Variables </td></tr><tr valign="top"><td>
<a href="undetermined.cpp.htm" target="_top">undetermined.cpp</a><br> </td><td> undetermined: Example and Test </td></tr><tr valign="top"><td>
<a href="unpack.htm" target="_top">unpack</a><br> </td><td> Pack Fixed Effect and Random Effects Into One Vector </td></tr><tr valign="top"><td>
<a href="update_factor.htm" target="_top">update_factor</a><br> </td><td> Update the Factorization of Hessian w.r.t. Random Effects </td></tr><tr valign="top"><td>
<a href="update_factor.cpp.htm" target="_top">update_factor.cpp</a><br> </td><td> update_factor: Example and Test </td></tr><tr valign="top"><td>
<a href="user.htm" target="_top">user</a><br> </td><td> User API Examples </td></tr><tr valign="top"><td>

<b><big><a name="W">W</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="whats_new_15.htm" target="_top">whats_new_15</a><br> </td><td> Changes and Additions to cppad_mixed During 2015 </td></tr><tr valign="top"><td>
<a href="whats_new_16.htm" target="_top">whats_new_16</a><br> </td><td> Changes and Additions to cppad_mixed During 2016 </td></tr><tr valign="top"><td>
<a href="whats_new_17.htm" target="_top">whats_new_17</a><br> </td><td> Changes and Additions to cppad_mixed During 2017 </td></tr><tr valign="top"><td>
<a href="whats_new_18.htm" target="_top">whats_new_18</a><br> </td><td> Changes and Additions to cppad_mixed During 2018 </td></tr><tr valign="top"><td>
<a href="wish_list.htm" target="_top">wish_list</a><br> </td><td> CppAD Mixed Wish List </td></tr><tr valign="top"><td>
</td></tr></table>

</body>
</html>
