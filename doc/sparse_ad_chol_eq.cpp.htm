<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Using Sparse AD Cholesky To Solve Equations: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Using Sparse AD Cholesky To Solve Equations: Example and Test">
<meta name="keywords" id="keywords" content=" using sparse ad cholesky to solve equations: example test source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_ad_chol_eq.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_ad_chol_perm.cpp.htm" target="_top">Prev</a>
</td><td><a href="sparse_ad_chol_var.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_ad_cholesky</option>
<option>sparse_ad_chol_eq.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_mixed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_namespace_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse_ad_cholesky_htm.js'></script>
</td>
<td>sparse_ad_chol_eq.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Using Sparse AD Cholesky To Solve Equations: Example and Test</big></big></b></center>

<br><a href="sparse_ad_chol_eq.cpp.htm#Source" target="_top">Source</a>
<br><br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>    
    <font color="#009900">bool</font> <b><font color="#000000">sparse_ad_chol_eq</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
        <b><font color="#0000FF">using</font></b> Eigen<font color="#990000">::</font>ColMajor<font color="#990000">;</font>
        <b><font color="#0000FF">using</font></b> Eigen<font color="#990000">::</font>Lower<font color="#990000">;</font>
        <b><font color="#0000FF">using</font></b> Eigen<font color="#990000">::</font>Upper<font color="#990000">;</font>
        <b><font color="#0000FF">typedef</font></b> Eigen<font color="#990000">::</font><font color="#008080">Matrix&lt; AD&lt;double&gt;, Eigen::Dynamic, 1&gt;</font>  dense_ad_vector<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <font color="#009900">bool</font> ok        <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <font color="#008080">AD&lt;double&gt;</font> eps <font color="#990000">=</font> <font color="#993399">100</font><font color="#990000">.</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
        <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
        <i><font color="#9A1900">// create sparse_ad_cholesky object</font></i>
        <font color="#009900">int</font> nc <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
        Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt; AD&lt;double&gt;, Eigen::ColMajor&gt;</font> <b><font color="#000000">ad_Blow</font></b><font color="#990000">(</font>nc<font color="#990000">,</font> nc<font color="#990000">);</font>
        ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font> <i><font color="#9A1900">//     [ 1.0   0.0    0.5 ]</font></i>
        ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font> <i><font color="#9A1900">// B = [ 0.0   0.5    0.0 ]</font></i>
        ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font> <i><font color="#9A1900">//     [ 0.5   0.0    2.0 ]</font></i>
        ad_Blow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
        CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><font color="#008080">sparse_ad_cholesky</font> cholesky<font color="#990000">;</font>
        cholesky<font color="#990000">.</font><b><font color="#000000">initialize</font></b><font color="#990000">(</font> ad_Blow <font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Permutation matrix corresponding to this cholesky</font></i>
        <b><font color="#0000FF">const</font></b> Eigen<font color="#990000">::</font>PermutationMatrix<font color="#990000">&lt;</font>Eigen<font color="#990000">::</font>Dynamic<font color="#990000">,</font> Eigen<font color="#990000">::</font>Dynamic<font color="#990000">&gt;&amp;</font> P <font color="#990000">=</font>
            cholesky<font color="#990000">.</font><b><font color="#000000">permutation</font></b><font color="#990000">();</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Lower triangle of symmetric matrix with same sparsity pattern as B</font></i>
        Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt; AD&lt;double&gt;, Eigen::ColMajor&gt;</font> <b><font color="#000000">Alow</font></b><font color="#990000">(</font>nc<font color="#990000">,</font> nc<font color="#990000">);</font>
        Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font> <i><font color="#9A1900">//     [ 2.0   0.0   0.5  ]</font></i>
        Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font> <i><font color="#9A1900">// A = [ 0.0   0.5   0.0  ]</font></i>
        Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font> <i><font color="#9A1900">//     [ 0.5   0.0   1.0  ]</font></i>
        Alow<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font><font color="#993399">2</font><font color="#990000">)</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// compute the Choleksy factorization of A</font></i>
        Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt; AD&lt;double&gt;, Eigen::ColMajor&gt;</font> L<font color="#990000">;</font>
        cholesky<font color="#990000">.</font><b><font color="#000000">eval</font></b><font color="#990000">(</font>Alow<font color="#990000">,</font> L<font color="#990000">);</font>
        Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt; AD&lt;double&gt;, Eigen::ColMajor&gt;</font> U <font color="#990000">=</font> L<font color="#990000">.</font><b><font color="#000000">transpose</font></b><font color="#990000">();</font>
        ok <font color="#990000">&amp;=</font> L<font color="#990000">.</font><b><font color="#000000">rows</font></b><font color="#990000">()</font> <font color="#990000">==</font> nc<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> L<font color="#990000">.</font><b><font color="#000000">cols</font></b><font color="#990000">()</font> <font color="#990000">==</font> nc<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// right hand side for equation</font></i>
        <font color="#008080">dense_ad_vector</font> <b><font color="#000000">b</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">);</font>
        b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
        b<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
        b<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">3.0</font><font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// solve the equation: A * x  = b</font></i>
        <i><font color="#9A1900">//        P * A * P^T * P * x = P * b</font></i>
        <i><font color="#9A1900">//            L * L^T * P * x = P * b</font></i>
        <font color="#008080">dense_ad_vector</font> x<font color="#990000">,</font> tmp<font color="#990000">;</font>
        tmp <font color="#990000">=</font> P <font color="#990000">*</font> b<font color="#990000">;</font>
        tmp <font color="#990000">=</font> L<font color="#990000">.</font>triangularView<font color="#990000">&lt;</font>Lower<font color="#990000">&gt;().</font><b><font color="#000000">solve</font></b><font color="#990000">(</font>tmp<font color="#990000">);</font>
        tmp <font color="#990000">=</font> U<font color="#990000">.</font>triangularView<font color="#990000">&lt;</font>Upper<font color="#990000">&gt;().</font><b><font color="#000000">solve</font></b><font color="#990000">(</font>tmp<font color="#990000">);</font>
        x   <font color="#990000">=</font> P<font color="#990000">.</font><b><font color="#000000">transpose</font></b><font color="#990000">()</font> <font color="#990000">*</font> tmp<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// dense version of matrix  A</font></i>
        Eigen<font color="#990000">::</font><font color="#008080">Matrix&lt; AD&lt;double&gt;, 3, 3&gt;</font> A <font color="#990000">=</font> Alow<font color="#990000">;</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">3</font><font color="#990000">;</font> i<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> <font color="#993399">3</font><font color="#990000">;</font> j<font color="#990000">++)</font>
            <font color="#FF0000">{</font>   <b><font color="#000000">A</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> <b><font color="#000000">A</font></b><font color="#990000">(</font>j<font color="#990000">,</font> i<font color="#990000">);</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// compter A * x with b</font></i>
        <font color="#008080">dense_ad_vector</font> check <font color="#990000">=</font> A <font color="#990000">*</font> x<font color="#990000">;</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">3</font><font color="#990000">;</font> i<font color="#990000">++)</font>
            ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>check<font color="#990000">[</font>i<font color="#990000">],</font> b<font color="#990000">[</font>i<font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
        <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
        <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
    <font color="#FF0000">}</font></tt></pre>

<hr>Input File: cholesky/example/sparse_ad_chol_eq.cpp

</body>
</html>
