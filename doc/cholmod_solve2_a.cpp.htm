<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Example Using cholmod_solve2 Cholesky Factorization</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Example Using cholmod_solve2 Cholesky Factorization">
<meta name="keywords" id="keywords" content=" example using cholmod_solve2 cholesky factorization problem description bset source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_cholmod_solve2_a.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_mixed" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="cholmod_solve_xam.htm" target="_top">Prev</a>
</td><td><a href="cholmod_solve2_sim.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>ldlt_cholmod</option>
<option>cholmod_solve2_a.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_18</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ipopt_random</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_print</option>
<option>sparsity_print</option>
<option>sparse_ad_cholesky</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ldlt_cholmod-&gt;</option>
<option>ldlt_cholmod_ctor</option>
<option>ldlt_cholmod_dtor</option>
<option>ldlt_cholmod_init</option>
<option>ldlt_cholmod_update</option>
<option>ldlt_cholmod_logdet</option>
<option>ldlt_cholmod_solve_H</option>
<option>ldlt_cholmod_sim_cov</option>
<option>ldlt_cholmod_inv</option>
<option>ldlt_cholmod.cpp</option>
<option>cholmod_solve_xam</option>
<option>cholmod_solve2_a.cpp</option>
<option>cholmod_solve2_sim.cpp</option>
</select>
</td>
<td>cholmod_solve2_a.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Problem Description</option>
<option>Bset</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Example Using cholmod_solve2 Cholesky Factorization</big></big></b></center>
<br>
<b><big><a name="Problem Description" id="Problem Description">Problem Description</a></big></b>
<br>
Solve for <small>@(@
x
@)@</small> in the equation <small>@(@
A x = b
@)@</small> where <small>@(@
A
@)@</small>
is defined below and <small>@(@
b
@)@</small> is a column of the identity matrix.
Hence the solution <small>@(@
x
@)@</small> is the corresponding column of
<small>@(@
A^{-1}
@)@</small>.
<small>@[@

	G = \left( \begin{array}{ccc}
		5 & 4 & 2 \\
		4 & 5 & 1 \\
		2 & 1 & 5
	\end{array} \right)
	\W{,}
	A = \left( \begin{array}{cc}
		G & 0 \\
		0 & G
	\end{array} \right)

@]@</small>
We use <small>@(@
G^k
@)@</small> to denote the upper-left <small>@(@
k \times k
@)@</small>
principal minor. The determinant of its principal minors are:
<small>@[@

	\det \left( G^1 \right) = 5  \W{,}
	\det \left( G^2 \right) = 9  \W{,}
	\det \left( G^3 \right) = 36

@]@</small>
Hence, <small>@(@
G
@)@</small> and <small>@(@
A
@)@</small> are positive definite.
In addition
<small>@[@

	G^{-1} = \frac{1}{36}
	\left( \begin{array}{ccc}
		24  & -18 & -6 \\
		-18 & 21  & 3 \\
		-6  & 3   & 9
	\end{array} \right)
	\W{,}
	A^{-1} = \left( \begin{array}{cc}
		G^{-1} & 0 \\
		0 & G^{-1}
	\end{array} \right)

@]@</small>
which can be checked by multiplying by <small>@(@
G G^{-1}
@)@</small>.

<br>
<br>
<b><big><a name="Bset" id="Bset">Bset</a></big></b>
<br>
I think the <code><font color="blue">cholmod_solve2</font></code> documentation would be clearer if
the sentence
'The entries in <code><font color="blue">Bset</font></code> are a subset of <code><font color="blue">Xset</font></code>
(except if sys is <code><font color="blue">CHOLMOD_P</font></code> or <code><font color="blue">CHOLMOD_Pt</font></code> ).'
were changed to
'The entries in <code><font color="blue">Bset</font></code> are a subset of <code><font color="blue">Xset</font></code>
and only these entries are assured to appear in <code><font color="blue">Xset</font></code>
(except if sys is <code><font color="blue">CHOLMOD_P</font></code> or <code><font color="blue">CHOLMOD_Pt</font></code> ).'

<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>

<code><font color="blue">
<pre><tt>     
<b><font color="#000080">     # include</font></b> <font color="#FF0000">&lt;cppad/mixed/include_cholmod.hpp&gt;</font>
<b><font color="#000080">     # include</font></b> <font color="#FF0000">&lt;limits&gt;</font>
<b><font color="#000080">     # include</font></b> <font color="#FF0000">&lt;cmath&gt;</font>
<b><font color="#000080">     # include</font></b> <font color="#FF0000">&lt;cassert&gt;</font>
<b><font color="#000080">     # include</font></b> <font color="#FF0000">&lt;cppad/utility/vector.hpp&gt;</font>
     
<b><font color="#000080">     # define</font></b> CHOLMOD_TRUE                  <font color="#993399">1</font>
<b><font color="#000080">     # define</font></b> CHOLMOD_FALSE                 <font color="#993399">0</font>
<b><font color="#000080">     # define</font></b> CHOLMOD_STYPE_NOT_SYMMETRIC   <font color="#993399">0</font>
<b><font color="#000080">     # define</font></b> CHOLMOD_STYPE_LOWER_TRIANGLE <font color="#990000">-</font><font color="#993399">1</font>
     
     <b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN_EMPTY_NAMESPACE</font></i>
          <font color="#009900">void</font> <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font><font color="#008080">cholmod_triplet</font> <font color="#990000">*</font>T<font color="#990000">,</font> <font color="#009900">int</font> r<font color="#990000">,</font> <font color="#009900">int</font> c<font color="#990000">,</font> <font color="#009900">double</font> x<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <font color="#008080">size_t</font> k           <font color="#990000">=</font> T<font color="#990000">-&gt;</font>nnz<font color="#990000">;</font>
               <font color="#990000">((</font><font color="#009900">int</font><font color="#990000">*)</font>T<font color="#990000">-&gt;</font>i<font color="#990000">)[</font>k<font color="#990000">]</font>    <font color="#990000">=</font> r<font color="#990000">;</font>
               <font color="#990000">((</font><font color="#009900">int</font><font color="#990000">*)</font>T<font color="#990000">-&gt;</font>j<font color="#990000">)[</font>k<font color="#990000">]</font>    <font color="#990000">=</font> c<font color="#990000">;</font>
               <font color="#990000">((</font><font color="#009900">double</font><font color="#990000">*)</font>T<font color="#990000">-&gt;</font>x<font color="#990000">)[</font>k<font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">;</font>
               T<font color="#990000">-&gt;</font>nnz<font color="#990000">++;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     
     <font color="#009900">bool</font> <b><font color="#000000">cholmod_solve2_a_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
     <font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
          <font color="#009900">double</font> eps <font color="#990000">=</font> <font color="#993399">100</font><font color="#990000">.</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
     
          <i><font color="#9A1900">// Example of checking for cholmod-3.0.4</font></i>
          <i><font color="#9A1900">// (which is distributed as part of SuiteSparse-4.4.3)</font></i>
          <i><font color="#9A1900">// int version[3];</font></i>
          <i><font color="#9A1900">// cholmod_version(version);</font></i>
          <i><font color="#9A1900">// ok &amp;= version[0] == 3;</font></i>
          <i><font color="#9A1900">// ok &amp;= version[1] == 0;</font></i>
          <i><font color="#9A1900">// ok &amp;= version[2] == 4;</font></i>
     
          <font color="#009900">double</font> A_inv<font color="#990000">[]</font> <font color="#990000">=</font> <font color="#FF0000">{</font>
                <font color="#993399">24.0</font><font color="#990000">,</font> <font color="#990000">-</font><font color="#993399">18.0</font><font color="#990000">,</font> <font color="#990000">-</font><font color="#993399">6.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font>
               <font color="#990000">-</font><font color="#993399">18.0</font><font color="#990000">,</font>  <font color="#993399">21.0</font><font color="#990000">,</font>  <font color="#993399">3.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font>
                <font color="#990000">-</font><font color="#993399">6.0</font><font color="#990000">,</font>   <font color="#993399">3.0</font><font color="#990000">,</font>  <font color="#993399">9.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font>
                 <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">24.0</font><font color="#990000">,</font> <font color="#990000">-</font><font color="#993399">18.0</font><font color="#990000">,</font> <font color="#990000">-</font><font color="#993399">6.0</font><font color="#990000">,</font>
                 <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font> <font color="#990000">-</font><font color="#993399">18.0</font><font color="#990000">,</font>  <font color="#993399">21.0</font><font color="#990000">,</font>  <font color="#993399">3.0</font><font color="#990000">,</font>
                 <font color="#993399">0.0</font><font color="#990000">,</font>   <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#993399">0.0</font><font color="#990000">,</font>  <font color="#990000">-</font><font color="#993399">6.0</font><font color="#990000">,</font>   <font color="#993399">3.0</font><font color="#990000">,</font>  <font color="#993399">9.0</font>
          <font color="#FF0000">}</font><font color="#990000">;</font>
          <font color="#008080">size_t</font> nrow <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">;</font>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nrow <font color="#990000">*</font> nrow<font color="#990000">;</font> i<font color="#990000">++)</font>
               A_inv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">/=</font> <font color="#993399">36</font><font color="#990000">.;</font>
     
          <i><font color="#9A1900">// initialize common</font></i>
          <font color="#008080">cholmod_common</font> com<font color="#990000">;</font>
          <b><font color="#000000">cholmod_start</font></b><font color="#990000">(&amp;</font>com<font color="#990000">);</font>
     
          <i><font color="#9A1900">// always do simplicial factorization</font></i>
          com<font color="#990000">.</font>supernodal <font color="#990000">=</font> CHOLMOD_SIMPLICIAL<font color="#990000">;</font>
     
          <i><font color="#9A1900">// do LDL' factorization and leave in LDL' form</font></i>
          com<font color="#990000">.</font>final_ll <font color="#990000">=</font> CHOLMOD_FALSE<font color="#990000">;</font>
     
          <i><font color="#9A1900">// allocate triplet</font></i>
          <font color="#008080">size_t</font> ncol <font color="#990000">=</font> nrow<font color="#990000">;</font>
          <font color="#008080">size_t</font> nzmax <font color="#990000">=</font> nrow <font color="#990000">*</font> ncol<font color="#990000">;</font>
          <font color="#009900">int</font>    T_stype <font color="#990000">=</font> CHOLMOD_STYPE_LOWER_TRIANGLE<font color="#990000">;</font>
          <font color="#009900">int</font>    T_xtype <font color="#990000">=</font> CHOLMOD_REAL<font color="#990000">;</font>
          <font color="#008080">cholmod_triplet</font> <font color="#990000">*</font>T <font color="#990000">=</font>
               <b><font color="#000000">cholmod_allocate_triplet</font></b><font color="#990000">(</font>nrow<font color="#990000">,</font> ncol<font color="#990000">,</font> nzmax<font color="#990000">,</font> T_stype<font color="#990000">,</font> T_xtype<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          ok <font color="#990000">&amp;=</font> T<font color="#990000">-&gt;</font>nnz <font color="#990000">==</font>  <font color="#993399">0</font><font color="#990000">;</font>
     
          <i><font color="#9A1900">// triplet entries corresponding to lower triangle of A</font></i>
          <i><font color="#9A1900">// first G block</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_00 = 5</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_10 = 4</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_20 = 2</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_11 = 5</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_21 = 1</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_22 = 5</font></i>
          <i><font color="#9A1900">// second G block</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">3</font><font color="#990000">,</font> <font color="#993399">3</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_33 = 5</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">,</font> <font color="#993399">3</font><font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_43 = 4</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">,</font> <font color="#993399">3</font><font color="#990000">,</font> <font color="#993399">2</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_53 = 2</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_44 = 5</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_54 = 1</font></i>
          <b><font color="#000000">add_T_entry</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">,</font> <font color="#993399">5</font><font color="#990000">.);</font> <i><font color="#9A1900">// A_55 = 5</font></i>
     
          <i><font color="#9A1900">// convert triplet to sparse representation of A</font></i>
          cholmod_sparse<font color="#990000">*</font> A <font color="#990000">=</font> <b><font color="#000000">cholmod_triplet_to_sparse</font></b><font color="#990000">(</font>T<font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
     
          <i><font color="#9A1900">// factor the matrix</font></i>
          <font color="#008080">cholmod_factor</font> <font color="#990000">*</font>L <font color="#990000">=</font> <b><font color="#000000">cholmod_analyze</font></b><font color="#990000">(</font>A<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
<b><font color="#000080">     # ifndef</font></b> NDEBUG
          <font color="#009900">int</font> flag <font color="#990000">=</font>
<b><font color="#000080">     # endif</font></b>
          <b><font color="#000000">cholmod_factorize</font></b><font color="#990000">(</font>A<font color="#990000">,</font> L<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
     
          <i><font color="#9A1900">// check properties of factor</font></i>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> flag     <font color="#990000">==</font> CHOLMOD_TRUE <font color="#990000">);</font>  <i><font color="#9A1900">// return flag OK</font></i>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> L<font color="#990000">-&gt;</font>n     <font color="#990000">==</font> nrow <font color="#990000">);</font>          <i><font color="#9A1900">// number of rows and coluns</font></i>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> L<font color="#990000">-&gt;</font>minor <font color="#990000">==</font> nrow <font color="#990000">);</font>          <i><font color="#9A1900">// successful factorization</font></i>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> L<font color="#990000">-&gt;</font>is_ll <font color="#990000">==</font> CHOLMOD_FALSE <font color="#990000">);</font> <i><font color="#9A1900">// factorization is LDL'</font></i>
          <b><font color="#000000">assert</font></b><font color="#990000">(</font> com<font color="#990000">.</font>status <font color="#990000">==</font> CHOLMOD_OK <font color="#990000">);</font>  <i><font color="#9A1900">// no problem with factorization</font></i>
     
          <i><font color="#9A1900">// sparsity pattern for right hand side column vector</font></i>
          <font color="#008080">size_t</font> Bset_nrow       <font color="#990000">=</font> nrow<font color="#990000">;</font>
          <font color="#008080">size_t</font> Bset_ncol       <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
          <font color="#008080">size_t</font> Bset_nzmax      <font color="#990000">=</font> nrow<font color="#990000">;</font>
          <font color="#009900">int</font>    Bset_sorted     <font color="#990000">=</font> CHOLMOD_FALSE<font color="#990000">;</font>
          <font color="#009900">int</font>    Bset_packed     <font color="#990000">=</font> CHOLMOD_TRUE<font color="#990000">;</font>
          <font color="#009900">int</font>    Bset_stype      <font color="#990000">=</font> CHOLMOD_STYPE_NOT_SYMMETRIC<font color="#990000">;</font>
          <font color="#009900">int</font>    Bset_xtype      <font color="#990000">=</font> CHOLMOD_PATTERN<font color="#990000">;</font>
          cholmod_sparse<font color="#990000">*</font> Bset <font color="#990000">=</font> <b><font color="#000000">cholmod_allocate_sparse</font></b><font color="#990000">(</font>
               Bset_nrow<font color="#990000">,</font>
               Bset_ncol<font color="#990000">,</font>
               Bset_nzmax<font color="#990000">,</font>
               Bset_sorted<font color="#990000">,</font>
               Bset_packed<font color="#990000">,</font>
               Bset_stype<font color="#990000">,</font>
               Bset_xtype<font color="#990000">,</font>
               <font color="#990000">&amp;</font>com
          <font color="#990000">);</font>
          <i><font color="#9A1900">// We need to solve for three components of the right hand side</font></i>
          <font color="#009900">int</font><font color="#990000">*</font> Bset_p <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">int</font> <font color="#990000">*)</font> Bset<font color="#990000">-&gt;</font>p<font color="#990000">;</font>
          <font color="#009900">int</font><font color="#990000">*</font> Bset_i <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">int</font> <font color="#990000">*)</font> Bset<font color="#990000">-&gt;</font>i<font color="#990000">;</font>
          Bset_p<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>   <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
          Bset_p<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>   <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     
          <i><font color="#9A1900">// set B to a vector of ones</font></i>
          <font color="#008080">cholmod_dense</font> <font color="#990000">*</font>B <font color="#990000">=</font> <b><font color="#000000">cholmod_ones</font></b><font color="#990000">(</font>nrow<font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">,</font> T_xtype<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <font color="#009900">double</font><font color="#990000">*</font> B_x     <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">double</font> <font color="#990000">*)</font> B<font color="#990000">-&gt;</font>x<font color="#990000">;</font>
     
          <i><font color="#9A1900">// work space vectors that can be reused</font></i>
          <font color="#008080">cholmod_dense</font> <font color="#990000">*</font>Y <font color="#990000">=</font> NULL<font color="#990000">;</font>
          <font color="#008080">cholmod_dense</font> <font color="#990000">*</font>E <font color="#990000">=</font> NULL<font color="#990000">;</font>
     
          <i><font color="#9A1900">// place where the solution is returned</font></i>
          <font color="#008080">cholmod_dense</font> <font color="#990000">*</font>X <font color="#990000">=</font> NULL<font color="#990000">;</font>
          cholmod_sparse<font color="#990000">*</font> Xset <font color="#990000">=</font> NULL<font color="#990000">;</font>
     
          <i><font color="#9A1900">// one by one recover columns of A_inv</font></i>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> ncol<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>
               <i><font color="#9A1900">// set B_x to j-th column of identity matrix</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">6</font><font color="#990000">;</font> i<font color="#990000">++)</font>
                    B_x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
               B_x<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> j <font color="#990000">&lt;</font> <font color="#993399">3</font> <font color="#990000">)</font>
               <font color="#FF0000">{</font>    <i><font color="#9A1900">// we need to solve for first three components of X</font></i>
                    Bset_i<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
                    Bset_i<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
                    Bset_i<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     
                    <i><font color="#9A1900">// value of B_x in rows 3, 4, 5 do not matter</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">6</font><font color="#990000">;</font> i<font color="#990000">++)</font>
                         B_x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">else</font></b>
               <font color="#FF0000">{</font>    <i><font color="#9A1900">// we need to solve for last three components of X</font></i>
                    Bset_i<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
                    Bset_i<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
                    Bset_i<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
     
                    <i><font color="#9A1900">// value of B_x in rows 0, 1, 2 do not matter</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">3</font><font color="#990000">;</font> i<font color="#990000">++)</font>
                         B_x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
               <font color="#FF0000">}</font>
     
               <i><font color="#9A1900">// solve A * x = b</font></i>
               <font color="#009900">int</font> sys <font color="#990000">=</font> CHOLMOD_A<font color="#990000">;</font>
<b><font color="#000080">     # ifndef</font></b> NDEBUG
               flag <font color="#990000">=</font>
<b><font color="#000080">     # endif</font></b>
               <b><font color="#000000">cholmod_solve2</font></b><font color="#990000">(</font>
                    sys<font color="#990000">,</font>
                    L<font color="#990000">,</font>
                    B<font color="#990000">,</font>
                    Bset<font color="#990000">,</font>
                    <font color="#990000">&amp;</font>X<font color="#990000">,</font>
                    <font color="#990000">&amp;</font>Xset<font color="#990000">,</font>
                    <font color="#990000">&amp;</font>Y<font color="#990000">,</font>
                    <font color="#990000">&amp;</font>E<font color="#990000">,</font>
                    <font color="#990000">&amp;</font>com
               <font color="#990000">);</font>
               <i><font color="#9A1900">//</font></i>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> flag <font color="#990000">==</font> CHOLMOD_TRUE <font color="#990000">);</font> <i><font color="#9A1900">// return flag OK</font></i>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> Xset<font color="#990000">-&gt;</font>nrow   <font color="#990000">==</font> nrow <font color="#990000">);</font>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> Xset<font color="#990000">-&gt;</font>ncol   <font color="#990000">==</font> <font color="#993399">1</font>    <font color="#990000">);</font>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> Xset<font color="#990000">-&gt;</font>xtype  <font color="#990000">==</font> CHOLMOD_PATTERN <font color="#990000">);</font>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> Xset<font color="#990000">-&gt;</font>packed <font color="#990000">==</font> CHOLMOD_TRUE<font color="#990000">);</font>
               <i><font color="#9A1900">//</font></i>
               <i><font color="#9A1900">// The four arrays Xset, X, Y, E may change each time</font></i>
               <font color="#009900">double</font><font color="#990000">*</font> X_x     <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">double</font> <font color="#990000">*)</font> X<font color="#990000">-&gt;</font>x<font color="#990000">;</font>
               <font color="#009900">int</font><font color="#990000">*</font>    Xset_p  <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">int</font> <font color="#990000">*)</font> Xset<font color="#990000">-&gt;</font>p<font color="#990000">;</font>
               <font color="#009900">int</font><font color="#990000">*</font>    Xset_i  <font color="#990000">=</font> <font color="#990000">(</font><font color="#009900">int</font> <font color="#990000">*)</font> Xset<font color="#990000">-&gt;</font>i<font color="#990000">;</font>
               <font color="#008080">size_t</font>  ni      <font color="#990000">=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> Xset_p<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">);</font>
               <i><font color="#9A1900">//</font></i>
               <i><font color="#9A1900">// solution vector for this right hand side</font></i>
               CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>nrow<font color="#990000">);</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nrow<font color="#990000">;</font> i<font color="#990000">++)</font>
                    x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> ni<font color="#990000">;</font> k<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <font color="#008080">size_t</font> i <font color="#990000">=</font> Xset_i<font color="#990000">[</font>k<font color="#990000">];</font>
                    x<font color="#990000">[</font>i<font color="#990000">]</font>     <font color="#990000">=</font> X_x<font color="#990000">[</font>i<font color="#990000">];</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nrow<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <font color="#009900">double</font> check_i <font color="#990000">=</font> A_inv<font color="#990000">[</font> i <font color="#990000">*</font> nrow <font color="#990000">+</font> j<font color="#990000">];</font>
                    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> check_i <font color="#990000">==</font> <font color="#993399">0.0</font> <font color="#990000">)</font>
                         ok <font color="#990000">&amp;=</font> x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0.0</font><font color="#990000">;</font>
                    <b><font color="#0000FF">else</font></b>
                         ok <font color="#990000">&amp;=</font> std<font color="#990000">::</font><b><font color="#000000">fabs</font></b><font color="#990000">(</font> x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">/</font> check_i <font color="#990000">-</font> <font color="#993399">1.0</font> <font color="#990000">)</font> <font color="#990000">&lt;=</font> eps<font color="#990000">;</font>
               <font color="#FF0000">}</font>
          <font color="#FF0000">}</font>
     
          <i><font color="#9A1900">// free memory</font></i>
          <b><font color="#000000">cholmod_free_triplet</font></b><font color="#990000">(&amp;</font>T<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_sparse</font></b><font color="#990000">(</font> <font color="#990000">&amp;</font>A<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_factor</font></b><font color="#990000">(</font> <font color="#990000">&amp;</font>L<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_sparse</font></b><font color="#990000">(</font> <font color="#990000">&amp;</font>Bset<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_sparse</font></b><font color="#990000">(</font> <font color="#990000">&amp;</font>Xset<font color="#990000">,</font> <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_dense</font></b><font color="#990000">(</font>  <font color="#990000">&amp;</font>B<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_dense</font></b><font color="#990000">(</font>  <font color="#990000">&amp;</font>Y<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_dense</font></b><font color="#990000">(</font>  <font color="#990000">&amp;</font>E<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
          <b><font color="#000000">cholmod_free_dense</font></b><font color="#990000">(</font>  <font color="#990000">&amp;</font>X<font color="#990000">,</font>    <font color="#990000">&amp;</font>com<font color="#990000">);</font>
     
          <i><font color="#9A1900">// finish up</font></i>
          <b><font color="#000000">cholmod_finish</font></b><font color="#990000">(&amp;</font>com<font color="#990000">);</font>
     
          <i><font color="#9A1900">// check count of malloc'ed - free'd</font></i>
          ok <font color="#990000">&amp;=</font> com<font color="#990000">.</font>malloc_count <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
     
          <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
     <font color="#FF0000">}</font></tt></pre>
</font></code>
<hr>Input File: example/private/cholmod_solve2_a.cpp

</body>
</html>
