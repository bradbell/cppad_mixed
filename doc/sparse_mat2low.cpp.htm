<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>sparse_mat2low: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="sparse_mat2low: Example and Test">
<meta name="keywords" id="keywords" content=" sparse_mat2low: example test private ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_mat2low.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="sparse_mat2low.htm" target="_top">Prev</a>
</td><td><a href="sparse_eigen2info.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_mixed</option>
<option>namespace</option>
<option>sparse_mat2low</option>
<option>sparse_mat2low.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_mixed-&gt;</option>
<option>install_unix</option>
<option>theory</option>
<option>base_class</option>
<option>namespace</option>
<option>user</option>
<option>whats_new_17</option>
<option>wish_list</option>
<option>math_notation</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>namespace-&gt;</option>
<option>typedef</option>
<option>configure.hpp</option>
<option>exception</option>
<option>fixed_solution</option>
<option>ipopt_app_status</option>
<option>ipopt_fixed</option>
<option>ldlt_cholmod</option>
<option>ldlt_eigen</option>
<option>manage_gsl_rng</option>
<option>newton_step</option>
<option>sparse_hes_rcv</option>
<option>sparse_hes_info</option>
<option>sparse_jac_rcv</option>
<option>sparse_mat_info</option>
<option>triple2eigen</option>
<option>undetermined</option>
<option>sparse_low_tri_sol</option>
<option>sparse_up_tri_sol</option>
<option>sparse_scale_diag</option>
<option>sparse_low2sym</option>
<option>sparse_mat2low</option>
<option>sparse_eigen2info</option>
<option>sparse_info2eigen</option>
<option>sparse_ad_cholesky</option>
<option>sparse_print</option>
<option>sparsity_print</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>sparse_mat2low-&gt;</option>
<option>sparse_mat2low.cpp</option>
</select>
</td>
<td>sparse_mat2low.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Private</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>sparse_mat2low: Example and Test</big></big></b></center>
<br>
<b><big><a name="Private" id="Private">Private</a></big></b>
<br>
This example is not part of the
<a href="public.htm" target="_top"><span style='white-space: nowrap'>cppad_mixed&nbsp;public&nbsp;API</span></a>
.

<code><font color="blue">
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cstddef&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/mixed/sparse_mat2low.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">sparse_mat2low_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">typedef</font></b> Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt;size_t&gt;</font> sparse_matrix<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#008080">size_t</font> nr <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">sparse_matrix</font> <b><font color="#000000">matrix</font></b><font color="#990000">(</font>nr<font color="#990000">,</font> nr<font color="#990000">);</font>
     Eigen<font color="#990000">::</font><font color="#008080">Matrix&lt;size_t, Eigen::Dynamic, Eigen::Dynamic&gt;</font> <b><font color="#000000">check</font></b><font color="#990000">(</font>nr<font color="#990000">,</font> nr<font color="#990000">);</font>
     <font color="#008080">size_t</font> count <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nr<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> nr<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    matrix<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font> <font color="#990000">=</font> count<font color="#990000">;</font>
               <b><font color="#000000">check</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">)</font>         <font color="#990000">=</font> count<font color="#990000">;</font>
               <font color="#990000">++</font>count<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <font color="#008080">sparse_matrix</font> lower <font color="#990000">=</font> CppAD<font color="#990000">::</font>mixed<font color="#990000">::</font><b><font color="#000000">sparse_mat2low</font></b><font color="#990000">(</font>matrix<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// check the result values</font></i>
     count <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nr<font color="#990000">;</font> k<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>sparse_matrix<font color="#990000">::</font><font color="#008080">InnerIterator</font> <b><font color="#000000">itr</font></b><font color="#990000">(</font>lower<font color="#990000">,</font> k<font color="#990000">);</font> itr<font color="#990000">;</font> <font color="#990000">++</font>itr<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <font color="#009900">int</font> i <font color="#990000">=</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">();</font>
               <font color="#009900">int</font> j <font color="#990000">=</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">();</font>
               ok   <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> <b><font color="#000000">check</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
               <i><font color="#9A1900">// make sure only lower triangle is inclued</font></i>
               ok   <font color="#990000">&amp;=</font> j <font color="#990000">&lt;=</font> i<font color="#990000">;</font>
               <font color="#990000">++</font>count<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// make sure all of lower traingle is included</font></i>
     ok <font color="#990000">&amp;=</font> count <font color="#990000">==</font> <font color="#990000">(</font>nr <font color="#990000">*</font> <font color="#990000">(</font>nr <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
</font></code>
<hr>Input File: example/private/sparse_mat2low.cpp

</body>
</html>
